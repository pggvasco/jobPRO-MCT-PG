'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.269
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports Castle.ActiveRecord
Imports Castle.Components.Validator
Imports System
Imports System.Collections
Imports System.Collections.Generic
Imports System.ComponentModel


<Serializable()>  _
Partial Public MustInherit Class ActivityBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Activity)
    
    Private _estimatedStartDate As System.Nullable(Of Date)
    
    Private _estimatedDuration As System.Nullable(Of Double)
    
    Private _estimatedElapsedDuration As System.Nullable(Of Double)
    
    Private _actualStartDate As System.Nullable(Of Date)
    
    Private _actualDuration As System.Nullable(Of Double)
    
    Private _actualElapsedDuration As System.Nullable(Of Double)
    
    Private _sequence As System.Nullable(Of Integer)
    
    Private _estimatedArtisanCost As System.Nullable(Of Double)
    
    Private _estimatedMachineCost As System.Nullable(Of Double)
    
    Private _estimatedOperationCost As System.Nullable(Of Double)
    
    Private _actualArtisanCost As System.Nullable(Of Double)
    
    Private _actualMachineCost As System.Nullable(Of Double)
    
    Private _actualOperationCost As System.Nullable(Of Double)
    
    Private _isActualsPosted As System.Nullable(Of Boolean)
    
    Private _description As String
    
    Private _isNextActivity As System.Nullable(Of Boolean)
    
    Private _comments As String
    
    Private _isMaterialAvailable As System.Nullable(Of Boolean)
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _activityLogs As IList(Of ActivityLog) = New List(Of ActivityLog)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _qIRs As IList(Of QIR) = New List(Of QIR)()
    
    Private _artisan As Artisan
    
    Private _job As Job
    
    Private _machine As Machine
    
    Private _operation As Operation
    
    Private _part As Part
    
    <[Property]("EstimatedStartDate", ColumnType:="DateTime")>  _
    Public Overridable Property EstimatedStartDate() As System.Nullable(Of Date)
        Get
            Return Me._estimatedStartDate
        End Get
        Set
            If ((_estimatedStartDate <> value)  _
                        Or (_estimatedStartDate Is Nothing)) Then
                Me._estimatedStartDate = value
                Me.NotifyPropertyChanged("EstimatedStartDate")
            End If
        End Set
    End Property
    
    <[Property]("EstimatedDuration", ColumnType:="Double")>  _
    Public Overridable Property EstimatedDuration() As System.Nullable(Of Double)
        Get
            Return Me._estimatedDuration
        End Get
        Set
            If ((_estimatedDuration <> value)  _
                        Or (_estimatedDuration Is Nothing)) Then
                Me._estimatedDuration = value
                Me.NotifyPropertyChanged("EstimatedDuration")
            End If
        End Set
    End Property
    
    <[Property]("EstimatedElapsedDuration", ColumnType:="Double")>  _
    Public Overridable Property EstimatedElapsedDuration() As System.Nullable(Of Double)
        Get
            Return Me._estimatedElapsedDuration
        End Get
        Set
            If ((_estimatedElapsedDuration <> value)  _
                        Or (_estimatedElapsedDuration Is Nothing)) Then
                Me._estimatedElapsedDuration = value
                Me.NotifyPropertyChanged("EstimatedElapsedDuration")
            End If
        End Set
    End Property
    
    <[Property]("ActualStartDate", ColumnType:="DateTime")>  _
    Public Overridable Property ActualStartDate() As System.Nullable(Of Date)
        Get
            Return Me._actualStartDate
        End Get
        Set
            If ((_actualStartDate <> value)  _
                        Or (_actualStartDate Is Nothing)) Then
                Me._actualStartDate = value
                Me.NotifyPropertyChanged("ActualStartDate")
            End If
        End Set
    End Property
    
    <[Property]("ActualDuration", ColumnType:="Double")>  _
    Public Overridable Property ActualDuration() As System.Nullable(Of Double)
        Get
            Return Me._actualDuration
        End Get
        Set
            If ((_actualDuration <> value)  _
                        Or (_actualDuration Is Nothing)) Then
                Me._actualDuration = value
                Me.NotifyPropertyChanged("ActualDuration")
            End If
        End Set
    End Property
    
    <[Property]("ActualElapsedDuration", ColumnType:="Double")>  _
    Public Overridable Property ActualElapsedDuration() As System.Nullable(Of Double)
        Get
            Return Me._actualElapsedDuration
        End Get
        Set
            If ((_actualElapsedDuration <> value)  _
                        Or (_actualElapsedDuration Is Nothing)) Then
                Me._actualElapsedDuration = value
                Me.NotifyPropertyChanged("ActualElapsedDuration")
            End If
        End Set
    End Property
    
    <[Property]("Sequence", ColumnType:="Int32")>  _
    Public Overridable Property Sequence() As System.Nullable(Of Integer)
        Get
            Return Me._sequence
        End Get
        Set
            If ((_sequence <> value)  _
                        Or (_sequence Is Nothing)) Then
                Me._sequence = value
                Me.NotifyPropertyChanged("Sequence")
            End If
        End Set
    End Property
    
    <[Property]("EstimatedArtisanCost", ColumnType:="Double")>  _
    Public Overridable Property EstimatedArtisanCost() As System.Nullable(Of Double)
        Get
            Return Me._estimatedArtisanCost
        End Get
        Set
            If ((_estimatedArtisanCost <> value)  _
                        Or (_estimatedArtisanCost Is Nothing)) Then
                Me._estimatedArtisanCost = value
                Me.NotifyPropertyChanged("EstimatedArtisanCost")
            End If
        End Set
    End Property
    
    <[Property]("EstimatedMachineCost", ColumnType:="Double")>  _
    Public Overridable Property EstimatedMachineCost() As System.Nullable(Of Double)
        Get
            Return Me._estimatedMachineCost
        End Get
        Set
            If ((_estimatedMachineCost <> value)  _
                        Or (_estimatedMachineCost Is Nothing)) Then
                Me._estimatedMachineCost = value
                Me.NotifyPropertyChanged("EstimatedMachineCost")
            End If
        End Set
    End Property
    
    <[Property]("EstimatedOperationCost", ColumnType:="Double")>  _
    Public Overridable Property EstimatedOperationCost() As System.Nullable(Of Double)
        Get
            Return Me._estimatedOperationCost
        End Get
        Set
            If ((_estimatedOperationCost <> value)  _
                        Or (_estimatedOperationCost Is Nothing)) Then
                Me._estimatedOperationCost = value
                Me.NotifyPropertyChanged("EstimatedOperationCost")
            End If
        End Set
    End Property
    
    <[Property]("ActualArtisanCost", ColumnType:="Double")>  _
    Public Overridable Property ActualArtisanCost() As System.Nullable(Of Double)
        Get
            Return Me._actualArtisanCost
        End Get
        Set
            If ((_actualArtisanCost <> value)  _
                        Or (_actualArtisanCost Is Nothing)) Then
                Me._actualArtisanCost = value
                Me.NotifyPropertyChanged("ActualArtisanCost")
            End If
        End Set
    End Property
    
    <[Property]("ActualMachineCost", ColumnType:="Double")>  _
    Public Overridable Property ActualMachineCost() As System.Nullable(Of Double)
        Get
            Return Me._actualMachineCost
        End Get
        Set
            If ((_actualMachineCost <> value)  _
                        Or (_actualMachineCost Is Nothing)) Then
                Me._actualMachineCost = value
                Me.NotifyPropertyChanged("ActualMachineCost")
            End If
        End Set
    End Property
    
    <[Property]("ActualOperationCost", ColumnType:="Double")>  _
    Public Overridable Property ActualOperationCost() As System.Nullable(Of Double)
        Get
            Return Me._actualOperationCost
        End Get
        Set
            If ((_actualOperationCost <> value)  _
                        Or (_actualOperationCost Is Nothing)) Then
                Me._actualOperationCost = value
                Me.NotifyPropertyChanged("ActualOperationCost")
            End If
        End Set
    End Property
    
    <[Property]("IsActualsPosted", ColumnType:="Boolean")>  _
    Public Overridable Property IsActualsPosted() As System.Nullable(Of Boolean)
        Get
            Return Me._isActualsPosted
        End Get
        Set
            If ((_isActualsPosted <> value)  _
                        Or (_isActualsPosted Is Nothing)) Then
                Me._isActualsPosted = value
                Me.NotifyPropertyChanged("IsActualsPosted")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("IsNextActivity", ColumnType:="Boolean")>  _
    Public Overridable Property IsNextActivity() As System.Nullable(Of Boolean)
        Get
            Return Me._isNextActivity
        End Get
        Set
            If ((_isNextActivity <> value)  _
                        Or (_isNextActivity Is Nothing)) Then
                Me._isNextActivity = value
                Me.NotifyPropertyChanged("IsNextActivity")
            End If
        End Set
    End Property
    
    <[Property]("Comments", ColumnType:="String")>  _
    Public Overridable Property Comments() As String
        Get
            Return Me._comments
        End Get
        Set
            If (_comments <> value) Then
                Me._comments = value
                Me.NotifyPropertyChanged("Comments")
            End If
        End Set
    End Property
    
    <[Property]("IsMaterialAvailable", ColumnType:="Boolean")>  _
    Public Overridable Property IsMaterialAvailable() As System.Nullable(Of Boolean)
        Get
            Return Me._isMaterialAvailable
        End Get
        Set
            If ((_isMaterialAvailable <> value)  _
                        Or (_isMaterialAvailable Is Nothing)) Then
                Me._isMaterialAvailable = value
                Me.NotifyPropertyChanged("IsMaterialAvailable")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(ActivityLog), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="ActivityID", Lazy:=true, Table:="ussSSActivityLog")>  _
    Protected Overridable Property ActivityLogs() As IList(Of ActivityLog)
        Get
            Return Me._activityLogs
        End Get
        Set
            Me._activityLogs = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(QIR), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="ActivityID", Lazy:=true, Table:="ussSSQIR")>  _
    Protected Overridable Property QIRs() As IList(Of QIR)
        Get
            Return Me._qIRs
        End Get
        Set
            Me._qIRs = value
        End Set
    End Property
    
    <BelongsTo("ArtisanID", Cascade:=CascadeEnum.SaveUpdate)>  _
    Public Overridable Property Artisan() As Artisan
        Get
            Return Me._artisan
        End Get
        Set
            If (_artisan <> value) Then
                Me._artisan = value
                Me.NotifyPropertyChanged("Artisan")
            End If
        End Set
    End Property
    
    <BelongsTo("JobID", Cascade:=CascadeEnum.SaveUpdate)>  _
    Public Overridable Property Job() As Job
        Get
            Return Me._job
        End Get
        Set
            If (_job <> value) Then
                Me._job = value
                Me.NotifyPropertyChanged("Job")
            End If
        End Set
    End Property
    
    <BelongsTo("MachineID", Cascade:=CascadeEnum.SaveUpdate)>  _
    Public Overridable Property Machine() As Machine
        Get
            Return Me._machine
        End Get
        Set
            If (_machine <> value) Then
                Me._machine = value
                Me.NotifyPropertyChanged("Machine")
            End If
        End Set
    End Property
    
    <BelongsTo("OperationID", Cascade:=CascadeEnum.SaveUpdate)>  _
    Public Overridable Property Operation() As Operation
        Get
            Return Me._operation
        End Get
        Set
            If (_operation <> value) Then
                Me._operation = value
                Me.NotifyPropertyChanged("Operation")
            End If
        End Set
    End Property
    
    <BelongsTo("PartID", Cascade:=CascadeEnum.SaveUpdate)>  _
    Public Overridable Property Part() As Part
        Get
            Return Me._part
        End Get
        Set
            If (_part <> value) Then
                Me._part = value
                Me.NotifyPropertyChanged("Part")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSSActivity", Schema:="dbo")>  _
Partial Public Class Activity
    Inherits ActivityBase
End Class

<Serializable()>  _
Partial Public MustInherit Class PartBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Part)
    
    Private _code As String
    
    Private _description As String
    
    Private _dBColour As String
    
    Private _image() As Byte
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _activities As IList(Of Activity) = New List(Of Activity)()
    
    <[Property]("Code", ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("Colour", ColumnType:="String")>  _
    Protected Overridable Property DBColour() As String
        Get
            Return Me._dBColour
        End Get
        Set
            If (_dBColour <> value) Then
                Me._dBColour = value
                Me.NotifyPropertyChanged("DBColour")
            End If
        End Set
    End Property
    
    <[Property]("Image", ColumnType:="BinaryBlob")>  _
    Public Overridable Property Image() As Byte()
        Get
            Return Me._image
        End Get
        Set
            Me._image = value
            Me.NotifyPropertyChanged("Image")
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(Activity), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="PartID", Lazy:=true, Table:="ussSSActivity")>  _
    Protected Overridable Property Activities() As IList(Of Activity)
        Get
            Return Me._activities
        End Get
        Set
            Me._activities = value
        End Set
    End Property
End Class

<ActiveRecord("ussSSPart", Schema:="dbo")>  _
Partial Public Class Part
    Inherits PartBase
End Class

<Serializable()>  _
Partial Public MustInherit Class ActivityLogBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of ActivityLog)
    
    Private _startDate As System.Nullable(Of Date)
    
    Private _duration As System.Nullable(Of Double)
    
    Private _currentState As ControlScan
    
    Private _artisanCost As System.Nullable(Of Double)
    
    Private _machineCost As System.Nullable(Of Double)
    
    Private _operationCost As System.Nullable(Of Double)
    
    Private _logTime As System.Nullable(Of Date)
    
    Private _activity As Activity
    
    Private _artisan As Artisan
    
    Private _machine As Machine
    
    Private _reasonCodeActivityLogs As ReasonCode
    
    <[Property]("StartDate", ColumnType:="DateTime")>  _
    Public Overridable Property StartDate() As System.Nullable(Of Date)
        Get
            Return Me._startDate
        End Get
        Set
            If ((_startDate <> value)  _
                        Or (_startDate Is Nothing)) Then
                Me._startDate = value
                Me.NotifyPropertyChanged("StartDate")
            End If
        End Set
    End Property
    
    <[Property]("Duration", ColumnType:="Double")>  _
    Public Overridable Property Duration() As System.Nullable(Of Double)
        Get
            Return Me._duration
        End Get
        Set
            If ((_duration <> value)  _
                        Or (_duration Is Nothing)) Then
                Me._duration = value
                Me.NotifyPropertyChanged("Duration")
            End If
        End Set
    End Property
    
    <[Property]("CurrentState", ColumnType:="Int32")>  _
    Public Overridable Property CurrentState() As ControlScan
        Get
            Return Me._currentState
        End Get
        Set
            If (_currentState <> value) Then
                Me._currentState = value
                Me.NotifyPropertyChanged("CurrentState")
            End If
        End Set
    End Property
    
    <[Property]("ArtisanCost", ColumnType:="Double")>  _
    Public Overridable Property ArtisanCost() As System.Nullable(Of Double)
        Get
            Return Me._artisanCost
        End Get
        Set
            If ((_artisanCost <> value)  _
                        Or (_artisanCost Is Nothing)) Then
                Me._artisanCost = value
                Me.NotifyPropertyChanged("ArtisanCost")
            End If
        End Set
    End Property
    
    <[Property]("MachineCost", ColumnType:="Double")>  _
    Public Overridable Property MachineCost() As System.Nullable(Of Double)
        Get
            Return Me._machineCost
        End Get
        Set
            If ((_machineCost <> value)  _
                        Or (_machineCost Is Nothing)) Then
                Me._machineCost = value
                Me.NotifyPropertyChanged("MachineCost")
            End If
        End Set
    End Property
    
    <[Property]("OperationCost", ColumnType:="Double")>  _
    Public Overridable Property OperationCost() As System.Nullable(Of Double)
        Get
            Return Me._operationCost
        End Get
        Set
            If ((_operationCost <> value)  _
                        Or (_operationCost Is Nothing)) Then
                Me._operationCost = value
                Me.NotifyPropertyChanged("OperationCost")
            End If
        End Set
    End Property
    
    <[Property]("LogTime", ColumnType:="DateTime")>  _
    Public Overridable Property LogTime() As System.Nullable(Of Date)
        Get
            Return Me._logTime
        End Get
        Set
            If ((_logTime <> value)  _
                        Or (_logTime Is Nothing)) Then
                Me._logTime = value
                Me.NotifyPropertyChanged("LogTime")
            End If
        End Set
    End Property
    
    <BelongsTo("ActivityID", Cascade:=CascadeEnum.SaveUpdate)>  _
    Public Overridable Property Activity() As Activity
        Get
            Return Me._activity
        End Get
        Set
            If (_activity <> value) Then
                Me._activity = value
                Me.NotifyPropertyChanged("Activity")
            End If
        End Set
    End Property
    
    <BelongsTo("ArtisanID", Cascade:=CascadeEnum.SaveUpdate)>  _
    Public Overridable Property Artisan() As Artisan
        Get
            Return Me._artisan
        End Get
        Set
            If (_artisan <> value) Then
                Me._artisan = value
                Me.NotifyPropertyChanged("Artisan")
            End If
        End Set
    End Property
    
    <BelongsTo("MachineID", Cascade:=CascadeEnum.SaveUpdate)>  _
    Public Overridable Property Machine() As Machine
        Get
            Return Me._machine
        End Get
        Set
            If (_machine <> value) Then
                Me._machine = value
                Me.NotifyPropertyChanged("Machine")
            End If
        End Set
    End Property
    
    <BelongsTo("ReasonCodeID", Cascade:=CascadeEnum.SaveUpdate)>  _
    Public Overridable Property ReasonCodeActivityLogs() As ReasonCode
        Get
            Return Me._reasonCodeActivityLogs
        End Get
        Set
            If (_reasonCodeActivityLogs <> value) Then
                Me._reasonCodeActivityLogs = value
                Me.NotifyPropertyChanged("ReasonCodeActivityLogs")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSSActivityLog", Schema:="dbo")>  _
Partial Public Class ActivityLog
    Inherits ActivityLogBase
End Class

<Serializable()>  _
Partial Public MustInherit Class ArtisanBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Artisan)
    
    Private _code As String
    
    Private _description As String
    
    Private _dBColour As String
    
    Private _image() As Byte
    
    Private _rate As System.Nullable(Of Double)
    
    Private _calendarID As System.Nullable(Of Integer)
    
    Private _serviceCode As String
    
    Private _isPrimary As System.Nullable(Of Boolean)
    
    Private _password As String
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _activities As IList(Of Activity) = New List(Of Activity)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _activityLogs As IList(Of ActivityLog) = New List(Of ActivityLog)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _logonLogs As IList(Of LogonLog) = New List(Of LogonLog)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _operationArtisans As IList(Of OperationArtisan) = New List(Of OperationArtisan)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _machineArtisans As IList(Of MachineArtisan) = New List(Of MachineArtisan)()
    
    Private _costCentre As CostCentre
    
    Private _machine As Machine
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _operations As IList(Of Operation) = New List(Of Operation)()
    
    <[Property]("Code", ColumnType:="String"),  _
     ValidateNonEmpty("""Code is a required field.""")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("Colour", ColumnType:="String")>  _
    Protected Overridable Property DBColour() As String
        Get
            Return Me._dBColour
        End Get
        Set
            If (_dBColour <> value) Then
                Me._dBColour = value
                Me.NotifyPropertyChanged("DBColour")
            End If
        End Set
    End Property
    
    <[Property]("Image", ColumnType:="BinaryBlob")>  _
    Public Overridable Property Image() As Byte()
        Get
            Return Me._image
        End Get
        Set
            Me._image = value
            Me.NotifyPropertyChanged("Image")
        End Set
    End Property
    
    <[Property]("Rate", ColumnType:="Double")>  _
    Public Overridable Property Rate() As System.Nullable(Of Double)
        Get
            Return Me._rate
        End Get
        Set
            If ((_rate <> value)  _
                        Or (_rate Is Nothing)) Then
                Me._rate = value
                Me.NotifyPropertyChanged("Rate")
            End If
        End Set
    End Property
    
    <[Property]("CalendarID", ColumnType:="Int32")>  _
    Public Overridable Property CalendarID() As System.Nullable(Of Integer)
        Get
            Return Me._calendarID
        End Get
        Set
            If ((_calendarID <> value)  _
                        Or (_calendarID Is Nothing)) Then
                Me._calendarID = value
                Me.NotifyPropertyChanged("CalendarID")
            End If
        End Set
    End Property
    
    <[Property]("ServiceCode", ColumnType:="String")>  _
    Public Overridable Property ServiceCode() As String
        Get
            Return Me._serviceCode
        End Get
        Set
            If (_serviceCode <> value) Then
                Me._serviceCode = value
                Me.NotifyPropertyChanged("ServiceCode")
            End If
        End Set
    End Property
    
    <[Property]("IsPrimary", ColumnType:="Boolean")>  _
    Public Overridable Property IsPrimary() As System.Nullable(Of Boolean)
        Get
            Return Me._isPrimary
        End Get
        Set
            If ((_isPrimary <> value)  _
                        Or (_isPrimary Is Nothing)) Then
                Me._isPrimary = value
                Me.NotifyPropertyChanged("IsPrimary")
            End If
        End Set
    End Property
    
    <[Property]("Password", ColumnType:="String"),  _
     ValidateNonEmpty("""Password is a required field.""")>  _
    Public Overridable Property Password() As String
        Get
            Return Me._password
        End Get
        Set
            If (_password <> value) Then
                Me._password = value
                Me.NotifyPropertyChanged("Password")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(Activity), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="ArtisanID", Lazy:=true, Table:="ussSSActivity")>  _
    Protected Overridable Property Activities() As IList(Of Activity)
        Get
            Return Me._activities
        End Get
        Set
            Me._activities = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(ActivityLog), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="ArtisanID", Table:="ussSSActivityLog")>  _
    Protected Overridable Property ActivityLogs() As IList(Of ActivityLog)
        Get
            Return Me._activityLogs
        End Get
        Set
            Me._activityLogs = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(LogonLog), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="ArtisanID", Table:="ussSSLogonLog")>  _
    Public Overridable Property LogonLogs() As IList(Of LogonLog)
        Get
            Return Me._logonLogs
        End Get
        Set
            Me._logonLogs = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(OperationArtisan), ColumnKey:="ArtisanID")>  _
    Public Overridable Property OperationArtisans() As IList(Of OperationArtisan)
        Get
            Return Me._operationArtisans
        End Get
        Set
            Me._operationArtisans = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(MachineArtisan), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="ArtisanID", Table:="ussSSMachineArtisans")>  _
    Public Overridable Property MachineArtisans() As IList(Of MachineArtisan)
        Get
            Return Me._machineArtisans
        End Get
        Set
            Me._machineArtisans = value
        End Set
    End Property
    
    <BelongsTo("CostCentreID", Cascade:=CascadeEnum.SaveUpdate)>  _
    Public Overridable Property CostCentre() As CostCentre
        Get
            Return Me._costCentre
        End Get
        Set
            If (_costCentre <> value) Then
                Me._costCentre = value
                Me.NotifyPropertyChanged("CostCentre")
            End If
        End Set
    End Property
    
    <BelongsTo("DefaultMachineID", Cascade:=CascadeEnum.SaveUpdate)>  _
    Public Overridable Property Machine() As Machine
        Get
            Return Me._machine
        End Get
        Set
            If (_machine <> value) Then
                Me._machine = value
                Me.NotifyPropertyChanged("Machine")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasAndBelongsToMany(GetType(Operation), ColumnRef:="OperationID", ColumnKey:="ArtisanID", Table:="ussSSOperationArtisans")>  _
    Public Overridable Property Operations() As IList(Of Operation)
        Get
            Return Me._operations
        End Get
        Set
            Me._operations = value
        End Set
    End Property
End Class

<ActiveRecord("ussSSArtisan", Schema:="dbo")>  _
Partial Public Class Artisan
    Inherits ArtisanBase
End Class

<Serializable()>  _
Partial Public MustInherit Class ConfigurationBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Configuration)
    
    Private _rateMethod As RateMethod
    
    Private _costCentreMethod As CostCentreMethod
    
    <[Property]("RateMethod", ColumnType:="Int32")>  _
    Public Overridable Property RateMethod() As RateMethod
        Get
            Return Me._rateMethod
        End Get
        Set
            If (_rateMethod <> value) Then
                Me._rateMethod = value
                Me.NotifyPropertyChanged("RateMethod")
            End If
        End Set
    End Property
    
    <[Property]("CostCentreMethod", ColumnType:="Int32")>  _
    Public Overridable Property CostCentreMethod() As CostCentreMethod
        Get
            Return Me._costCentreMethod
        End Get
        Set
            If (_costCentreMethod <> value) Then
                Me._costCentreMethod = value
                Me.NotifyPropertyChanged("CostCentreMethod")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSSConfiguration", Schema:="dbo")>  _
Partial Public Class Configuration
    Inherits ConfigurationBase
End Class

<Serializable()>  _
Partial Public MustInherit Class CostCentreBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of CostCentre)
    
    Private _code As String
    
    Private _description As String
    
    Private _transactionCode As String
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _artisans As IList(Of Artisan) = New List(Of Artisan)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _machines As IList(Of Machine) = New List(Of Machine)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _operations As IList(Of Operation) = New List(Of Operation)()
    
    <[Property]("Code", ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("TransactionCode", ColumnType:="String")>  _
    Public Overridable Property TransactionCode() As String
        Get
            Return Me._transactionCode
        End Get
        Set
            If (_transactionCode <> value) Then
                Me._transactionCode = value
                Me.NotifyPropertyChanged("TransactionCode")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(Artisan), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="CostCentreID", Lazy:=true, Table:="ussSSArtisan")>  _
    Protected Overridable Property Artisans() As IList(Of Artisan)
        Get
            Return Me._artisans
        End Get
        Set
            Me._artisans = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(Machine), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="CostCentreID", Lazy:=true, Table:="ussSSMachine")>  _
    Protected Overridable Property Machines() As IList(Of Machine)
        Get
            Return Me._machines
        End Get
        Set
            Me._machines = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(Operation), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="CostCentreID", Lazy:=true, Table:="ussSSOperation")>  _
    Protected Overridable Property Operations() As IList(Of Operation)
        Get
            Return Me._operations
        End Get
        Set
            Me._operations = value
        End Set
    End Property
End Class

<ActiveRecord("ussSSCostCentre", Schema:="dbo")>  _
Partial Public Class CostCentre
    Inherits CostCentreBase
End Class

<Serializable()>  _
Partial Public MustInherit Class CustomerBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Customer)
    
    Private _code As String
    
    Private _description As String
    
    Private _dBColour As String
    
    Private _image() As Byte
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _jobs As IList(Of Job) = New List(Of Job)()
    
    <[Property]("Code", ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("Colour", ColumnType:="String")>  _
    Protected Overridable Property DBColour() As String
        Get
            Return Me._dBColour
        End Get
        Set
            If (_dBColour <> value) Then
                Me._dBColour = value
                Me.NotifyPropertyChanged("DBColour")
            End If
        End Set
    End Property
    
    <[Property]("Image", ColumnType:="BinaryBlob")>  _
    Public Overridable Property Image() As Byte()
        Get
            Return Me._image
        End Get
        Set
            Me._image = value
            Me.NotifyPropertyChanged("Image")
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(Job), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="CustomerID", Table:="ussSSJob")>  _
    Protected Overridable Property Jobs() As IList(Of Job)
        Get
            Return Me._jobs
        End Get
        Set
            Me._jobs = value
        End Set
    End Property
End Class

<ActiveRecord("ussSSCustomer", Schema:="dbo")>  _
Partial Public Class Customer
    Inherits CustomerBase
End Class

<Serializable()>  _
Partial Public MustInherit Class JobBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Job)
    
    Private _number As String
    
    Private _description As String
    
    Private _jobDate As String
    
    Private _requiredDeliveryDate As System.Nullable(Of Date)
    
    Private _estimatedDeliveryDate As System.Nullable(Of Date)
    
    Private _orderPrice As System.Nullable(Of Double)
    
    Private _totalCost As System.Nullable(Of Double)
    
    Private _estimatedStartDate As System.Nullable(Of Date)
    
    Private _estimatedEndDate As System.Nullable(Of Date)
    
    Private _actualStartDate As System.Nullable(Of Date)
    
    Private _actualEndDate As System.Nullable(Of Date)
    
    Private _jobCardID As System.Nullable(Of Integer)
    
    Private _isMaterialAvailable As System.Nullable(Of Boolean)
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _activities As IList(Of Activity) = New List(Of Activity)()
    
    Private _customer As Customer
    
    Private _primaryArtisan As Artisan
    
    Private _drawing As Drawing
    
    <[Property]("Number", ColumnType:="String")>  _
    Public Overridable Property Number() As String
        Get
            Return Me._number
        End Get
        Set
            If (_number <> value) Then
                Me._number = value
                Me.NotifyPropertyChanged("Number")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("JobDate", ColumnType:="String")>  _
    Public Overridable Property JobDate() As String
        Get
            Return Me._jobDate
        End Get
        Set
            If (_jobDate <> value) Then
                Me._jobDate = value
                Me.NotifyPropertyChanged("JobDate")
            End If
        End Set
    End Property
    
    <[Property]("RequiredDeliveryDate", ColumnType:="DateTime")>  _
    Public Overridable Property RequiredDeliveryDate() As System.Nullable(Of Date)
        Get
            Return Me._requiredDeliveryDate
        End Get
        Set
            If ((_requiredDeliveryDate <> value)  _
                        Or (_requiredDeliveryDate Is Nothing)) Then
                Me._requiredDeliveryDate = value
                Me.NotifyPropertyChanged("RequiredDeliveryDate")
            End If
        End Set
    End Property
    
    <[Property]("EstimatedDeliveryDate", ColumnType:="DateTime")>  _
    Public Overridable Property EstimatedDeliveryDate() As System.Nullable(Of Date)
        Get
            Return Me._estimatedDeliveryDate
        End Get
        Set
            If ((_estimatedDeliveryDate <> value)  _
                        Or (_estimatedDeliveryDate Is Nothing)) Then
                Me._estimatedDeliveryDate = value
                Me.NotifyPropertyChanged("EstimatedDeliveryDate")
            End If
        End Set
    End Property
    
    <[Property]("OrderPrice", ColumnType:="Double")>  _
    Public Overridable Property OrderPrice() As System.Nullable(Of Double)
        Get
            Return Me._orderPrice
        End Get
        Set
            If ((_orderPrice <> value)  _
                        Or (_orderPrice Is Nothing)) Then
                Me._orderPrice = value
                Me.NotifyPropertyChanged("OrderPrice")
            End If
        End Set
    End Property
    
    <[Property]("TotalCost", ColumnType:="Double")>  _
    Public Overridable Property TotalCost() As System.Nullable(Of Double)
        Get
            Return Me._totalCost
        End Get
        Set
            If ((_totalCost <> value)  _
                        Or (_totalCost Is Nothing)) Then
                Me._totalCost = value
                Me.NotifyPropertyChanged("TotalCost")
            End If
        End Set
    End Property
    
    <[Property]("EstimatedStartDate", ColumnType:="DateTime")>  _
    Public Overridable Property EstimatedStartDate() As System.Nullable(Of Date)
        Get
            Return Me._estimatedStartDate
        End Get
        Set
            If ((_estimatedStartDate <> value)  _
                        Or (_estimatedStartDate Is Nothing)) Then
                Me._estimatedStartDate = value
                Me.NotifyPropertyChanged("EstimatedStartDate")
            End If
        End Set
    End Property
    
    <[Property]("EstimatedEndDate", ColumnType:="DateTime")>  _
    Public Overridable Property EstimatedEndDate() As System.Nullable(Of Date)
        Get
            Return Me._estimatedEndDate
        End Get
        Set
            If ((_estimatedEndDate <> value)  _
                        Or (_estimatedEndDate Is Nothing)) Then
                Me._estimatedEndDate = value
                Me.NotifyPropertyChanged("EstimatedEndDate")
            End If
        End Set
    End Property
    
    <[Property]("ActualStartDate", ColumnType:="DateTime")>  _
    Public Overridable Property ActualStartDate() As System.Nullable(Of Date)
        Get
            Return Me._actualStartDate
        End Get
        Set
            If ((_actualStartDate <> value)  _
                        Or (_actualStartDate Is Nothing)) Then
                Me._actualStartDate = value
                Me.NotifyPropertyChanged("ActualStartDate")
            End If
        End Set
    End Property
    
    <[Property]("ActualEndDate", ColumnType:="DateTime")>  _
    Public Overridable Property ActualEndDate() As System.Nullable(Of Date)
        Get
            Return Me._actualEndDate
        End Get
        Set
            If ((_actualEndDate <> value)  _
                        Or (_actualEndDate Is Nothing)) Then
                Me._actualEndDate = value
                Me.NotifyPropertyChanged("ActualEndDate")
            End If
        End Set
    End Property
    
    <[Property]("JobCardID", ColumnType:="Int32")>  _
    Public Overridable Property JobCardID() As System.Nullable(Of Integer)
        Get
            Return Me._jobCardID
        End Get
        Set
            If ((_jobCardID <> value)  _
                        Or (_jobCardID Is Nothing)) Then
                Me._jobCardID = value
                Me.NotifyPropertyChanged("JobCardID")
            End If
        End Set
    End Property
    
    <[Property]("IsMaterialAvailable", ColumnType:="Boolean")>  _
    Public Overridable Property IsMaterialAvailable() As System.Nullable(Of Boolean)
        Get
            Return Me._isMaterialAvailable
        End Get
        Set
            If ((_isMaterialAvailable <> value)  _
                        Or (_isMaterialAvailable Is Nothing)) Then
                Me._isMaterialAvailable = value
                Me.NotifyPropertyChanged("IsMaterialAvailable")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(Activity), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="JobID", Lazy:=true, Table:="ussSSActivity")>  _
    Protected Overridable Property Activities() As IList(Of Activity)
        Get
            Return Me._activities
        End Get
        Set
            Me._activities = value
        End Set
    End Property
    
    <BelongsTo("CustomerID", Cascade:=CascadeEnum.SaveUpdate)>  _
    Public Overridable Property Customer() As Customer
        Get
            Return Me._customer
        End Get
        Set
            If (_customer <> value) Then
                Me._customer = value
                Me.NotifyPropertyChanged("Customer")
            End If
        End Set
    End Property
    
    <BelongsTo("PrimaryArtisanID", Cascade:=CascadeEnum.SaveUpdate)>  _
    Public Overridable Property PrimaryArtisan() As Artisan
        Get
            Return Me._primaryArtisan
        End Get
        Set
            If (_primaryArtisan <> value) Then
                Me._primaryArtisan = value
                Me.NotifyPropertyChanged("PrimaryArtisan")
            End If
        End Set
    End Property
    
    <BelongsTo("DrawingID", Cascade:=CascadeEnum.SaveUpdate)>  _
    Public Overridable Property Drawing() As Drawing
        Get
            Return Me._drawing
        End Get
        Set
            If (_drawing <> value) Then
                Me._drawing = value
                Me.NotifyPropertyChanged("Drawing")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSSJob", Schema:="dbo")>  _
Partial Public Class Job
    Inherits JobBase
End Class

<Serializable()>  _
Partial Public MustInherit Class MachineBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Machine)
    
    Private _code As String
    
    Private _description As String
    
    Private _dBColour As String
    
    Private _image() As Byte
    
    Private _rate As System.Nullable(Of Double)
    
    Private _calendarID As System.Nullable(Of Integer)
    
    Private _serviceCode As String
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _activities As IList(Of Activity) = New List(Of Activity)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _activityLogs As IList(Of ActivityLog) = New List(Of ActivityLog)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _artisans As IList(Of Artisan) = New List(Of Artisan)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _logonLogs As IList(Of LogonLog) = New List(Of LogonLog)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _operationMachines As IList(Of OperationMachine) = New List(Of OperationMachine)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _machineArtisans As IList(Of MachineArtisan) = New List(Of MachineArtisan)()
    
    Private _costCentre As CostCentre
    
    <[Property]("Code", ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("Colour", ColumnType:="String")>  _
    Protected Overridable Property DBColour() As String
        Get
            Return Me._dBColour
        End Get
        Set
            If (_dBColour <> value) Then
                Me._dBColour = value
                Me.NotifyPropertyChanged("DBColour")
            End If
        End Set
    End Property
    
    <[Property]("Image", ColumnType:="BinaryBlob")>  _
    Public Overridable Property Image() As Byte()
        Get
            Return Me._image
        End Get
        Set
            Me._image = value
            Me.NotifyPropertyChanged("Image")
        End Set
    End Property
    
    <[Property]("Rate", ColumnType:="Double")>  _
    Public Overridable Property Rate() As System.Nullable(Of Double)
        Get
            Return Me._rate
        End Get
        Set
            If ((_rate <> value)  _
                        Or (_rate Is Nothing)) Then
                Me._rate = value
                Me.NotifyPropertyChanged("Rate")
            End If
        End Set
    End Property
    
    <[Property]("CalendarID", ColumnType:="Int32")>  _
    Public Overridable Property CalendarID() As System.Nullable(Of Integer)
        Get
            Return Me._calendarID
        End Get
        Set
            If ((_calendarID <> value)  _
                        Or (_calendarID Is Nothing)) Then
                Me._calendarID = value
                Me.NotifyPropertyChanged("CalendarID")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property ServiceCode() As String
        Get
            Return Me._serviceCode
        End Get
        Set
            If (_serviceCode <> value) Then
                Me._serviceCode = value
                Me.NotifyPropertyChanged("ServiceCode")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(Activity), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="MachineID", Lazy:=true, Table:="ussSSActivity")>  _
    Protected Overridable Property Activities() As IList(Of Activity)
        Get
            Return Me._activities
        End Get
        Set
            Me._activities = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(ActivityLog), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="MachineID", Lazy:=true, Table:="ussSSActivityLog")>  _
    Protected Overridable Property ActivityLogs() As IList(Of ActivityLog)
        Get
            Return Me._activityLogs
        End Get
        Set
            Me._activityLogs = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(Artisan), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="DefaultMachineID", Lazy:=true, Table:="ussSSArtisan")>  _
    Protected Overridable Property Artisans() As IList(Of Artisan)
        Get
            Return Me._artisans
        End Get
        Set
            Me._artisans = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(LogonLog), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="MachineID", Lazy:=true, Table:="ussSSLogonLog")>  _
    Public Overridable Property LogonLogs() As IList(Of LogonLog)
        Get
            Return Me._logonLogs
        End Get
        Set
            Me._logonLogs = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(OperationMachine), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="MachineID", Table:="ussSSOperationMachines")>  _
    Public Overridable Property OperationMachines() As IList(Of OperationMachine)
        Get
            Return Me._operationMachines
        End Get
        Set
            Me._operationMachines = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(MachineArtisan), ColumnKey:="MachineID", Table:="ussSSMachineArtisans")>  _
    Public Overridable Property MachineArtisans() As IList(Of MachineArtisan)
        Get
            Return Me._machineArtisans
        End Get
        Set
            Me._machineArtisans = value
        End Set
    End Property
    
    <BelongsTo("CostCentreID", Cascade:=CascadeEnum.SaveUpdate)>  _
    Public Overridable Property CostCentre() As CostCentre
        Get
            Return Me._costCentre
        End Get
        Set
            If (_costCentre <> value) Then
                Me._costCentre = value
                Me.NotifyPropertyChanged("CostCentre")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSSMachine", Schema:="dbo")>  _
Partial Public Class Machine
    Inherits MachineBase
End Class

<Serializable()>  _
Partial Public MustInherit Class OperationBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Operation)
    
    Private _code As String
    
    Private _description As String
    
    Private _rate As System.Nullable(Of Double)
    
    Private _isBuyOut As System.Nullable(Of Boolean)
    
    Private _serviceCode As String
    
    Private _isPrimary As System.Nullable(Of Boolean)
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _activities As IList(Of Activity) = New List(Of Activity)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _operationArtisans As IList(Of OperationArtisan) = New List(Of OperationArtisan)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _operationMachines As IList(Of OperationMachine) = New List(Of OperationMachine)()
    
    Private _costCentre As CostCentre
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _artisans As IList(Of Artisan) = New List(Of Artisan)()
    
    <[Property]("Code", ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("Rate", ColumnType:="Double")>  _
    Public Overridable Property Rate() As System.Nullable(Of Double)
        Get
            Return Me._rate
        End Get
        Set
            If ((_rate <> value)  _
                        Or (_rate Is Nothing)) Then
                Me._rate = value
                Me.NotifyPropertyChanged("Rate")
            End If
        End Set
    End Property
    
    <[Property]("IsBuyOut", ColumnType:="Boolean")>  _
    Public Overridable Property IsBuyOut() As System.Nullable(Of Boolean)
        Get
            Return Me._isBuyOut
        End Get
        Set
            If ((_isBuyOut <> value)  _
                        Or (_isBuyOut Is Nothing)) Then
                Me._isBuyOut = value
                Me.NotifyPropertyChanged("IsBuyOut")
            End If
        End Set
    End Property
    
    <[Property]("ServiceCode", ColumnType:="String")>  _
    Public Overridable Property ServiceCode() As String
        Get
            Return Me._serviceCode
        End Get
        Set
            If (_serviceCode <> value) Then
                Me._serviceCode = value
                Me.NotifyPropertyChanged("ServiceCode")
            End If
        End Set
    End Property
    
    <[Property]("IsPrimary", ColumnType:="Boolean")>  _
    Public Overridable Property IsPrimary() As System.Nullable(Of Boolean)
        Get
            Return Me._isPrimary
        End Get
        Set
            If ((_isPrimary <> value)  _
                        Or (_isPrimary Is Nothing)) Then
                Me._isPrimary = value
                Me.NotifyPropertyChanged("IsPrimary")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(Activity), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="OperationID", Lazy:=true, Table:="ussSSActivity")>  _
    Protected Overridable Property Activities() As IList(Of Activity)
        Get
            Return Me._activities
        End Get
        Set
            Me._activities = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(OperationArtisan), ColumnKey:="OperationID")>  _
    Public Overridable Property OperationArtisans() As IList(Of OperationArtisan)
        Get
            Return Me._operationArtisans
        End Get
        Set
            Me._operationArtisans = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(OperationMachine), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="OperationID", Table:="ussSSOperationMachines")>  _
    Public Overridable Property OperationMachines() As IList(Of OperationMachine)
        Get
            Return Me._operationMachines
        End Get
        Set
            Me._operationMachines = value
        End Set
    End Property
    
    <BelongsTo("CostCentreID", Cascade:=CascadeEnum.SaveUpdate)>  _
    Public Overridable Property CostCentre() As CostCentre
        Get
            Return Me._costCentre
        End Get
        Set
            If (_costCentre <> value) Then
                Me._costCentre = value
                Me.NotifyPropertyChanged("CostCentre")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasAndBelongsToMany(GetType(Artisan), ColumnRef:="ArtisanID", ColumnKey:="OperationID", Table:="ussSSOperationArtisans")>  _
    Public Overridable Property Artisans() As IList(Of Artisan)
        Get
            Return Me._artisans
        End Get
        Set
            Me._artisans = value
        End Set
    End Property
End Class

<ActiveRecord("ussSSOperation", Schema:="dbo")>  _
Partial Public Class Operation
    Inherits OperationBase
End Class

<Serializable()>  _
Partial Public MustInherit Class LogonLogBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of LogonLog)
    
    Private _timestamp As System.Nullable(Of Date)
    
    Private _logonTypeID As System.Nullable(Of Integer)
    
    Private _artisanLogonLogs As Artisan
    
    Private _machineLogonLogs As Machine
    
    Private _reasonCodeLogonLogs As ReasonCode
    
    <[Property]("Timestamp", ColumnType:="Timestamp")>  _
    Public Overridable Property Timestamp() As System.Nullable(Of Date)
        Get
            Return Me._timestamp
        End Get
        Set
            If ((_timestamp <> value)  _
                        Or (_timestamp Is Nothing)) Then
                Me._timestamp = value
                Me.NotifyPropertyChanged("Timestamp")
            End If
        End Set
    End Property
    
    <[Property]("LogonTypeID", ColumnType:="Int32")>  _
    Public Overridable Property LogonTypeID() As System.Nullable(Of Integer)
        Get
            Return Me._logonTypeID
        End Get
        Set
            If ((_logonTypeID <> value)  _
                        Or (_logonTypeID Is Nothing)) Then
                Me._logonTypeID = value
                Me.NotifyPropertyChanged("LogonTypeID")
            End If
        End Set
    End Property
    
    <BelongsTo("ArtisanID", Cascade:=CascadeEnum.SaveUpdate)>  _
    Public Overridable Property ArtisanLogonLogs() As Artisan
        Get
            Return Me._artisanLogonLogs
        End Get
        Set
            If (_artisanLogonLogs <> value) Then
                Me._artisanLogonLogs = value
                Me.NotifyPropertyChanged("ArtisanLogonLogs")
            End If
        End Set
    End Property
    
    <BelongsTo("MachineID", Cascade:=CascadeEnum.SaveUpdate)>  _
    Public Overridable Property MachineLogonLogs() As Machine
        Get
            Return Me._machineLogonLogs
        End Get
        Set
            If (_machineLogonLogs <> value) Then
                Me._machineLogonLogs = value
                Me.NotifyPropertyChanged("MachineLogonLogs")
            End If
        End Set
    End Property
    
    <BelongsTo("ReasonCodeID", Cascade:=CascadeEnum.SaveUpdate)>  _
    Public Overridable Property ReasonCodeLogonLogs() As ReasonCode
        Get
            Return Me._reasonCodeLogonLogs
        End Get
        Set
            If (_reasonCodeLogonLogs <> value) Then
                Me._reasonCodeLogonLogs = value
                Me.NotifyPropertyChanged("ReasonCodeLogonLogs")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSSLogonLog", Schema:="dbo")>  _
Partial Public Class LogonLog
    Inherits LogonLogBase
End Class

<Serializable()>  _
Partial Public MustInherit Class ReasonCodeBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of ReasonCode)
    
    Private _code As String
    
    Private _description As String
    
    Private _isTriggerMessage As System.Nullable(Of Boolean)
    
    Private _isQIR As System.Nullable(Of Boolean)
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _qIRreasons As IList(Of QIR) = New List(Of QIR)()
    
    <[Property]("Code", ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("IsTriggerMessage", ColumnType:="Boolean")>  _
    Public Overridable Property IsTriggerMessage() As System.Nullable(Of Boolean)
        Get
            Return Me._isTriggerMessage
        End Get
        Set
            If ((_isTriggerMessage <> value)  _
                        Or (_isTriggerMessage Is Nothing)) Then
                Me._isTriggerMessage = value
                Me.NotifyPropertyChanged("IsTriggerMessage")
            End If
        End Set
    End Property
    
    <[Property]("IsQualityImprovementReport", ColumnType:="Boolean")>  _
    Public Overridable Property IsQIR() As System.Nullable(Of Boolean)
        Get
            Return Me._isQIR
        End Get
        Set
            If ((_isQIR <> value)  _
                        Or (_isQIR Is Nothing)) Then
                Me._isQIR = value
                Me.NotifyPropertyChanged("IsQIR")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(QIR), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="ReasonCodeID", Lazy:=true, Table:="ussSSQIR")>  _
    Protected Overridable Property QIRreasons() As IList(Of QIR)
        Get
            Return Me._qIRreasons
        End Get
        Set
            Me._qIRreasons = value
        End Set
    End Property
End Class

<ActiveRecord("ussSSReasonCode", Schema:="dbo")>  _
Partial Public Class ReasonCode
    Inherits ReasonCodeBase
End Class

<Serializable()>  _
Partial Public MustInherit Class OperationArtisanBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of OperationArtisan)
    
    Private _artisan As Artisan
    
    Private _operation As Operation
    
    <BelongsTo("ArtisanID")>  _
    Public Overridable Property Artisan() As Artisan
        Get
            Return Me._artisan
        End Get
        Set
            If (_artisan <> value) Then
                Me._artisan = value
                Me.NotifyPropertyChanged("Artisan")
            End If
        End Set
    End Property
    
    <BelongsTo("OperationID")>  _
    Public Overridable Property Operation() As Operation
        Get
            Return Me._operation
        End Get
        Set
            If (_operation <> value) Then
                Me._operation = value
                Me.NotifyPropertyChanged("Operation")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSSOperationArtisans")>  _
Partial Public Class OperationArtisan
    Inherits OperationArtisanBase
End Class

<Serializable()>  _
Partial Public MustInherit Class OperationMachineBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of OperationMachine)
    
    Private _operationMachineDefault As Operation
    
    Private _machineOperationDefault As Machine
    
    <BelongsTo("OperationID", Cascade:=CascadeEnum.SaveUpdate)>  _
    Public Overridable Property OperationMachineDefault() As Operation
        Get
            Return Me._operationMachineDefault
        End Get
        Set
            If (_operationMachineDefault <> value) Then
                Me._operationMachineDefault = value
                Me.NotifyPropertyChanged("OperationMachineDefault")
            End If
        End Set
    End Property
    
    <BelongsTo("MachineID", Cascade:=CascadeEnum.SaveUpdate)>  _
    Public Overridable Property MachineOperationDefault() As Machine
        Get
            Return Me._machineOperationDefault
        End Get
        Set
            If (_machineOperationDefault <> value) Then
                Me._machineOperationDefault = value
                Me.NotifyPropertyChanged("MachineOperationDefault")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSSOperationMachines")>  _
Partial Public Class OperationMachine
    Inherits OperationMachineBase
End Class

<Serializable()>  _
Partial Public MustInherit Class MachineArtisanBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of MachineArtisan)
    
    Private _machineArtisanDefault As Machine
    
    Private _artisanMachineDefault As Artisan
    
    <BelongsTo("MachineID", Cascade:=CascadeEnum.SaveUpdate)>  _
    Public Overridable Property MachineArtisanDefault() As Machine
        Get
            Return Me._machineArtisanDefault
        End Get
        Set
            If (_machineArtisanDefault <> value) Then
                Me._machineArtisanDefault = value
                Me.NotifyPropertyChanged("MachineArtisanDefault")
            End If
        End Set
    End Property
    
    <BelongsTo("ArtisanID", Cascade:=CascadeEnum.SaveUpdate)>  _
    Public Overridable Property ArtisanMachineDefault() As Artisan
        Get
            Return Me._artisanMachineDefault
        End Get
        Set
            If (_artisanMachineDefault <> value) Then
                Me._artisanMachineDefault = value
                Me.NotifyPropertyChanged("ArtisanMachineDefault")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSSMachineArtisans")>  _
Partial Public Class MachineArtisan
    Inherits MachineArtisanBase
End Class

<Serializable()>  _
Partial Public MustInherit Class DrawingBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Drawing)
    
    Private _code As String
    
    Private _drawing() As Byte
    
    Private _drawingPath As String
    
    <[Property]("Code", ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Drawing", ColumnType:="BinaryBlob")>  _
    Public Overridable Property Drawing() As Byte()
        Get
            Return Me._drawing
        End Get
        Set
            Me._drawing = value
            Me.NotifyPropertyChanged("Drawing")
        End Set
    End Property
    
    <[Property]("DrawingPDFPath", ColumnType:="String")>  _
    Public Overridable Property DrawingPath() As String
        Get
            Return Me._drawingPath
        End Get
        Set
            If (_drawingPath <> value) Then
                Me._drawingPath = value
                Me.NotifyPropertyChanged("DrawingPath")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSSDrawing", Schema:="dbo")>  _
Partial Public Class Drawing
    Inherits DrawingBase
End Class

<Serializable()>  _
Partial Public MustInherit Class QIRBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of QIR)
    
    Private _logDateTime As System.Nullable(Of Date)
    
    Private _logAgentID As System.Nullable(Of Integer)
    
    Private _logAgentName As String
    
    Private _activity As Activity
    
    Private _reasonCode As ReasonCode
    
    <[Property]("LogDateTime", ColumnType:="Timestamp")>  _
    Public Overridable Property LogDateTime() As System.Nullable(Of Date)
        Get
            Return Me._logDateTime
        End Get
        Set
            If ((_logDateTime <> value)  _
                        Or (_logDateTime Is Nothing)) Then
                Me._logDateTime = value
                Me.NotifyPropertyChanged("LogDateTime")
            End If
        End Set
    End Property
    
    <[Property]("LogAgentID", ColumnType:="Int32")>  _
    Public Overridable Property LogAgentID() As System.Nullable(Of Integer)
        Get
            Return Me._logAgentID
        End Get
        Set
            If ((_logAgentID <> value)  _
                        Or (_logAgentID Is Nothing)) Then
                Me._logAgentID = value
                Me.NotifyPropertyChanged("LogAgentID")
            End If
        End Set
    End Property
    
    <[Property]("LogAgentName", ColumnType:="String")>  _
    Public Overridable Property LogAgentName() As String
        Get
            Return Me._logAgentName
        End Get
        Set
            If (_logAgentName <> value) Then
                Me._logAgentName = value
                Me.NotifyPropertyChanged("LogAgentName")
            End If
        End Set
    End Property
    
    <BelongsTo("ActivityID", Cascade:=CascadeEnum.SaveUpdate)>  _
    Public Overridable Property Activity() As Activity
        Get
            Return Me._activity
        End Get
        Set
            If (_activity <> value) Then
                Me._activity = value
                Me.NotifyPropertyChanged("Activity")
            End If
        End Set
    End Property
    
    <BelongsTo("ReasonCodeID", Cascade:=CascadeEnum.SaveUpdate)>  _
    Public Overridable Property ReasonCode() As ReasonCode
        Get
            Return Me._reasonCode
        End Get
        Set
            If (_reasonCode <> value) Then
                Me._reasonCode = value
                Me.NotifyPropertyChanged("ReasonCode")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSSActivityQIR", Schema:="dbo")>  _
Partial Public Class QIR
    Inherits QIRBase
End Class

<Serializable()>  _
Partial Public MustInherit Class PurchaseOrderBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of PurchaseOrder)
    
    Private _orderNumber As String
    
    Private _gRVNumber As String
    
    Private _orderDate As System.Nullable(Of Date)
    
    Private _requiredDate As System.Nullable(Of Date)
    
    Private _gRVDate As System.Nullable(Of Date)
    
    Private _supplierID As System.Nullable(Of Integer)
    
    Private _agentID As System.Nullable(Of Integer)
    
    Private _agentName As String
    
    Private _eRPPurchaseOrderID As System.Nullable(Of Integer)
    
    Private _jobID As System.Nullable(Of Integer)
    
    Private _workCentreID As System.Nullable(Of Integer)
    
    Private _workCentreCategoryID As System.Nullable(Of Integer)
    
    Private _partID As System.Nullable(Of Integer)
    
    Private _partGroupID As System.Nullable(Of Integer)
    
    Private _supplyScopeID As System.Nullable(Of Integer)
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _purchaseOrderLines As IList(Of PurchaseOrderLine) = New List(Of PurchaseOrderLine)()
    
    <[Property]("OrderNumber", ColumnType:="String")>  _
    Public Overridable Property OrderNumber() As String
        Get
            Return Me._orderNumber
        End Get
        Set
            If (_orderNumber <> value) Then
                Me._orderNumber = value
                Me.NotifyPropertyChanged("OrderNumber")
            End If
        End Set
    End Property
    
    <[Property]("GRVNumber", ColumnType:="String")>  _
    Public Overridable Property GRVNumber() As String
        Get
            Return Me._gRVNumber
        End Get
        Set
            If (_gRVNumber <> value) Then
                Me._gRVNumber = value
                Me.NotifyPropertyChanged("GRVNumber")
            End If
        End Set
    End Property
    
    <[Property]("OrderDate", ColumnType:="Timestamp")>  _
    Public Overridable Property OrderDate() As System.Nullable(Of Date)
        Get
            Return Me._orderDate
        End Get
        Set
            If ((_orderDate <> value)  _
                        Or (_orderDate Is Nothing)) Then
                Me._orderDate = value
                Me.NotifyPropertyChanged("OrderDate")
            End If
        End Set
    End Property
    
    <[Property]("RequiredDate", ColumnType:="Timestamp")>  _
    Public Overridable Property RequiredDate() As System.Nullable(Of Date)
        Get
            Return Me._requiredDate
        End Get
        Set
            If ((_requiredDate <> value)  _
                        Or (_requiredDate Is Nothing)) Then
                Me._requiredDate = value
                Me.NotifyPropertyChanged("RequiredDate")
            End If
        End Set
    End Property
    
    <[Property]("GRVDate", ColumnType:="Timestamp")>  _
    Public Overridable Property GRVDate() As System.Nullable(Of Date)
        Get
            Return Me._gRVDate
        End Get
        Set
            If ((_gRVDate <> value)  _
                        Or (_gRVDate Is Nothing)) Then
                Me._gRVDate = value
                Me.NotifyPropertyChanged("GRVDate")
            End If
        End Set
    End Property
    
    <[Property]("SupplierID", ColumnType:="Int32")>  _
    Public Overridable Property SupplierID() As System.Nullable(Of Integer)
        Get
            Return Me._supplierID
        End Get
        Set
            If ((_supplierID <> value)  _
                        Or (_supplierID Is Nothing)) Then
                Me._supplierID = value
                Me.NotifyPropertyChanged("SupplierID")
            End If
        End Set
    End Property
    
    <[Property]("AgentID", ColumnType:="Int32")>  _
    Public Overridable Property AgentID() As System.Nullable(Of Integer)
        Get
            Return Me._agentID
        End Get
        Set
            If ((_agentID <> value)  _
                        Or (_agentID Is Nothing)) Then
                Me._agentID = value
                Me.NotifyPropertyChanged("AgentID")
            End If
        End Set
    End Property
    
    <[Property]("AgentName", ColumnType:="String")>  _
    Public Overridable Property AgentName() As String
        Get
            Return Me._agentName
        End Get
        Set
            If (_agentName <> value) Then
                Me._agentName = value
                Me.NotifyPropertyChanged("AgentName")
            End If
        End Set
    End Property
    
    <[Property]("ERPPurchaseOrderID", ColumnType:="Int32")>  _
    Public Overridable Property ERPPurchaseOrderID() As System.Nullable(Of Integer)
        Get
            Return Me._eRPPurchaseOrderID
        End Get
        Set
            If ((_eRPPurchaseOrderID <> value)  _
                        Or (_eRPPurchaseOrderID Is Nothing)) Then
                Me._eRPPurchaseOrderID = value
                Me.NotifyPropertyChanged("ERPPurchaseOrderID")
            End If
        End Set
    End Property
    
    <[Property]("JobID", ColumnType:="Int32")>  _
    Public Overridable Property JobID() As System.Nullable(Of Integer)
        Get
            Return Me._jobID
        End Get
        Set
            If ((_jobID <> value)  _
                        Or (_jobID Is Nothing)) Then
                Me._jobID = value
                Me.NotifyPropertyChanged("JobID")
            End If
        End Set
    End Property
    
    <[Property]("WorkCentreID", ColumnType:="Int32")>  _
    Public Overridable Property WorkCentreID() As System.Nullable(Of Integer)
        Get
            Return Me._workCentreID
        End Get
        Set
            If ((_workCentreID <> value)  _
                        Or (_workCentreID Is Nothing)) Then
                Me._workCentreID = value
                Me.NotifyPropertyChanged("WorkCentreID")
            End If
        End Set
    End Property
    
    <[Property]("WorkCentreCategoryID", ColumnType:="Int32")>  _
    Public Overridable Property WorkCentreCategoryID() As System.Nullable(Of Integer)
        Get
            Return Me._workCentreCategoryID
        End Get
        Set
            If ((_workCentreCategoryID <> value)  _
                        Or (_workCentreCategoryID Is Nothing)) Then
                Me._workCentreCategoryID = value
                Me.NotifyPropertyChanged("WorkCentreCategoryID")
            End If
        End Set
    End Property
    
    <[Property]("PartID", ColumnType:="Int32")>  _
    Public Overridable Property PartID() As System.Nullable(Of Integer)
        Get
            Return Me._partID
        End Get
        Set
            If ((_partID <> value)  _
                        Or (_partID Is Nothing)) Then
                Me._partID = value
                Me.NotifyPropertyChanged("PartID")
            End If
        End Set
    End Property
    
    <[Property]("PartGroupID", ColumnType:="Int32")>  _
    Public Overridable Property PartGroupID() As System.Nullable(Of Integer)
        Get
            Return Me._partGroupID
        End Get
        Set
            If ((_partGroupID <> value)  _
                        Or (_partGroupID Is Nothing)) Then
                Me._partGroupID = value
                Me.NotifyPropertyChanged("PartGroupID")
            End If
        End Set
    End Property
    
    <[Property]("SupplyScopeID", ColumnType:="Int32")>  _
    Public Overridable Property SupplyScopeID() As System.Nullable(Of Integer)
        Get
            Return Me._supplyScopeID
        End Get
        Set
            If ((_supplyScopeID <> value)  _
                        Or (_supplyScopeID Is Nothing)) Then
                Me._supplyScopeID = value
                Me.NotifyPropertyChanged("SupplyScopeID")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(PurchaseOrderLine), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="PurchaseOrderID", Lazy:=true)>  _
    Public Overridable Property PurchaseOrderLines() As IList(Of PurchaseOrderLine)
        Get
            Return Me._purchaseOrderLines
        End Get
        Set
            Me._purchaseOrderLines = value
        End Set
    End Property
End Class

<ActiveRecord("ussSFPurchaseOrder", Schema:="dbo")>  _
Partial Public Class PurchaseOrder
    Inherits PurchaseOrderBase
End Class

<Serializable()>  _
Partial Public MustInherit Class PurchaseOrderLineBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of PurchaseOrderLine)
    
    Private _jobLineID As System.Nullable(Of Integer)
    
    Private _inventoryItemID As System.Nullable(Of Integer)
    
    Private _eRPPurchaseOrderLineID As System.Nullable(Of Integer)
    
    Private _quantity As System.Nullable(Of Double)
    
    Private _unitPrice As System.Nullable(Of Double)
    
    Private _totalPrice As System.Nullable(Of Double)
    
    Private _lineNote As String
    
    Private _purchaseOrder As PurchaseOrder
    
    <[Property]("JobLineID", ColumnType:="Int32")>  _
    Public Overridable Property JobLineID() As System.Nullable(Of Integer)
        Get
            Return Me._jobLineID
        End Get
        Set
            If ((_jobLineID <> value)  _
                        Or (_jobLineID Is Nothing)) Then
                Me._jobLineID = value
                Me.NotifyPropertyChanged("JobLineID")
            End If
        End Set
    End Property
    
    <[Property]("InventoryItemID", ColumnType:="Int32")>  _
    Public Overridable Property InventoryItemID() As System.Nullable(Of Integer)
        Get
            Return Me._inventoryItemID
        End Get
        Set
            If ((_inventoryItemID <> value)  _
                        Or (_inventoryItemID Is Nothing)) Then
                Me._inventoryItemID = value
                Me.NotifyPropertyChanged("InventoryItemID")
            End If
        End Set
    End Property
    
    <[Property]("ERPPurchaseOrderLineID", ColumnType:="Int32")>  _
    Public Overridable Property ERPPurchaseOrderLineID() As System.Nullable(Of Integer)
        Get
            Return Me._eRPPurchaseOrderLineID
        End Get
        Set
            If ((_eRPPurchaseOrderLineID <> value)  _
                        Or (_eRPPurchaseOrderLineID Is Nothing)) Then
                Me._eRPPurchaseOrderLineID = value
                Me.NotifyPropertyChanged("ERPPurchaseOrderLineID")
            End If
        End Set
    End Property
    
    <[Property]("Quantity", ColumnType:="Double")>  _
    Public Overridable Property Quantity() As System.Nullable(Of Double)
        Get
            Return Me._quantity
        End Get
        Set
            If ((_quantity <> value)  _
                        Or (_quantity Is Nothing)) Then
                Me._quantity = value
                Me.NotifyPropertyChanged("Quantity")
            End If
        End Set
    End Property
    
    <[Property]("UnitPrice", ColumnType:="Double")>  _
    Public Overridable Property UnitPrice() As System.Nullable(Of Double)
        Get
            Return Me._unitPrice
        End Get
        Set
            If ((_unitPrice <> value)  _
                        Or (_unitPrice Is Nothing)) Then
                Me._unitPrice = value
                Me.NotifyPropertyChanged("UnitPrice")
            End If
        End Set
    End Property
    
    <[Property]("TotalPrice", ColumnType:="Double")>  _
    Public Overridable Property TotalPrice() As System.Nullable(Of Double)
        Get
            Return Me._totalPrice
        End Get
        Set
            If ((_totalPrice <> value)  _
                        Or (_totalPrice Is Nothing)) Then
                Me._totalPrice = value
                Me.NotifyPropertyChanged("TotalPrice")
            End If
        End Set
    End Property
    
    <[Property]("LineNote", ColumnType:="String")>  _
    Public Overridable Property LineNote() As String
        Get
            Return Me._lineNote
        End Get
        Set
            If (_lineNote <> value) Then
                Me._lineNote = value
                Me.NotifyPropertyChanged("LineNote")
            End If
        End Set
    End Property
    
    <BelongsTo("PurchaseOrderID")>  _
    Public Overridable Property PurchaseOrder() As PurchaseOrder
        Get
            Return Me._purchaseOrder
        End Get
        Set
            If (_purchaseOrder <> value) Then
                Me._purchaseOrder = value
                Me.NotifyPropertyChanged("PurchaseOrder")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFPurchaseOrderLine", Schema:="dbo")>  _
Partial Public Class PurchaseOrderLine
    Inherits PurchaseOrderLineBase
End Class

<Serializable()>  _
Partial Public MustInherit Class RequisitionBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Requisition)
    
    Private _number As String
    
    Private _date As System.Nullable(Of Date)
    
    Private _agentID As System.Nullable(Of Integer)
    
    Private _agentName As String
    
    Private _jobID As System.Nullable(Of Integer)
    
    Private _workCentreID As System.Nullable(Of Integer)
    
    Private _workCentreCategoryID As System.Nullable(Of Integer)
    
    Private _partID As System.Nullable(Of Integer)
    
    Private _partGroupID As System.Nullable(Of Integer)
    
    Private _supplyScopeID As System.Nullable(Of Integer)
    
    <[Property]("Number", ColumnType:="String")>  _
    Public Overridable Property Number() As String
        Get
            Return Me._number
        End Get
        Set
            If (_number <> value) Then
                Me._number = value
                Me.NotifyPropertyChanged("Number")
            End If
        End Set
    End Property
    
    <[Property]("Date", ColumnType:="Timestamp")>  _
    Public Overridable Property [Date]() As System.Nullable(Of Date)
        Get
            Return Me._date
        End Get
        Set
            If ((_date <> value)  _
                        Or (_date Is Nothing)) Then
                Me._date = value
                Me.NotifyPropertyChanged("Date")
            End If
        End Set
    End Property
    
    <[Property]("AgentID", ColumnType:="Int32")>  _
    Public Overridable Property AgentID() As System.Nullable(Of Integer)
        Get
            Return Me._agentID
        End Get
        Set
            If ((_agentID <> value)  _
                        Or (_agentID Is Nothing)) Then
                Me._agentID = value
                Me.NotifyPropertyChanged("AgentID")
            End If
        End Set
    End Property
    
    <[Property]("AgentName", ColumnType:="String")>  _
    Public Overridable Property AgentName() As String
        Get
            Return Me._agentName
        End Get
        Set
            If (_agentName <> value) Then
                Me._agentName = value
                Me.NotifyPropertyChanged("AgentName")
            End If
        End Set
    End Property
    
    <[Property]("JobID", ColumnType:="Int32")>  _
    Public Overridable Property JobID() As System.Nullable(Of Integer)
        Get
            Return Me._jobID
        End Get
        Set
            If ((_jobID <> value)  _
                        Or (_jobID Is Nothing)) Then
                Me._jobID = value
                Me.NotifyPropertyChanged("JobID")
            End If
        End Set
    End Property
    
    <[Property]("WorkCentreID", ColumnType:="Int32")>  _
    Public Overridable Property WorkCentreID() As System.Nullable(Of Integer)
        Get
            Return Me._workCentreID
        End Get
        Set
            If ((_workCentreID <> value)  _
                        Or (_workCentreID Is Nothing)) Then
                Me._workCentreID = value
                Me.NotifyPropertyChanged("WorkCentreID")
            End If
        End Set
    End Property
    
    <[Property]("WorkCentreCategoryID", ColumnType:="Int32")>  _
    Public Overridable Property WorkCentreCategoryID() As System.Nullable(Of Integer)
        Get
            Return Me._workCentreCategoryID
        End Get
        Set
            If ((_workCentreCategoryID <> value)  _
                        Or (_workCentreCategoryID Is Nothing)) Then
                Me._workCentreCategoryID = value
                Me.NotifyPropertyChanged("WorkCentreCategoryID")
            End If
        End Set
    End Property
    
    <[Property]("PartID", ColumnType:="Int32")>  _
    Public Overridable Property PartID() As System.Nullable(Of Integer)
        Get
            Return Me._partID
        End Get
        Set
            If ((_partID <> value)  _
                        Or (_partID Is Nothing)) Then
                Me._partID = value
                Me.NotifyPropertyChanged("PartID")
            End If
        End Set
    End Property
    
    <[Property]("PartGroupID", ColumnType:="Int32")>  _
    Public Overridable Property PartGroupID() As System.Nullable(Of Integer)
        Get
            Return Me._partGroupID
        End Get
        Set
            If ((_partGroupID <> value)  _
                        Or (_partGroupID Is Nothing)) Then
                Me._partGroupID = value
                Me.NotifyPropertyChanged("PartGroupID")
            End If
        End Set
    End Property
    
    <[Property]("SupplyScopeID", ColumnType:="Int32")>  _
    Public Overridable Property SupplyScopeID() As System.Nullable(Of Integer)
        Get
            Return Me._supplyScopeID
        End Get
        Set
            If ((_supplyScopeID <> value)  _
                        Or (_supplyScopeID Is Nothing)) Then
                Me._supplyScopeID = value
                Me.NotifyPropertyChanged("SupplyScopeID")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFRequisition", Schema:="dbo")>  _
Partial Public Class Requisition
    Inherits RequisitionBase
End Class

<Serializable()>  _
Partial Public MustInherit Class RequisitionLineBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of RequisitionLine)
    
    Private _requisitionID As System.Nullable(Of Integer)
    
    Private _jobLineID As System.Nullable(Of Integer)
    
    Private _inventoryItemID As System.Nullable(Of Integer)
    
    Private _quantity As System.Nullable(Of Double)
    
    Private _unitCost As System.Nullable(Of Double)
    
    Private _totalCost As System.Nullable(Of Double)
    
    Private _lineNote As String
    
    <[Property]("RequisitionID", ColumnType:="Int32")>  _
    Public Overridable Property RequisitionID() As System.Nullable(Of Integer)
        Get
            Return Me._requisitionID
        End Get
        Set
            If ((_requisitionID <> value)  _
                        Or (_requisitionID Is Nothing)) Then
                Me._requisitionID = value
                Me.NotifyPropertyChanged("RequisitionID")
            End If
        End Set
    End Property
    
    <[Property]("JobLineID", ColumnType:="Int32")>  _
    Public Overridable Property JobLineID() As System.Nullable(Of Integer)
        Get
            Return Me._jobLineID
        End Get
        Set
            If ((_jobLineID <> value)  _
                        Or (_jobLineID Is Nothing)) Then
                Me._jobLineID = value
                Me.NotifyPropertyChanged("JobLineID")
            End If
        End Set
    End Property
    
    <[Property]("InventoryItemID", ColumnType:="Int32")>  _
    Public Overridable Property InventoryItemID() As System.Nullable(Of Integer)
        Get
            Return Me._inventoryItemID
        End Get
        Set
            If ((_inventoryItemID <> value)  _
                        Or (_inventoryItemID Is Nothing)) Then
                Me._inventoryItemID = value
                Me.NotifyPropertyChanged("InventoryItemID")
            End If
        End Set
    End Property
    
    <[Property]("Quantity", ColumnType:="Double")>  _
    Public Overridable Property Quantity() As System.Nullable(Of Double)
        Get
            Return Me._quantity
        End Get
        Set
            If ((_quantity <> value)  _
                        Or (_quantity Is Nothing)) Then
                Me._quantity = value
                Me.NotifyPropertyChanged("Quantity")
            End If
        End Set
    End Property
    
    <[Property]("UnitCost", ColumnType:="Double")>  _
    Public Overridable Property UnitCost() As System.Nullable(Of Double)
        Get
            Return Me._unitCost
        End Get
        Set
            If ((_unitCost <> value)  _
                        Or (_unitCost Is Nothing)) Then
                Me._unitCost = value
                Me.NotifyPropertyChanged("UnitCost")
            End If
        End Set
    End Property
    
    <[Property]("TotalCost", ColumnType:="Double")>  _
    Public Overridable Property TotalCost() As System.Nullable(Of Double)
        Get
            Return Me._totalCost
        End Get
        Set
            If ((_totalCost <> value)  _
                        Or (_totalCost Is Nothing)) Then
                Me._totalCost = value
                Me.NotifyPropertyChanged("TotalCost")
            End If
        End Set
    End Property
    
    <[Property]("LineNote", ColumnType:="String")>  _
    Public Overridable Property LineNote() As String
        Get
            Return Me._lineNote
        End Get
        Set
            If (_lineNote <> value) Then
                Me._lineNote = value
                Me.NotifyPropertyChanged("LineNote")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFRequisitionLine", Schema:="dbo")>  _
Partial Public Class RequisitionLine
    Inherits RequisitionLineBase
End Class

Public Class awShopFloorHelper
    
    Public Shared Function GetTypes() As Type()
        Return New Type() {GetType(Activity), GetType(Part), GetType(ActivityLog), GetType(Artisan), GetType(Configuration), GetType(CostCentre), GetType(Customer), GetType(Job), GetType(Machine), GetType(Operation), GetType(LogonLog), GetType(ReasonCode), GetType(OperationArtisan), GetType(OperationMachine), GetType(MachineArtisan), GetType(Drawing), GetType(QIR), GetType(PurchaseOrder), GetType(PurchaseOrderLine), GetType(Requisition), GetType(RequisitionLine)}
    End Function
End Class

'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.431
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports Castle.ActiveRecord
Imports System
Imports System.Collections
Imports System.Collections.Generic
Imports System.ComponentModel


Partial Public MustInherit Class ActivityBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Activity)
    
    Private _estimatedStartDate As System.Nullable(Of Date)
    
    Private _estimatedDuration As System.Nullable(Of Double)
    
    Private _estimatedActualDuration As System.Nullable(Of Double)
    
    Private _actualStartDate As System.Nullable(Of Date)
    
    Private _actualDuration As System.Nullable(Of Double)
    
    Private _value As System.Nullable(Of Double)
    
    Private _artisan As Artisan
    
    Private _job As Job
    
    Private _machine As Machine
    
    Private _operation_ As Operation_
    
    Private _part As Part
    
    <[Property]("EstimatedStartDate", ColumnType:="Timestamp")>  _
    Public Overridable Property EstimatedStartDate() As System.Nullable(Of Date)
        Get
            Return Me._estimatedStartDate
        End Get
        Set
            If ((_estimatedStartDate <> value)  _
                        Or (_estimatedStartDate Is Nothing)) Then
                Me._estimatedStartDate = value
                Me.NotifyPropertyChanged("EstimatedStartDate")
            End If
        End Set
    End Property
    
    <[Property]("EstimatedDuration", ColumnType:="Double")>  _
    Public Overridable Property EstimatedDuration() As System.Nullable(Of Double)
        Get
            Return Me._estimatedDuration
        End Get
        Set
            If ((_estimatedDuration <> value)  _
                        Or (_estimatedDuration Is Nothing)) Then
                Me._estimatedDuration = value
                Me.NotifyPropertyChanged("EstimatedDuration")
            End If
        End Set
    End Property
    
    <[Property]("EstimatedActualDuration", ColumnType:="Double")>  _
    Public Overridable Property EstimatedActualDuration() As System.Nullable(Of Double)
        Get
            Return Me._estimatedActualDuration
        End Get
        Set
            If ((_estimatedActualDuration <> value)  _
                        Or (_estimatedActualDuration Is Nothing)) Then
                Me._estimatedActualDuration = value
                Me.NotifyPropertyChanged("EstimatedActualDuration")
            End If
        End Set
    End Property
    
    <[Property]("ActualStartDate", ColumnType:="Timestamp")>  _
    Public Overridable Property ActualStartDate() As System.Nullable(Of Date)
        Get
            Return Me._actualStartDate
        End Get
        Set
            If ((_actualStartDate <> value)  _
                        Or (_actualStartDate Is Nothing)) Then
                Me._actualStartDate = value
                Me.NotifyPropertyChanged("ActualStartDate")
            End If
        End Set
    End Property
    
    <[Property]("ActualDuration", ColumnType:="Double")>  _
    Public Overridable Property ActualDuration() As System.Nullable(Of Double)
        Get
            Return Me._actualDuration
        End Get
        Set
            If ((_actualDuration <> value)  _
                        Or (_actualDuration Is Nothing)) Then
                Me._actualDuration = value
                Me.NotifyPropertyChanged("ActualDuration")
            End If
        End Set
    End Property
    
    <[Property]("Value", ColumnType:="Double")>  _
    Public Overridable Property Value() As System.Nullable(Of Double)
        Get
            Return Me._value
        End Get
        Set
            If ((_value <> value)  _
                        Or (_value Is Nothing)) Then
                Me._value = value
                Me.NotifyPropertyChanged("Value")
            End If
        End Set
    End Property
    
    <BelongsTo("ArtisanId")>  _
    Public Overridable Property Artisan() As Artisan
        Get
            Return Me._artisan
        End Get
        Set
            If ((_artisan <> value)  _
                        Or (_artisan Is Nothing)) Then
                Me._artisan = value
                Me.NotifyPropertyChanged("Artisan")
            End If
        End Set
    End Property
    
    <BelongsTo("JobId")>  _
    Public Overridable Property Job() As Job
        Get
            Return Me._job
        End Get
        Set
            If ((_job <> value)  _
                        Or (_job Is Nothing)) Then
                Me._job = value
                Me.NotifyPropertyChanged("Job")
            End If
        End Set
    End Property
    
    <BelongsTo("MachineId")>  _
    Public Overridable Property Machine() As Machine
        Get
            Return Me._machine
        End Get
        Set
            If ((_machine <> value)  _
                        Or (_machine Is Nothing)) Then
                Me._machine = value
                Me.NotifyPropertyChanged("Machine")
            End If
        End Set
    End Property
    
    <BelongsTo("OperationId")>  _
    Public Overridable Property Operation_() As Operation_
        Get
            Return Me._operation_
        End Get
        Set
            If ((_operation_ <> value)  _
                        Or (_operation_ Is Nothing)) Then
                Me._operation_ = value
                Me.NotifyPropertyChanged("Operation_")
            End If
        End Set
    End Property
    
    <BelongsTo("PartId")>  _
    Public Overridable Property Part() As Part
        Get
            Return Me._part
        End Get
        Set
            If ((_part <> value)  _
                        Or (_part Is Nothing)) Then
                Me._part = value
                Me.NotifyPropertyChanged("Part")
            End If
        End Set
    End Property
End Class

<ActiveRecord("Activity", Schema:="dbo")>  _
Partial Public Class Activity
    Inherits ActivityBase
End Class

Partial Public MustInherit Class ArtisanBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Artisan)
    
    Private _code As String
    
    Private _description As String
    
    Private _colour As String
    
    Private _ussActivities As IList(Of Activity) = New List(Of Activity)()
    
    Private _ussMachineArtisans As IList(Of MachineArtisans) = New List(Of MachineArtisans)()
    
    Private _ussOperationArtisans As IList(Of OperationArtisans) = New List(Of OperationArtisans)()
    
    <[Property]("Code", ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If ((_code <> value)  _
                        Or (_code Is Nothing)) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If ((_description <> value)  _
                        Or (_description Is Nothing)) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("Colour", ColumnType:="String")>  _
    Public Overridable Property Colour() As String
        Get
            Return Me._colour
        End Get
        Set
            If ((_colour <> value)  _
                        Or (_colour Is Nothing)) Then
                Me._colour = value
                Me.NotifyPropertyChanged("Colour")
            End If
        End Set
    End Property
    
    <HasMany(GetType(Activity), ColumnKey:="ArtisanId", Table:="ussActivity")>  _
    Public Overridable Property UssActivities() As IList(Of Activity)
        Get
            Return Me._ussActivities
        End Get
        Set
            Me._ussActivities = value
        End Set
    End Property
    
    <HasMany(GetType(MachineArtisans), ColumnKey:="ArtisanId", Table:="ussMachineArtisans")>  _
    Public Overridable Property UssMachineArtisans() As IList(Of MachineArtisans)
        Get
            Return Me._ussMachineArtisans
        End Get
        Set
            Me._ussMachineArtisans = value
        End Set
    End Property
    
    <HasMany(GetType(OperationArtisans), ColumnKey:="ArtisanId", Table:="ussOperationArtisans")>  _
    Public Overridable Property UssOperationArtisans() As IList(Of OperationArtisans)
        Get
            Return Me._ussOperationArtisans
        End Get
        Set
            Me._ussOperationArtisans = value
        End Set
    End Property
End Class

<ActiveRecord("Artisan", Schema:="dbo")>  _
Partial Public Class Artisan
    Inherits ArtisanBase
End Class

Partial Public MustInherit Class CustomerBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Customer)
    
    Private _code As String
    
    Private _description As String
    
    Private _ussJobs As IList(Of Job) = New List(Of Job)()
    
    <[Property]("Code", ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If ((_code <> value)  _
                        Or (_code Is Nothing)) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If ((_description <> value)  _
                        Or (_description Is Nothing)) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <HasMany(GetType(Job), ColumnKey:="CustomerId", Table:="ussJob")>  _
    Public Overridable Property UssJobs() As IList(Of Job)
        Get
            Return Me._ussJobs
        End Get
        Set
            Me._ussJobs = value
        End Set
    End Property
End Class

<ActiveRecord("Customer", Schema:="dbo")>  _
Partial Public Class Customer
    Inherits CustomerBase
End Class

Partial Public MustInherit Class DepartmentBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Department)
    
    Private _code As String
    
    Private _description As String
    
    Private _ussOperations As IList(Of Operation_) = New List(Of Operation_)()
    
    <[Property]("Code", ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If ((_code <> value)  _
                        Or (_code Is Nothing)) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If ((_description <> value)  _
                        Or (_description Is Nothing)) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <HasMany(GetType(Operation_), ColumnKey:="DeparmentId", Table:="ussOperation")>  _
    Public Overridable Property UssOperations() As IList(Of Operation_)
        Get
            Return Me._ussOperations
        End Get
        Set
            Me._ussOperations = value
        End Set
    End Property
End Class

<ActiveRecord("Department", Schema:="dbo")>  _
Partial Public Class Department
    Inherits DepartmentBase
End Class

Partial Public MustInherit Class JobBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Job)
    
    Private _number As System.Nullable(Of Integer)
    
    Private _description As String
    
    Private _jobDate As String
    
    Private _expectedDevlieryDate As String
    
    Private _orderPrice As System.Nullable(Of Double)
    
    Private _startDate As System.Nullable(Of Date)
    
    Private _endDate As System.Nullable(Of Date)
    
    Private _ussActivities As IList(Of Activity) = New List(Of Activity)()
    
    Private _customer As Customer
    
    <[Property]("Number", ColumnType:="Int32")>  _
    Public Overridable Property Number() As System.Nullable(Of Integer)
        Get
            Return Me._number
        End Get
        Set
            If ((_number <> value)  _
                        Or (_number Is Nothing)) Then
                Me._number = value
                Me.NotifyPropertyChanged("Number")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If ((_description <> value)  _
                        Or (_description Is Nothing)) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("JobDate", ColumnType:="String")>  _
    Public Overridable Property JobDate() As String
        Get
            Return Me._jobDate
        End Get
        Set
            If ((_jobDate <> value)  _
                        Or (_jobDate Is Nothing)) Then
                Me._jobDate = value
                Me.NotifyPropertyChanged("JobDate")
            End If
        End Set
    End Property
    
    <[Property]("ExpectedDevlieryDate", ColumnType:="String")>  _
    Public Overridable Property ExpectedDevlieryDate() As String
        Get
            Return Me._expectedDevlieryDate
        End Get
        Set
            If ((_expectedDevlieryDate <> value)  _
                        Or (_expectedDevlieryDate Is Nothing)) Then
                Me._expectedDevlieryDate = value
                Me.NotifyPropertyChanged("ExpectedDevlieryDate")
            End If
        End Set
    End Property
    
    <[Property]("OrderPrice", ColumnType:="Double")>  _
    Public Overridable Property OrderPrice() As System.Nullable(Of Double)
        Get
            Return Me._orderPrice
        End Get
        Set
            If ((_orderPrice <> value)  _
                        Or (_orderPrice Is Nothing)) Then
                Me._orderPrice = value
                Me.NotifyPropertyChanged("OrderPrice")
            End If
        End Set
    End Property
    
    <[Property]("StartDate", ColumnType:="Timestamp")>  _
    Public Overridable Property StartDate() As System.Nullable(Of Date)
        Get
            Return Me._startDate
        End Get
        Set
            If ((_startDate <> value)  _
                        Or (_startDate Is Nothing)) Then
                Me._startDate = value
                Me.NotifyPropertyChanged("StartDate")
            End If
        End Set
    End Property
    
    <[Property]("EndDate", ColumnType:="Timestamp")>  _
    Public Overridable Property EndDate() As System.Nullable(Of Date)
        Get
            Return Me._endDate
        End Get
        Set
            If ((_endDate <> value)  _
                        Or (_endDate Is Nothing)) Then
                Me._endDate = value
                Me.NotifyPropertyChanged("EndDate")
            End If
        End Set
    End Property
    
    <HasMany(GetType(Activity), ColumnKey:="JobId", Table:="ussActivity")>  _
    Public Overridable Property UssActivities() As IList(Of Activity)
        Get
            Return Me._ussActivities
        End Get
        Set
            Me._ussActivities = value
        End Set
    End Property
    
    <BelongsTo("CustomerId")>  _
    Public Overridable Property Customer() As Customer
        Get
            Return Me._customer
        End Get
        Set
            If ((_customer <> value)  _
                        Or (_customer Is Nothing)) Then
                Me._customer = value
                Me.NotifyPropertyChanged("Customer")
            End If
        End Set
    End Property
End Class

<ActiveRecord("Job", Schema:="dbo")>  _
Partial Public Class Job
    Inherits JobBase
End Class

Partial Public MustInherit Class MachineBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Machine)
    
    Private _code As String
    
    Private _description As String
    
    Private _ussActivities As IList(Of Activity) = New List(Of Activity)()
    
    Private _ussMachineArtisans As IList(Of MachineArtisans) = New List(Of MachineArtisans)()
    
    Private _ussOperationMachines As IList(Of OperationMachines) = New List(Of OperationMachines)()
    
    <[Property]("Code", ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If ((_code <> value)  _
                        Or (_code Is Nothing)) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If ((_description <> value)  _
                        Or (_description Is Nothing)) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <HasMany(GetType(Activity), ColumnKey:="MachineId", Table:="ussActivity")>  _
    Public Overridable Property UssActivities() As IList(Of Activity)
        Get
            Return Me._ussActivities
        End Get
        Set
            Me._ussActivities = value
        End Set
    End Property
    
    <HasMany(GetType(MachineArtisans), ColumnKey:="MachineId", Table:="ussMachineArtisans")>  _
    Public Overridable Property UssMachineArtisans() As IList(Of MachineArtisans)
        Get
            Return Me._ussMachineArtisans
        End Get
        Set
            Me._ussMachineArtisans = value
        End Set
    End Property
    
    <HasMany(GetType(OperationMachines), ColumnKey:="MachineId", Table:="ussOperationMachines")>  _
    Public Overridable Property UssOperationMachines() As IList(Of OperationMachines)
        Get
            Return Me._ussOperationMachines
        End Get
        Set
            Me._ussOperationMachines = value
        End Set
    End Property
End Class

<ActiveRecord("Machine", Schema:="dbo")>  _
Partial Public Class Machine
    Inherits MachineBase
End Class

Partial Public MustInherit Class MachineArtisansBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of MachineArtisans)
    
    Private _artisan As Artisan
    
    Private _machine As Machine
    
    <BelongsTo("ArtisanId")>  _
    Public Overridable Property Artisan() As Artisan
        Get
            Return Me._artisan
        End Get
        Set
            If ((_artisan <> value)  _
                        Or (_artisan Is Nothing)) Then
                Me._artisan = value
                Me.NotifyPropertyChanged("Artisan")
            End If
        End Set
    End Property
    
    <BelongsTo("MachineId")>  _
    Public Overridable Property Machine() As Machine
        Get
            Return Me._machine
        End Get
        Set
            If ((_machine <> value)  _
                        Or (_machine Is Nothing)) Then
                Me._machine = value
                Me.NotifyPropertyChanged("Machine")
            End If
        End Set
    End Property
End Class

<ActiveRecord("MachineArtisans", Schema:="dbo")>  _
Partial Public Class MachineArtisans
    Inherits MachineArtisansBase
End Class

Partial Public MustInherit Class Operation_Base
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Operation_)
    
    Private _code As String
    
    Private _description As String
    
    Private _rate As System.Nullable(Of Double)
    
    Private _isBuyOut As System.Nullable(Of Boolean)
    
    Private _ussActivities As IList(Of Activity) = New List(Of Activity)()
    
    Private _ussOperationArtisans As IList(Of OperationArtisans) = New List(Of OperationArtisans)()
    
    Private _ussOperationMachines As IList(Of OperationMachines) = New List(Of OperationMachines)()
    
    Private _department As Department
    
    <[Property]("Code", ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If ((_code <> value)  _
                        Or (_code Is Nothing)) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If ((_description <> value)  _
                        Or (_description Is Nothing)) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("Rate", ColumnType:="Double")>  _
    Public Overridable Property Rate() As System.Nullable(Of Double)
        Get
            Return Me._rate
        End Get
        Set
            If ((_rate <> value)  _
                        Or (_rate Is Nothing)) Then
                Me._rate = value
                Me.NotifyPropertyChanged("Rate")
            End If
        End Set
    End Property
    
    <[Property]("IsBuyOut", ColumnType:="Boolean")>  _
    Public Overridable Property IsBuyOut() As System.Nullable(Of Boolean)
        Get
            Return Me._isBuyOut
        End Get
        Set
            If ((_isBuyOut <> value)  _
                        Or (_isBuyOut Is Nothing)) Then
                Me._isBuyOut = value
                Me.NotifyPropertyChanged("IsBuyOut")
            End If
        End Set
    End Property
    
    <HasMany(GetType(Activity), ColumnKey:="OperationId", Table:="ussActivity")>  _
    Public Overridable Property UssActivities() As IList(Of Activity)
        Get
            Return Me._ussActivities
        End Get
        Set
            Me._ussActivities = value
        End Set
    End Property
    
    <HasMany(GetType(OperationArtisans), ColumnKey:="OperationId", Table:="ussOperationArtisans")>  _
    Public Overridable Property UssOperationArtisans() As IList(Of OperationArtisans)
        Get
            Return Me._ussOperationArtisans
        End Get
        Set
            Me._ussOperationArtisans = value
        End Set
    End Property
    
    <HasMany(GetType(OperationMachines), ColumnKey:="OperationId", Table:="ussOperationMachines")>  _
    Public Overridable Property UssOperationMachines() As IList(Of OperationMachines)
        Get
            Return Me._ussOperationMachines
        End Get
        Set
            Me._ussOperationMachines = value
        End Set
    End Property
    
    <BelongsTo("DeparmentId")>  _
    Public Overridable Property Department() As Department
        Get
            Return Me._department
        End Get
        Set
            If ((_department <> value)  _
                        Or (_department Is Nothing)) Then
                Me._department = value
                Me.NotifyPropertyChanged("Department")
            End If
        End Set
    End Property
End Class

<ActiveRecord("Operation", Schema:="dbo")>  _
Partial Public Class Operation_
    Inherits Operation_Base
End Class

Partial Public MustInherit Class OperationArtisansBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of OperationArtisans)
    
    Private _artisan As Artisan
    
    Private _operation_ As Operation_
    
    <BelongsTo("ArtisanId")>  _
    Public Overridable Property Artisan() As Artisan
        Get
            Return Me._artisan
        End Get
        Set
            If ((_artisan <> value)  _
                        Or (_artisan Is Nothing)) Then
                Me._artisan = value
                Me.NotifyPropertyChanged("Artisan")
            End If
        End Set
    End Property
    
    <BelongsTo("OperationId")>  _
    Public Overridable Property Operation_() As Operation_
        Get
            Return Me._operation_
        End Get
        Set
            If ((_operation_ <> value)  _
                        Or (_operation_ Is Nothing)) Then
                Me._operation_ = value
                Me.NotifyPropertyChanged("Operation_")
            End If
        End Set
    End Property
End Class

<ActiveRecord("OperationArtisans", Schema:="dbo")>  _
Partial Public Class OperationArtisans
    Inherits OperationArtisansBase
End Class

Partial Public MustInherit Class OperationMachinesBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of OperationMachines)
    
    Private _machine As Machine
    
    Private _operation_ As Operation_
    
    <BelongsTo("MachineId")>  _
    Public Overridable Property Machine() As Machine
        Get
            Return Me._machine
        End Get
        Set
            If ((_machine <> value)  _
                        Or (_machine Is Nothing)) Then
                Me._machine = value
                Me.NotifyPropertyChanged("Machine")
            End If
        End Set
    End Property
    
    <BelongsTo("OperationId")>  _
    Public Overridable Property Operation_() As Operation_
        Get
            Return Me._operation_
        End Get
        Set
            If ((_operation_ <> value)  _
                        Or (_operation_ Is Nothing)) Then
                Me._operation_ = value
                Me.NotifyPropertyChanged("Operation_")
            End If
        End Set
    End Property
End Class

<ActiveRecord("OperationMachines", Schema:="dbo")>  _
Partial Public Class OperationMachines
    Inherits OperationMachinesBase
End Class

Partial Public MustInherit Class PartBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Part)
    
    Private _code As String
    
    Private _description As String
    
    Private _ussActivities As IList(Of Activity) = New List(Of Activity)()
    
    <[Property]("Code", ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If ((_code <> value)  _
                        Or (_code Is Nothing)) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If ((_description <> value)  _
                        Or (_description Is Nothing)) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <HasMany(GetType(Activity), ColumnKey:="PartId", Table:="ussActivity")>  _
    Public Overridable Property UssActivities() As IList(Of Activity)
        Get
            Return Me._ussActivities
        End Get
        Set
            Me._ussActivities = value
        End Set
    End Property
End Class

<ActiveRecord("Part", Schema:="dbo")>  _
Partial Public Class Part
    Inherits PartBase
End Class

Public Class awJobDataCapturingHelper
    
    Public Shared Function GetTypes() As Type()
        Return New Type() {GetType(Activity), GetType(Artisan), GetType(Customer), GetType(Department), GetType(Job), GetType(Machine), GetType(MachineArtisans), GetType(Operation_), GetType(OperationArtisans), GetType(OperationMachines), GetType(Part)}
    End Function
End Class

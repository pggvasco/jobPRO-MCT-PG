'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports Castle.ActiveRecord
Imports Castle.Components.Validator
Imports System
Imports System.Collections
Imports System.Collections.Generic
Imports System.ComponentModel


<Serializable()>  _
Partial Public MustInherit Class DefaultsBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Defaults)
    
    Private _deliveryDays As System.Nullable(Of Integer)
    
    Private _validityDays As System.Nullable(Of Integer)
    
    Private _warranty As String
    
    Private _defaultTransactionCode As String
    
    Private _manufacturingWarehouse As String
    
    Private _defaultRevenueCode As String
    
    Private _revenueCodeMethodID As System.Nullable(Of Integer)
    
    Private _isJobNumberAutoGenerated As System.Nullable(Of Boolean)
    
    Private _jobNumberPrefixTypeID As System.Nullable(Of Integer)
    
    Private _jobNumberPrefix As String
    
    Private _jobNumberPadding As System.Nullable(Of Integer)
    
    Private _defaultPricelistID As System.Nullable(Of Integer)
    
    Private _pricingMethodID As System.Nullable(Of Integer)
    
    Private _jobNumberNextNumber As System.Nullable(Of Integer)
    
    Private _isTemplateNumberAutoGenerated As System.Nullable(Of Boolean)
    
    Private _templateNumberPrefixType As System.Nullable(Of Integer)
    
    Private _templateNumberPrefix As String
    
    Private _templateNumberPadding As System.Nullable(Of Integer)
    
    Private _templateNumberNextNumber As System.Nullable(Of Integer)
    
    Private _isDeliveryNumberAutoGenerated As System.Nullable(Of Boolean)
    
    Private _deliveryNumberPrefixTypeID As System.Nullable(Of Integer)
    
    Private _deliveryNumberPrefix As String
    
    Private _deliveryNumberPadding As System.Nullable(Of Integer)
    
    Private _deliveryNumberNextNumber As System.Nullable(Of Integer)
    
    Private _isQuoteNumberAutoGenerated As System.Nullable(Of Boolean)
    
    Private _quoteNumberPrefix As String
    
    Private _quoteNumberPadding As System.Nullable(Of Integer)
    
    Private _quoteNumberPrefixTypeID As System.Nullable(Of Integer)
    
    Private _quoteNumberNextNumber As System.Nullable(Of Integer)
    
    Private _isRequisitionNumberAutoGenerated As System.Nullable(Of Boolean)
    
    Private _requisitionNumberPrefix As String
    
    Private _requisitionNumberPadding As System.Nullable(Of Integer)
    
    Private _requisitionNumberPrefixTypeID As System.Nullable(Of Integer)
    
    Private _requisitionNumberNextNumber As System.Nullable(Of Integer)
    
    Private _isPurchaseOrderNumberAutoGenerated As System.Nullable(Of Boolean)
    
    Private _purchaseOrderNumberPrefix As String
    
    Private _purchaseOrderNumberPadding As System.Nullable(Of Integer)
    
    Private _purchaseOrderNumberPrefixTypeID As System.Nullable(Of Integer)
    
    Private _purchaseOrderNumberNextNumber As System.Nullable(Of Integer)
    
    Private _toleranceSequences As System.Nullable(Of Integer)
    
    Private _toleranceBands As System.Nullable(Of Integer)
    
    Private _costCentreMethodID As System.Nullable(Of Integer)
    
    Private _eRPIntegrationMethodID As System.Nullable(Of Integer)
    
    Private _jobCardCreateBudgetLines As System.Nullable(Of Boolean)
    
    Private _jobCardCreateRecoveryLines As System.Nullable(Of Boolean)
    
    Private _jobCardCreateRequisitionLines As System.Nullable(Of Boolean)
    
    Private _jobCardCreatePurchaseOrders As System.Nullable(Of Boolean)
    
    Private _revenueMethodID As System.Nullable(Of Integer)
    
    Private _isRevenueOneLinerAutoGenerated As System.Nullable(Of Boolean)
    
    Private _revenueOneLinerInventoryItemID As System.Nullable(Of Integer)
    
    Private _isSellingPriceGPChecked As System.Nullable(Of Boolean)
    
    Private _sellingPriceGPPercentage As System.Nullable(Of Double)
    
    Private _sellingPriceGPPercentageUDF As String
    
    Private _sellingPriceGPCheckTypeID As System.Nullable(Of Integer)
    
    Private _checkPOCompleted As System.Nullable(Of Boolean)
    
    Private _dayStartTime As System.Nullable(Of Date)
    
    Private _nightStartTime As System.Nullable(Of Date)
    
    Private _employeeNumberUDF As String
    
    Private _employeeIDUDF As String
    
    Private _pricelistSource As System.Nullable(Of Integer)
    
    Private _isWarehouseUsed As System.Nullable(Of Boolean)
    
    Private _maritalStatusUDF As String
    
    Private _genderUDF As String
    
    Private _accountNumberUDF As String
    
    Private _passportNumberUDF As String
    
    Private _accountHolderNameUDF As String
    
    Private _branchCodeUDF As String
    
    Private _taxCalUDF As String
    
    Private _bankNameUDF As String
    
    Private _accountTypeUDF As String
    
    Private _currencyUDF As String
    
    Private _payByUDF As String
    
    Private _taxStartDateUDF As String
    
    Private _uIFUDF As String
    
    Private _dateRegisteredUDF As String
    
    Private _paymentFrequencyUDF As String
    
    Private _sANCReiptNoUDF As String
    
    Private _sANCRefNumberUDF As String
    
    Private _hospitalNumberUDF As String
    
    Private _commissionUDF As String
    
    Private _planUDF As String
    
    Private _defaultHoursUDF As String
    
    Private _employeeImportCodeUDF As String
    
    Private _fileSaveDefault As String
    
    Private _printInvoiceUDF As String
    
    Private _emailInvoiceUDF As String
    
    Private _proformaInvoiceUDF As String
    
    Private _includeExcelInvoiceUDF As String
    
    Private _emailProformaInvoiceUDF As String
    
    Private _emailFrom As String
    
    Private _emailSmtpClient As String
    
    Private _emailPort As System.Nullable(Of Integer)
    
    Private _emailEnableSsl As System.Nullable(Of Boolean)
    
    Private _emailUserName As String
    
    Private _emailPassword As String
    
    Private _proformaPrintUDF As String
    
    Private _isTimeSheetVersion As System.Nullable(Of Boolean)
    
    Private _employeeDummyUDF As String
    
    Private _employeeCompanyUDF As String
    
    Private _sANCYear As System.Nullable(Of Integer)
    
    Private _employeeImportCode2UDF As String
    
    Private _employeeImportCode3UDF As String
    
    Private _employeeImportCode4UDF As String
    
    Private _employeeImportCode5UDF As String
    
    Private _liveVersion As String
    
    Private _minDescription1Lenght As System.Nullable(Of Integer)
    
    Private _minDescription2Lenght As System.Nullable(Of Integer)
    
    Private _filterInventoryOnGroup As System.Nullable(Of Boolean)
    
    Private _activeItemsOnly As System.Nullable(Of Boolean)
    
    Private _supplierDeliveryNotePrefix As String
    
    Private _supplierDeliveryNotePadding As System.Nullable(Of Integer)
    
    Private _supplierDeliveryNoteNextNumber As System.Nullable(Of Integer)
    
    Private _isSupplierDeliveryNoteNumberAutoGenerated As System.Nullable(Of Boolean)
    
    Private _supplierDeliveryNotePrefixTypeID As System.Nullable(Of Integer)
    
    Private _proformaInvoiceNumberPrefix As String
    
    Private _proformaInvoiceNumberPadding As System.Nullable(Of Integer)
    
    Private _proformaInvoiceNumberNextNumber As System.Nullable(Of Integer)
    
    Private _jobCardCreateStandardLines As System.Nullable(Of Boolean)
    
    Private _warehouseIssueNumberPrefix As String
    
    Private _warehouseIssueNumberPadding As System.Nullable(Of Integer)
    
    Private _warehouseIssueNumberPrefixTypeID As System.Nullable(Of Integer)
    
    Private _warehouseIssueNumberNextNumber As String
    
    Private _isWarehouseIssueNumberAutoGenerated As System.Nullable(Of Boolean)
    
    Private _jobLineCancelledReasonMinLenght As System.Nullable(Of Short)
    
    Private _isRequisitionQtyReadOnly As System.Nullable(Of Boolean)
    
    Private _isStockReservedOnPreRequisition As System.Nullable(Of Boolean)
    
    Private _validateActiveJobsAsset As System.Nullable(Of Boolean)
    
    <[Property]("DeliveryDays", ColumnType:="Int32")>  _
    Public Overridable Property DeliveryDays() As System.Nullable(Of Integer)
        Get
            Return Me._deliveryDays
        End Get
        Set
            If ((_deliveryDays <> value)  _
                        Or (_deliveryDays Is Nothing)) Then
                Me._deliveryDays = value
                Me.NotifyPropertyChanged("DeliveryDays")
            End If
        End Set
    End Property
    
    <[Property]("ValidityDays", ColumnType:="Int32")>  _
    Public Overridable Property ValidityDays() As System.Nullable(Of Integer)
        Get
            Return Me._validityDays
        End Get
        Set
            If ((_validityDays <> value)  _
                        Or (_validityDays Is Nothing)) Then
                Me._validityDays = value
                Me.NotifyPropertyChanged("ValidityDays")
            End If
        End Set
    End Property
    
    <[Property]("Warranty", ColumnType:="String")>  _
    Public Overridable Property Warranty() As String
        Get
            Return Me._warranty
        End Get
        Set
            If (_warranty <> value) Then
                Me._warranty = value
                Me.NotifyPropertyChanged("Warranty")
            End If
        End Set
    End Property
    
    <[Property]("DefaultTransactionCode", ColumnType:="String")>  _
    Public Overridable Property DefaultTransactionCode() As String
        Get
            Return Me._defaultTransactionCode
        End Get
        Set
            If (_defaultTransactionCode <> value) Then
                Me._defaultTransactionCode = value
                Me.NotifyPropertyChanged("DefaultTransactionCode")
            End If
        End Set
    End Property
    
    <[Property]("ManufacturingWarehouseCode", ColumnType:="String")>  _
    Public Overridable Property ManufacturingWarehouse() As String
        Get
            Return Me._manufacturingWarehouse
        End Get
        Set
            If (_manufacturingWarehouse <> value) Then
                Me._manufacturingWarehouse = value
                Me.NotifyPropertyChanged("ManufacturingWarehouse")
            End If
        End Set
    End Property
    
    <[Property]("DefaultRevenueCode", ColumnType:="String")>  _
    Public Overridable Property DefaultRevenueCode() As String
        Get
            Return Me._defaultRevenueCode
        End Get
        Set
            If (_defaultRevenueCode <> value) Then
                Me._defaultRevenueCode = value
                Me.NotifyPropertyChanged("DefaultRevenueCode")
            End If
        End Set
    End Property
    
    <[Property]("RevenueCodeMethodID", ColumnType:="Int32")>  _
    Public Overridable Property RevenueCodeMethodID() As System.Nullable(Of Integer)
        Get
            Return Me._revenueCodeMethodID
        End Get
        Set
            If ((_revenueCodeMethodID <> value)  _
                        Or (_revenueCodeMethodID Is Nothing)) Then
                Me._revenueCodeMethodID = value
                Me.NotifyPropertyChanged("RevenueCodeMethodID")
            End If
        End Set
    End Property
    
    <[Property]("IsJobNumberAutoGenerated", ColumnType:="Boolean")>  _
    Public Overridable Property IsJobNumberAutoGenerated() As System.Nullable(Of Boolean)
        Get
            Return Me._isJobNumberAutoGenerated
        End Get
        Set
            If ((_isJobNumberAutoGenerated <> value)  _
                        Or (_isJobNumberAutoGenerated Is Nothing)) Then
                Me._isJobNumberAutoGenerated = value
                Me.NotifyPropertyChanged("IsJobNumberAutoGenerated")
            End If
        End Set
    End Property
    
    <[Property]("JobNumberPrefixTypeID", ColumnType:="Int32")>  _
    Public Overridable Property JobNumberPrefixTypeID() As System.Nullable(Of Integer)
        Get
            Return Me._jobNumberPrefixTypeID
        End Get
        Set
            If ((_jobNumberPrefixTypeID <> value)  _
                        Or (_jobNumberPrefixTypeID Is Nothing)) Then
                Me._jobNumberPrefixTypeID = value
                Me.NotifyPropertyChanged("JobNumberPrefixTypeID")
            End If
        End Set
    End Property
    
    <[Property]("JobNumberPrefix", ColumnType:="String")>  _
    Public Overridable Property JobNumberPrefix() As String
        Get
            Return Me._jobNumberPrefix
        End Get
        Set
            If (_jobNumberPrefix <> value) Then
                Me._jobNumberPrefix = value
                Me.NotifyPropertyChanged("JobNumberPrefix")
            End If
        End Set
    End Property
    
    <[Property]("JobNumberPadding", ColumnType:="Int32")>  _
    Public Overridable Property JobNumberPadding() As System.Nullable(Of Integer)
        Get
            Return Me._jobNumberPadding
        End Get
        Set
            If ((_jobNumberPadding <> value)  _
                        Or (_jobNumberPadding Is Nothing)) Then
                Me._jobNumberPadding = value
                Me.NotifyPropertyChanged("JobNumberPadding")
            End If
        End Set
    End Property
    
    <[Property]("DefaultPricelistID", ColumnType:="Int32")>  _
    Public Overridable Property DefaultPricelistID() As System.Nullable(Of Integer)
        Get
            Return Me._defaultPricelistID
        End Get
        Set
            If ((_defaultPricelistID <> value)  _
                        Or (_defaultPricelistID Is Nothing)) Then
                Me._defaultPricelistID = value
                Me.NotifyPropertyChanged("DefaultPricelistID")
            End If
        End Set
    End Property
    
    <[Property]("PricingMethodID", ColumnType:="Int32")>  _
    Public Overridable Property PricingMethodID() As System.Nullable(Of Integer)
        Get
            Return Me._pricingMethodID
        End Get
        Set
            If ((_pricingMethodID <> value)  _
                        Or (_pricingMethodID Is Nothing)) Then
                Me._pricingMethodID = value
                Me.NotifyPropertyChanged("PricingMethodID")
            End If
        End Set
    End Property
    
    <[Property]("JobNumberNextNumber", ColumnType:="Int32")>  _
    Public Overridable Property JobNumberNextNumber() As System.Nullable(Of Integer)
        Get
            Return Me._jobNumberNextNumber
        End Get
        Set
            If ((_jobNumberNextNumber <> value)  _
                        Or (_jobNumberNextNumber Is Nothing)) Then
                Me._jobNumberNextNumber = value
                Me.NotifyPropertyChanged("JobNumberNextNumber")
            End If
        End Set
    End Property
    
    <[Property]("IsTemplateNumberAutoGenerated", ColumnType:="Boolean")>  _
    Public Overridable Property IsTemplateNumberAutoGenerated() As System.Nullable(Of Boolean)
        Get
            Return Me._isTemplateNumberAutoGenerated
        End Get
        Set
            If ((_isTemplateNumberAutoGenerated <> value)  _
                        Or (_isTemplateNumberAutoGenerated Is Nothing)) Then
                Me._isTemplateNumberAutoGenerated = value
                Me.NotifyPropertyChanged("IsTemplateNumberAutoGenerated")
            End If
        End Set
    End Property
    
    <[Property]("TemplateNumberPrefixTypeID", ColumnType:="Int32")>  _
    Public Overridable Property TemplateNumberPrefixType() As System.Nullable(Of Integer)
        Get
            Return Me._templateNumberPrefixType
        End Get
        Set
            If ((_templateNumberPrefixType <> value)  _
                        Or (_templateNumberPrefixType Is Nothing)) Then
                Me._templateNumberPrefixType = value
                Me.NotifyPropertyChanged("TemplateNumberPrefixType")
            End If
        End Set
    End Property
    
    <[Property]("TemplateNumberPrefix", ColumnType:="String")>  _
    Public Overridable Property TemplateNumberPrefix() As String
        Get
            Return Me._templateNumberPrefix
        End Get
        Set
            If (_templateNumberPrefix <> value) Then
                Me._templateNumberPrefix = value
                Me.NotifyPropertyChanged("TemplateNumberPrefix")
            End If
        End Set
    End Property
    
    <[Property]("TemplateNumberPadding", ColumnType:="Int32")>  _
    Public Overridable Property TemplateNumberPadding() As System.Nullable(Of Integer)
        Get
            Return Me._templateNumberPadding
        End Get
        Set
            If ((_templateNumberPadding <> value)  _
                        Or (_templateNumberPadding Is Nothing)) Then
                Me._templateNumberPadding = value
                Me.NotifyPropertyChanged("TemplateNumberPadding")
            End If
        End Set
    End Property
    
    <[Property]("TemplateNumberNextNumber", ColumnType:="Int32")>  _
    Public Overridable Property TemplateNumberNextNumber() As System.Nullable(Of Integer)
        Get
            Return Me._templateNumberNextNumber
        End Get
        Set
            If ((_templateNumberNextNumber <> value)  _
                        Or (_templateNumberNextNumber Is Nothing)) Then
                Me._templateNumberNextNumber = value
                Me.NotifyPropertyChanged("TemplateNumberNextNumber")
            End If
        End Set
    End Property
    
    <[Property]("IsDeliveryNumberAutoGenerated", ColumnType:="Boolean")>  _
    Public Overridable Property IsDeliveryNumberAutoGenerated() As System.Nullable(Of Boolean)
        Get
            Return Me._isDeliveryNumberAutoGenerated
        End Get
        Set
            If ((_isDeliveryNumberAutoGenerated <> value)  _
                        Or (_isDeliveryNumberAutoGenerated Is Nothing)) Then
                Me._isDeliveryNumberAutoGenerated = value
                Me.NotifyPropertyChanged("IsDeliveryNumberAutoGenerated")
            End If
        End Set
    End Property
    
    <[Property]("DeliveryNumberPrefixTypeID", ColumnType:="Int32")>  _
    Public Overridable Property DeliveryNumberPrefixTypeID() As System.Nullable(Of Integer)
        Get
            Return Me._deliveryNumberPrefixTypeID
        End Get
        Set
            If ((_deliveryNumberPrefixTypeID <> value)  _
                        Or (_deliveryNumberPrefixTypeID Is Nothing)) Then
                Me._deliveryNumberPrefixTypeID = value
                Me.NotifyPropertyChanged("DeliveryNumberPrefixTypeID")
            End If
        End Set
    End Property
    
    <[Property]("DeliveryNumberPrefix", ColumnType:="String")>  _
    Public Overridable Property DeliveryNumberPrefix() As String
        Get
            Return Me._deliveryNumberPrefix
        End Get
        Set
            If (_deliveryNumberPrefix <> value) Then
                Me._deliveryNumberPrefix = value
                Me.NotifyPropertyChanged("DeliveryNumberPrefix")
            End If
        End Set
    End Property
    
    <[Property]("DeliveryNumberPadding", ColumnType:="Int32")>  _
    Public Overridable Property DeliveryNumberPadding() As System.Nullable(Of Integer)
        Get
            Return Me._deliveryNumberPadding
        End Get
        Set
            If ((_deliveryNumberPadding <> value)  _
                        Or (_deliveryNumberPadding Is Nothing)) Then
                Me._deliveryNumberPadding = value
                Me.NotifyPropertyChanged("DeliveryNumberPadding")
            End If
        End Set
    End Property
    
    <[Property]("DeliveryNumberNextNumber", ColumnType:="Int32")>  _
    Public Overridable Property DeliveryNumberNextNumber() As System.Nullable(Of Integer)
        Get
            Return Me._deliveryNumberNextNumber
        End Get
        Set
            If ((_deliveryNumberNextNumber <> value)  _
                        Or (_deliveryNumberNextNumber Is Nothing)) Then
                Me._deliveryNumberNextNumber = value
                Me.NotifyPropertyChanged("DeliveryNumberNextNumber")
            End If
        End Set
    End Property
    
    <[Property]("IsQuoteNumberAutoGenerated", ColumnType:="Boolean")>  _
    Public Overridable Property IsQuoteNumberAutoGenerated() As System.Nullable(Of Boolean)
        Get
            Return Me._isQuoteNumberAutoGenerated
        End Get
        Set
            If ((_isQuoteNumberAutoGenerated <> value)  _
                        Or (_isQuoteNumberAutoGenerated Is Nothing)) Then
                Me._isQuoteNumberAutoGenerated = value
                Me.NotifyPropertyChanged("IsQuoteNumberAutoGenerated")
            End If
        End Set
    End Property
    
    <[Property]("QuoteNumberPrefix", ColumnType:="String")>  _
    Public Overridable Property QuoteNumberPrefix() As String
        Get
            Return Me._quoteNumberPrefix
        End Get
        Set
            If (_quoteNumberPrefix <> value) Then
                Me._quoteNumberPrefix = value
                Me.NotifyPropertyChanged("QuoteNumberPrefix")
            End If
        End Set
    End Property
    
    <[Property]("QuoteNumberPadding", ColumnType:="Int32")>  _
    Public Overridable Property QuoteNumberPadding() As System.Nullable(Of Integer)
        Get
            Return Me._quoteNumberPadding
        End Get
        Set
            If ((_quoteNumberPadding <> value)  _
                        Or (_quoteNumberPadding Is Nothing)) Then
                Me._quoteNumberPadding = value
                Me.NotifyPropertyChanged("QuoteNumberPadding")
            End If
        End Set
    End Property
    
    <[Property]("QuoteNumberPrefixTypeID", ColumnType:="Int32")>  _
    Public Overridable Property QuoteNumberPrefixTypeID() As System.Nullable(Of Integer)
        Get
            Return Me._quoteNumberPrefixTypeID
        End Get
        Set
            If ((_quoteNumberPrefixTypeID <> value)  _
                        Or (_quoteNumberPrefixTypeID Is Nothing)) Then
                Me._quoteNumberPrefixTypeID = value
                Me.NotifyPropertyChanged("QuoteNumberPrefixTypeID")
            End If
        End Set
    End Property
    
    <[Property]("QuoteNumberNextNumber", ColumnType:="Int32")>  _
    Public Overridable Property QuoteNumberNextNumber() As System.Nullable(Of Integer)
        Get
            Return Me._quoteNumberNextNumber
        End Get
        Set
            If ((_quoteNumberNextNumber <> value)  _
                        Or (_quoteNumberNextNumber Is Nothing)) Then
                Me._quoteNumberNextNumber = value
                Me.NotifyPropertyChanged("QuoteNumberNextNumber")
            End If
        End Set
    End Property
    
    <[Property]("IsRequisitionNumberAutoGenerated", ColumnType:="Boolean")>  _
    Public Overridable Property IsRequisitionNumberAutoGenerated() As System.Nullable(Of Boolean)
        Get
            Return Me._isRequisitionNumberAutoGenerated
        End Get
        Set
            If ((_isRequisitionNumberAutoGenerated <> value)  _
                        Or (_isRequisitionNumberAutoGenerated Is Nothing)) Then
                Me._isRequisitionNumberAutoGenerated = value
                Me.NotifyPropertyChanged("IsRequisitionNumberAutoGenerated")
            End If
        End Set
    End Property
    
    <[Property]("RequisitionNumberPrefix", ColumnType:="String")>  _
    Public Overridable Property RequisitionNumberPrefix() As String
        Get
            Return Me._requisitionNumberPrefix
        End Get
        Set
            If (_requisitionNumberPrefix <> value) Then
                Me._requisitionNumberPrefix = value
                Me.NotifyPropertyChanged("RequisitionNumberPrefix")
            End If
        End Set
    End Property
    
    <[Property]("RequisitionNumberPadding", ColumnType:="Int32")>  _
    Public Overridable Property RequisitionNumberPadding() As System.Nullable(Of Integer)
        Get
            Return Me._requisitionNumberPadding
        End Get
        Set
            If ((_requisitionNumberPadding <> value)  _
                        Or (_requisitionNumberPadding Is Nothing)) Then
                Me._requisitionNumberPadding = value
                Me.NotifyPropertyChanged("RequisitionNumberPadding")
            End If
        End Set
    End Property
    
    <[Property]("RequisitionNumberPrefixTypeID", ColumnType:="Int32")>  _
    Public Overridable Property RequisitionNumberPrefixTypeID() As System.Nullable(Of Integer)
        Get
            Return Me._requisitionNumberPrefixTypeID
        End Get
        Set
            If ((_requisitionNumberPrefixTypeID <> value)  _
                        Or (_requisitionNumberPrefixTypeID Is Nothing)) Then
                Me._requisitionNumberPrefixTypeID = value
                Me.NotifyPropertyChanged("RequisitionNumberPrefixTypeID")
            End If
        End Set
    End Property
    
    <[Property]("RequisitionNumberNextNumber", ColumnType:="Int32")>  _
    Public Overridable Property RequisitionNumberNextNumber() As System.Nullable(Of Integer)
        Get
            Return Me._requisitionNumberNextNumber
        End Get
        Set
            If ((_requisitionNumberNextNumber <> value)  _
                        Or (_requisitionNumberNextNumber Is Nothing)) Then
                Me._requisitionNumberNextNumber = value
                Me.NotifyPropertyChanged("RequisitionNumberNextNumber")
            End If
        End Set
    End Property
    
    <[Property]("IsPurchaseOrderNumberAutoGenerated", ColumnType:="Boolean")>  _
    Public Overridable Property IsPurchaseOrderNumberAutoGenerated() As System.Nullable(Of Boolean)
        Get
            Return Me._isPurchaseOrderNumberAutoGenerated
        End Get
        Set
            If ((_isPurchaseOrderNumberAutoGenerated <> value)  _
                        Or (_isPurchaseOrderNumberAutoGenerated Is Nothing)) Then
                Me._isPurchaseOrderNumberAutoGenerated = value
                Me.NotifyPropertyChanged("IsPurchaseOrderNumberAutoGenerated")
            End If
        End Set
    End Property
    
    <[Property]("PurchaseOrderNumberPrefix", ColumnType:="String")>  _
    Public Overridable Property PurchaseOrderNumberPrefix() As String
        Get
            Return Me._purchaseOrderNumberPrefix
        End Get
        Set
            If (_purchaseOrderNumberPrefix <> value) Then
                Me._purchaseOrderNumberPrefix = value
                Me.NotifyPropertyChanged("PurchaseOrderNumberPrefix")
            End If
        End Set
    End Property
    
    <[Property]("PurchaseOrderNumberPadding", ColumnType:="Int32")>  _
    Public Overridable Property PurchaseOrderNumberPadding() As System.Nullable(Of Integer)
        Get
            Return Me._purchaseOrderNumberPadding
        End Get
        Set
            If ((_purchaseOrderNumberPadding <> value)  _
                        Or (_purchaseOrderNumberPadding Is Nothing)) Then
                Me._purchaseOrderNumberPadding = value
                Me.NotifyPropertyChanged("PurchaseOrderNumberPadding")
            End If
        End Set
    End Property
    
    <[Property]("PurchaseOrderNumberPrefixTypeID", ColumnType:="Int32")>  _
    Public Overridable Property PurchaseOrderNumberPrefixTypeID() As System.Nullable(Of Integer)
        Get
            Return Me._purchaseOrderNumberPrefixTypeID
        End Get
        Set
            If ((_purchaseOrderNumberPrefixTypeID <> value)  _
                        Or (_purchaseOrderNumberPrefixTypeID Is Nothing)) Then
                Me._purchaseOrderNumberPrefixTypeID = value
                Me.NotifyPropertyChanged("PurchaseOrderNumberPrefixTypeID")
            End If
        End Set
    End Property
    
    <[Property]("PurchaseOrderNumberNextNumber", ColumnType:="Int32")>  _
    Public Overridable Property PurchaseOrderNumberNextNumber() As System.Nullable(Of Integer)
        Get
            Return Me._purchaseOrderNumberNextNumber
        End Get
        Set
            If ((_purchaseOrderNumberNextNumber <> value)  _
                        Or (_purchaseOrderNumberNextNumber Is Nothing)) Then
                Me._purchaseOrderNumberNextNumber = value
                Me.NotifyPropertyChanged("PurchaseOrderNumberNextNumber")
            End If
        End Set
    End Property
    
    <[Property]("ToleranceSequences", ColumnType:="Int32")>  _
    Public Overridable Property ToleranceSequences() As System.Nullable(Of Integer)
        Get
            Return Me._toleranceSequences
        End Get
        Set
            If ((_toleranceSequences <> value)  _
                        Or (_toleranceSequences Is Nothing)) Then
                Me._toleranceSequences = value
                Me.NotifyPropertyChanged("ToleranceSequences")
            End If
        End Set
    End Property
    
    <[Property]("ToleranceBands", ColumnType:="Int32")>  _
    Public Overridable Property ToleranceBands() As System.Nullable(Of Integer)
        Get
            Return Me._toleranceBands
        End Get
        Set
            If ((_toleranceBands <> value)  _
                        Or (_toleranceBands Is Nothing)) Then
                Me._toleranceBands = value
                Me.NotifyPropertyChanged("ToleranceBands")
            End If
        End Set
    End Property
    
    <[Property]("CostCentreMethodID", ColumnType:="Int32")>  _
    Public Overridable Property CostCentreMethodID() As System.Nullable(Of Integer)
        Get
            Return Me._costCentreMethodID
        End Get
        Set
            If ((_costCentreMethodID <> value)  _
                        Or (_costCentreMethodID Is Nothing)) Then
                Me._costCentreMethodID = value
                Me.NotifyPropertyChanged("CostCentreMethodID")
            End If
        End Set
    End Property
    
    <[Property]("ERPIntegrationMethodID", ColumnType:="Int32")>  _
    Public Overridable Property ERPIntegrationMethodID() As System.Nullable(Of Integer)
        Get
            Return Me._eRPIntegrationMethodID
        End Get
        Set
            If ((_eRPIntegrationMethodID <> value)  _
                        Or (_eRPIntegrationMethodID Is Nothing)) Then
                Me._eRPIntegrationMethodID = value
                Me.NotifyPropertyChanged("ERPIntegrationMethodID")
            End If
        End Set
    End Property
    
    <[Property]("JobCardCreateBudgetLines", ColumnType:="Boolean")>  _
    Public Overridable Property JobCardCreateBudgetLines() As System.Nullable(Of Boolean)
        Get
            Return Me._jobCardCreateBudgetLines
        End Get
        Set
            If ((_jobCardCreateBudgetLines <> value)  _
                        Or (_jobCardCreateBudgetLines Is Nothing)) Then
                Me._jobCardCreateBudgetLines = value
                Me.NotifyPropertyChanged("JobCardCreateBudgetLines")
            End If
        End Set
    End Property
    
    <[Property]("JobCardCreateRecoveryLines", ColumnType:="Boolean")>  _
    Public Overridable Property JobCardCreateRecoveryLines() As System.Nullable(Of Boolean)
        Get
            Return Me._jobCardCreateRecoveryLines
        End Get
        Set
            If ((_jobCardCreateRecoveryLines <> value)  _
                        Or (_jobCardCreateRecoveryLines Is Nothing)) Then
                Me._jobCardCreateRecoveryLines = value
                Me.NotifyPropertyChanged("JobCardCreateRecoveryLines")
            End If
        End Set
    End Property
    
    <[Property]("JobCardCreateRequisitionLines", ColumnType:="Boolean")>  _
    Public Overridable Property JobCardCreateRequisitionLines() As System.Nullable(Of Boolean)
        Get
            Return Me._jobCardCreateRequisitionLines
        End Get
        Set
            If ((_jobCardCreateRequisitionLines <> value)  _
                        Or (_jobCardCreateRequisitionLines Is Nothing)) Then
                Me._jobCardCreateRequisitionLines = value
                Me.NotifyPropertyChanged("JobCardCreateRequisitionLines")
            End If
        End Set
    End Property
    
    <[Property]("JobCardCreatePurchaseOrders", ColumnType:="Boolean")>  _
    Public Overridable Property JobCardCreatePurchaseOrders() As System.Nullable(Of Boolean)
        Get
            Return Me._jobCardCreatePurchaseOrders
        End Get
        Set
            If ((_jobCardCreatePurchaseOrders <> value)  _
                        Or (_jobCardCreatePurchaseOrders Is Nothing)) Then
                Me._jobCardCreatePurchaseOrders = value
                Me.NotifyPropertyChanged("JobCardCreatePurchaseOrders")
            End If
        End Set
    End Property
    
    <[Property]("RevenueMethodID", ColumnType:="Int32")>  _
    Public Overridable Property RevenueMethodID() As System.Nullable(Of Integer)
        Get
            Return Me._revenueMethodID
        End Get
        Set
            If ((_revenueMethodID <> value)  _
                        Or (_revenueMethodID Is Nothing)) Then
                Me._revenueMethodID = value
                Me.NotifyPropertyChanged("RevenueMethodID")
            End If
        End Set
    End Property
    
    <[Property]("IsRevenueOneLinerAutoGenerated", ColumnType:="Boolean")>  _
    Public Overridable Property IsRevenueOneLinerAutoGenerated() As System.Nullable(Of Boolean)
        Get
            Return Me._isRevenueOneLinerAutoGenerated
        End Get
        Set
            If ((_isRevenueOneLinerAutoGenerated <> value)  _
                        Or (_isRevenueOneLinerAutoGenerated Is Nothing)) Then
                Me._isRevenueOneLinerAutoGenerated = value
                Me.NotifyPropertyChanged("IsRevenueOneLinerAutoGenerated")
            End If
        End Set
    End Property
    
    <[Property]("RevenueOneLinerInventoryItemID", ColumnType:="Int32")>  _
    Public Overridable Property RevenueOneLinerInventoryItemID() As System.Nullable(Of Integer)
        Get
            Return Me._revenueOneLinerInventoryItemID
        End Get
        Set
            If ((_revenueOneLinerInventoryItemID <> value)  _
                        Or (_revenueOneLinerInventoryItemID Is Nothing)) Then
                Me._revenueOneLinerInventoryItemID = value
                Me.NotifyPropertyChanged("RevenueOneLinerInventoryItemID")
            End If
        End Set
    End Property
    
    <[Property]("IsSellingPriceGPChecked", ColumnType:="Boolean")>  _
    Public Overridable Property IsSellingPriceGPChecked() As System.Nullable(Of Boolean)
        Get
            Return Me._isSellingPriceGPChecked
        End Get
        Set
            If ((_isSellingPriceGPChecked <> value)  _
                        Or (_isSellingPriceGPChecked Is Nothing)) Then
                Me._isSellingPriceGPChecked = value
                Me.NotifyPropertyChanged("IsSellingPriceGPChecked")
            End If
        End Set
    End Property
    
    <[Property]("SellingPriceGPPercentage", ColumnType:="Double")>  _
    Public Overridable Property SellingPriceGPPercentage() As System.Nullable(Of Double)
        Get
            Return Me._sellingPriceGPPercentage
        End Get
        Set
            If ((_sellingPriceGPPercentage <> value)  _
                        Or (_sellingPriceGPPercentage Is Nothing)) Then
                Me._sellingPriceGPPercentage = value
                Me.NotifyPropertyChanged("SellingPriceGPPercentage")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property SellingPriceGPPercentageUDF() As String
        Get
            Return Me._sellingPriceGPPercentageUDF
        End Get
        Set
            If (_sellingPriceGPPercentageUDF <> value) Then
                Me._sellingPriceGPPercentageUDF = value
                Me.NotifyPropertyChanged("SellingPriceGPPercentageUDF")
            End If
        End Set
    End Property
    
    <[Property]("SellingPriceGPCheckTypeID", ColumnType:="Int32")>  _
    Public Overridable Property SellingPriceGPCheckTypeID() As System.Nullable(Of Integer)
        Get
            Return Me._sellingPriceGPCheckTypeID
        End Get
        Set
            If ((_sellingPriceGPCheckTypeID <> value)  _
                        Or (_sellingPriceGPCheckTypeID Is Nothing)) Then
                Me._sellingPriceGPCheckTypeID = value
                Me.NotifyPropertyChanged("SellingPriceGPCheckTypeID")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Boolean")>  _
    Public Overridable Property CheckPOCompleted() As System.Nullable(Of Boolean)
        Get
            Return Me._checkPOCompleted
        End Get
        Set
            If ((_checkPOCompleted <> value)  _
                        Or (_checkPOCompleted Is Nothing)) Then
                Me._checkPOCompleted = value
                Me.NotifyPropertyChanged("CheckPOCompleted")
            End If
        End Set
    End Property
    
    <[Property]("DayStartTime", ColumnType:="Timestamp")>  _
    Public Overridable Property DayStartTime() As System.Nullable(Of Date)
        Get
            Return Me._dayStartTime
        End Get
        Set
            If ((_dayStartTime <> value)  _
                        Or (_dayStartTime Is Nothing)) Then
                Me._dayStartTime = value
                Me.NotifyPropertyChanged("DayStartTime")
            End If
        End Set
    End Property
    
    <[Property]("NightStartTime", ColumnType:="Timestamp")>  _
    Public Overridable Property NightStartTime() As System.Nullable(Of Date)
        Get
            Return Me._nightStartTime
        End Get
        Set
            If ((_nightStartTime <> value)  _
                        Or (_nightStartTime Is Nothing)) Then
                Me._nightStartTime = value
                Me.NotifyPropertyChanged("NightStartTime")
            End If
        End Set
    End Property
    
    <[Property]("EmployeeNumberUDF", ColumnType:="String")>  _
    Public Overridable Property EmployeeNumberUDF() As String
        Get
            Return Me._employeeNumberUDF
        End Get
        Set
            If (_employeeNumberUDF <> value) Then
                Me._employeeNumberUDF = value
                Me.NotifyPropertyChanged("EmployeeNumberUDF")
            End If
        End Set
    End Property
    
    <[Property]("EmployeeIDUDF", ColumnType:="String")>  _
    Public Overridable Property EmployeeIDUDF() As String
        Get
            Return Me._employeeIDUDF
        End Get
        Set
            If (_employeeIDUDF <> value) Then
                Me._employeeIDUDF = value
                Me.NotifyPropertyChanged("EmployeeIDUDF")
            End If
        End Set
    End Property
    
    <[Property]("PricelistNameSource", ColumnType:="Int32")>  _
    Public Overridable Property PricelistSource() As System.Nullable(Of Integer)
        Get
            Return Me._pricelistSource
        End Get
        Set
            If ((_pricelistSource <> value)  _
                        Or (_pricelistSource Is Nothing)) Then
                Me._pricelistSource = value
                Me.NotifyPropertyChanged("PricelistSource")
            End If
        End Set
    End Property
    
    <[Property]("IsWarehouseUsed", ColumnType:="Boolean")>  _
    Public Overridable Property IsWarehouseUsed() As System.Nullable(Of Boolean)
        Get
            Return Me._isWarehouseUsed
        End Get
        Set
            If ((_isWarehouseUsed <> value)  _
                        Or (_isWarehouseUsed Is Nothing)) Then
                Me._isWarehouseUsed = value
                Me.NotifyPropertyChanged("IsWarehouseUsed")
            End If
        End Set
    End Property
    
    <[Property]("MaritalStatusUDF", ColumnType:="String")>  _
    Public Overridable Property MaritalStatusUDF() As String
        Get
            Return Me._maritalStatusUDF
        End Get
        Set
            If (_maritalStatusUDF <> value) Then
                Me._maritalStatusUDF = value
                Me.NotifyPropertyChanged("MaritalStatusUDF")
            End If
        End Set
    End Property
    
    <[Property]("GenderUDF", ColumnType:="String")>  _
    Public Overridable Property GenderUDF() As String
        Get
            Return Me._genderUDF
        End Get
        Set
            If (_genderUDF <> value) Then
                Me._genderUDF = value
                Me.NotifyPropertyChanged("GenderUDF")
            End If
        End Set
    End Property
    
    <[Property]("AccountNumberUDF", ColumnType:="String")>  _
    Public Overridable Property AccountNumberUDF() As String
        Get
            Return Me._accountNumberUDF
        End Get
        Set
            If (_accountNumberUDF <> value) Then
                Me._accountNumberUDF = value
                Me.NotifyPropertyChanged("AccountNumberUDF")
            End If
        End Set
    End Property
    
    <[Property]("PassportNumberUDF", ColumnType:="String")>  _
    Public Overridable Property PassportNumberUDF() As String
        Get
            Return Me._passportNumberUDF
        End Get
        Set
            If (_passportNumberUDF <> value) Then
                Me._passportNumberUDF = value
                Me.NotifyPropertyChanged("PassportNumberUDF")
            End If
        End Set
    End Property
    
    <[Property]("AccountHolderNameUDF", ColumnType:="String")>  _
    Public Overridable Property AccountHolderNameUDF() As String
        Get
            Return Me._accountHolderNameUDF
        End Get
        Set
            If (_accountHolderNameUDF <> value) Then
                Me._accountHolderNameUDF = value
                Me.NotifyPropertyChanged("AccountHolderNameUDF")
            End If
        End Set
    End Property
    
    <[Property]("BranchCodeUDF", ColumnType:="String")>  _
    Public Overridable Property BranchCodeUDF() As String
        Get
            Return Me._branchCodeUDF
        End Get
        Set
            If (_branchCodeUDF <> value) Then
                Me._branchCodeUDF = value
                Me.NotifyPropertyChanged("BranchCodeUDF")
            End If
        End Set
    End Property
    
    <[Property]("TaxCalUDF", ColumnType:="String")>  _
    Public Overridable Property TaxCalUDF() As String
        Get
            Return Me._taxCalUDF
        End Get
        Set
            If (_taxCalUDF <> value) Then
                Me._taxCalUDF = value
                Me.NotifyPropertyChanged("TaxCalUDF")
            End If
        End Set
    End Property
    
    <[Property]("BankNameUDF", ColumnType:="String")>  _
    Public Overridable Property BankNameUDF() As String
        Get
            Return Me._bankNameUDF
        End Get
        Set
            If (_bankNameUDF <> value) Then
                Me._bankNameUDF = value
                Me.NotifyPropertyChanged("BankNameUDF")
            End If
        End Set
    End Property
    
    <[Property]("AccountTypeUDF", ColumnType:="String")>  _
    Public Overridable Property AccountTypeUDF() As String
        Get
            Return Me._accountTypeUDF
        End Get
        Set
            If (_accountTypeUDF <> value) Then
                Me._accountTypeUDF = value
                Me.NotifyPropertyChanged("AccountTypeUDF")
            End If
        End Set
    End Property
    
    <[Property]("CurrencyUDF", ColumnType:="String")>  _
    Public Overridable Property CurrencyUDF() As String
        Get
            Return Me._currencyUDF
        End Get
        Set
            If (_currencyUDF <> value) Then
                Me._currencyUDF = value
                Me.NotifyPropertyChanged("CurrencyUDF")
            End If
        End Set
    End Property
    
    <[Property]("PayByUDF", ColumnType:="String")>  _
    Public Overridable Property PayByUDF() As String
        Get
            Return Me._payByUDF
        End Get
        Set
            If (_payByUDF <> value) Then
                Me._payByUDF = value
                Me.NotifyPropertyChanged("PayByUDF")
            End If
        End Set
    End Property
    
    <[Property]("TaxStartDateUDF", ColumnType:="String")>  _
    Public Overridable Property TaxStartDateUDF() As String
        Get
            Return Me._taxStartDateUDF
        End Get
        Set
            If (_taxStartDateUDF <> value) Then
                Me._taxStartDateUDF = value
                Me.NotifyPropertyChanged("TaxStartDateUDF")
            End If
        End Set
    End Property
    
    <[Property]("UIFUDF", ColumnType:="String")>  _
    Public Overridable Property UIFUDF() As String
        Get
            Return Me._uIFUDF
        End Get
        Set
            If (_uIFUDF <> value) Then
                Me._uIFUDF = value
                Me.NotifyPropertyChanged("UIFUDF")
            End If
        End Set
    End Property
    
    <[Property]("DateRegisteredUDF", ColumnType:="String")>  _
    Public Overridable Property DateRegisteredUDF() As String
        Get
            Return Me._dateRegisteredUDF
        End Get
        Set
            If (_dateRegisteredUDF <> value) Then
                Me._dateRegisteredUDF = value
                Me.NotifyPropertyChanged("DateRegisteredUDF")
            End If
        End Set
    End Property
    
    <[Property]("PaymentFrequencyUDF", ColumnType:="String")>  _
    Public Overridable Property PaymentFrequencyUDF() As String
        Get
            Return Me._paymentFrequencyUDF
        End Get
        Set
            If (_paymentFrequencyUDF <> value) Then
                Me._paymentFrequencyUDF = value
                Me.NotifyPropertyChanged("PaymentFrequencyUDF")
            End If
        End Set
    End Property
    
    <[Property]("SANCReiptNoUDF", ColumnType:="String")>  _
    Public Overridable Property SANCReiptNoUDF() As String
        Get
            Return Me._sANCReiptNoUDF
        End Get
        Set
            If (_sANCReiptNoUDF <> value) Then
                Me._sANCReiptNoUDF = value
                Me.NotifyPropertyChanged("SANCReiptNoUDF")
            End If
        End Set
    End Property
    
    <[Property]("SANCRefNumberUDF", ColumnType:="String")>  _
    Public Overridable Property SANCRefNumberUDF() As String
        Get
            Return Me._sANCRefNumberUDF
        End Get
        Set
            If (_sANCRefNumberUDF <> value) Then
                Me._sANCRefNumberUDF = value
                Me.NotifyPropertyChanged("SANCRefNumberUDF")
            End If
        End Set
    End Property
    
    <[Property]("HospitalNumberUDF", ColumnType:="String")>  _
    Public Overridable Property HospitalNumberUDF() As String
        Get
            Return Me._hospitalNumberUDF
        End Get
        Set
            If (_hospitalNumberUDF <> value) Then
                Me._hospitalNumberUDF = value
                Me.NotifyPropertyChanged("HospitalNumberUDF")
            End If
        End Set
    End Property
    
    <[Property]("CommissionUDF", ColumnType:="String")>  _
    Public Overridable Property CommissionUDF() As String
        Get
            Return Me._commissionUDF
        End Get
        Set
            If (_commissionUDF <> value) Then
                Me._commissionUDF = value
                Me.NotifyPropertyChanged("CommissionUDF")
            End If
        End Set
    End Property
    
    <[Property]("PlanUDF", ColumnType:="String")>  _
    Public Overridable Property PlanUDF() As String
        Get
            Return Me._planUDF
        End Get
        Set
            If (_planUDF <> value) Then
                Me._planUDF = value
                Me.NotifyPropertyChanged("PlanUDF")
            End If
        End Set
    End Property
    
    <[Property]("DefaultHoursUDF", ColumnType:="String")>  _
    Public Overridable Property DefaultHoursUDF() As String
        Get
            Return Me._defaultHoursUDF
        End Get
        Set
            If (_defaultHoursUDF <> value) Then
                Me._defaultHoursUDF = value
                Me.NotifyPropertyChanged("DefaultHoursUDF")
            End If
        End Set
    End Property
    
    <[Property]("EmployeeImportCodeUDF", ColumnType:="String")>  _
    Public Overridable Property EmployeeImportCodeUDF() As String
        Get
            Return Me._employeeImportCodeUDF
        End Get
        Set
            If (_employeeImportCodeUDF <> value) Then
                Me._employeeImportCodeUDF = value
                Me.NotifyPropertyChanged("EmployeeImportCodeUDF")
            End If
        End Set
    End Property
    
    <[Property]("FileSaveDefault", ColumnType:="String")>  _
    Public Overridable Property FileSaveDefault() As String
        Get
            Return Me._fileSaveDefault
        End Get
        Set
            If (_fileSaveDefault <> value) Then
                Me._fileSaveDefault = value
                Me.NotifyPropertyChanged("FileSaveDefault")
            End If
        End Set
    End Property
    
    <[Property]("PrintInvoiceUDF", ColumnType:="String")>  _
    Public Overridable Property PrintInvoiceUDF() As String
        Get
            Return Me._printInvoiceUDF
        End Get
        Set
            If (_printInvoiceUDF <> value) Then
                Me._printInvoiceUDF = value
                Me.NotifyPropertyChanged("PrintInvoiceUDF")
            End If
        End Set
    End Property
    
    <[Property]("EmailInvoiceUDF", ColumnType:="String")>  _
    Public Overridable Property EmailInvoiceUDF() As String
        Get
            Return Me._emailInvoiceUDF
        End Get
        Set
            If (_emailInvoiceUDF <> value) Then
                Me._emailInvoiceUDF = value
                Me.NotifyPropertyChanged("EmailInvoiceUDF")
            End If
        End Set
    End Property
    
    <[Property]("ProformaInvoiceUDF", ColumnType:="String")>  _
    Public Overridable Property ProformaInvoiceUDF() As String
        Get
            Return Me._proformaInvoiceUDF
        End Get
        Set
            If (_proformaInvoiceUDF <> value) Then
                Me._proformaInvoiceUDF = value
                Me.NotifyPropertyChanged("ProformaInvoiceUDF")
            End If
        End Set
    End Property
    
    <[Property]("IncludeExcelInvoiceUDF", ColumnType:="String")>  _
    Public Overridable Property IncludeExcelInvoiceUDF() As String
        Get
            Return Me._includeExcelInvoiceUDF
        End Get
        Set
            If (_includeExcelInvoiceUDF <> value) Then
                Me._includeExcelInvoiceUDF = value
                Me.NotifyPropertyChanged("IncludeExcelInvoiceUDF")
            End If
        End Set
    End Property
    
    <[Property]("EmailProformaInvoiceUDF", ColumnType:="String")>  _
    Public Overridable Property EmailProformaInvoiceUDF() As String
        Get
            Return Me._emailProformaInvoiceUDF
        End Get
        Set
            If (_emailProformaInvoiceUDF <> value) Then
                Me._emailProformaInvoiceUDF = value
                Me.NotifyPropertyChanged("EmailProformaInvoiceUDF")
            End If
        End Set
    End Property
    
    <[Property]("EmailFrom", ColumnType:="String")>  _
    Public Overridable Property EmailFrom() As String
        Get
            Return Me._emailFrom
        End Get
        Set
            If (_emailFrom <> value) Then
                Me._emailFrom = value
                Me.NotifyPropertyChanged("EmailFrom")
            End If
        End Set
    End Property
    
    <[Property]("EmailSmtpClient", ColumnType:="String")>  _
    Public Overridable Property EmailSmtpClient() As String
        Get
            Return Me._emailSmtpClient
        End Get
        Set
            If (_emailSmtpClient <> value) Then
                Me._emailSmtpClient = value
                Me.NotifyPropertyChanged("EmailSmtpClient")
            End If
        End Set
    End Property
    
    <[Property]("EmailPort", ColumnType:="Int32")>  _
    Public Overridable Property EmailPort() As System.Nullable(Of Integer)
        Get
            Return Me._emailPort
        End Get
        Set
            If ((_emailPort <> value)  _
                        Or (_emailPort Is Nothing)) Then
                Me._emailPort = value
                Me.NotifyPropertyChanged("EmailPort")
            End If
        End Set
    End Property
    
    <[Property]("EmailEnableSsl", ColumnType:="Boolean")>  _
    Public Overridable Property EmailEnableSsl() As System.Nullable(Of Boolean)
        Get
            Return Me._emailEnableSsl
        End Get
        Set
            If ((_emailEnableSsl <> value)  _
                        Or (_emailEnableSsl Is Nothing)) Then
                Me._emailEnableSsl = value
                Me.NotifyPropertyChanged("EmailEnableSsl")
            End If
        End Set
    End Property
    
    <[Property]("EmailUserName", ColumnType:="String")>  _
    Public Overridable Property EmailUserName() As String
        Get
            Return Me._emailUserName
        End Get
        Set
            If (_emailUserName <> value) Then
                Me._emailUserName = value
                Me.NotifyPropertyChanged("EmailUserName")
            End If
        End Set
    End Property
    
    <[Property]("EmailPassword", ColumnType:="String")>  _
    Public Overridable Property EmailPassword() As String
        Get
            Return Me._emailPassword
        End Get
        Set
            If (_emailPassword <> value) Then
                Me._emailPassword = value
                Me.NotifyPropertyChanged("EmailPassword")
            End If
        End Set
    End Property
    
    <[Property]("ProformaPrintUDF", ColumnType:="String")>  _
    Public Overridable Property ProformaPrintUDF() As String
        Get
            Return Me._proformaPrintUDF
        End Get
        Set
            If (_proformaPrintUDF <> value) Then
                Me._proformaPrintUDF = value
                Me.NotifyPropertyChanged("ProformaPrintUDF")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Boolean")>  _
    Public Overridable Property IsTimeSheetVersion() As System.Nullable(Of Boolean)
        Get
            Return Me._isTimeSheetVersion
        End Get
        Set
            If ((_isTimeSheetVersion <> value)  _
                        Or (_isTimeSheetVersion Is Nothing)) Then
                Me._isTimeSheetVersion = value
                Me.NotifyPropertyChanged("IsTimeSheetVersion")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property EmployeeDummyUDF() As String
        Get
            Return Me._employeeDummyUDF
        End Get
        Set
            If (_employeeDummyUDF <> value) Then
                Me._employeeDummyUDF = value
                Me.NotifyPropertyChanged("EmployeeDummyUDF")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property EmployeeCompanyUDF() As String
        Get
            Return Me._employeeCompanyUDF
        End Get
        Set
            If (_employeeCompanyUDF <> value) Then
                Me._employeeCompanyUDF = value
                Me.NotifyPropertyChanged("EmployeeCompanyUDF")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Int32")>  _
    Public Overridable Property SANCYear() As System.Nullable(Of Integer)
        Get
            Return Me._sANCYear
        End Get
        Set
            If ((_sANCYear <> value)  _
                        Or (_sANCYear Is Nothing)) Then
                Me._sANCYear = value
                Me.NotifyPropertyChanged("SANCYear")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property EmployeeImportCode2UDF() As String
        Get
            Return Me._employeeImportCode2UDF
        End Get
        Set
            If (_employeeImportCode2UDF <> value) Then
                Me._employeeImportCode2UDF = value
                Me.NotifyPropertyChanged("EmployeeImportCode2UDF")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property EmployeeImportCode3UDF() As String
        Get
            Return Me._employeeImportCode3UDF
        End Get
        Set
            If (_employeeImportCode3UDF <> value) Then
                Me._employeeImportCode3UDF = value
                Me.NotifyPropertyChanged("EmployeeImportCode3UDF")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property EmployeeImportCode4UDF() As String
        Get
            Return Me._employeeImportCode4UDF
        End Get
        Set
            If (_employeeImportCode4UDF <> value) Then
                Me._employeeImportCode4UDF = value
                Me.NotifyPropertyChanged("EmployeeImportCode4UDF")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property EmployeeImportCode5UDF() As String
        Get
            Return Me._employeeImportCode5UDF
        End Get
        Set
            If (_employeeImportCode5UDF <> value) Then
                Me._employeeImportCode5UDF = value
                Me.NotifyPropertyChanged("EmployeeImportCode5UDF")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property LiveVersion() As String
        Get
            Return Me._liveVersion
        End Get
        Set
            If (_liveVersion <> value) Then
                Me._liveVersion = value
                Me.NotifyPropertyChanged("LiveVersion")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Int32")>  _
    Public Overridable Property MinDescription1Lenght() As System.Nullable(Of Integer)
        Get
            Return Me._minDescription1Lenght
        End Get
        Set
            If ((_minDescription1Lenght <> value)  _
                        Or (_minDescription1Lenght Is Nothing)) Then
                Me._minDescription1Lenght = value
                Me.NotifyPropertyChanged("MinDescription1Lenght")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Int32")>  _
    Public Overridable Property MinDescription2Lenght() As System.Nullable(Of Integer)
        Get
            Return Me._minDescription2Lenght
        End Get
        Set
            If ((_minDescription2Lenght <> value)  _
                        Or (_minDescription2Lenght Is Nothing)) Then
                Me._minDescription2Lenght = value
                Me.NotifyPropertyChanged("MinDescription2Lenght")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Boolean")>  _
    Public Overridable Property FilterInventoryOnGroup() As System.Nullable(Of Boolean)
        Get
            Return Me._filterInventoryOnGroup
        End Get
        Set
            If ((_filterInventoryOnGroup <> value)  _
                        Or (_filterInventoryOnGroup Is Nothing)) Then
                Me._filterInventoryOnGroup = value
                Me.NotifyPropertyChanged("FilterInventoryOnGroup")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Boolean")>  _
    Public Overridable Property ActiveItemsOnly() As System.Nullable(Of Boolean)
        Get
            Return Me._activeItemsOnly
        End Get
        Set
            If ((_activeItemsOnly <> value)  _
                        Or (_activeItemsOnly Is Nothing)) Then
                Me._activeItemsOnly = value
                Me.NotifyPropertyChanged("ActiveItemsOnly")
            End If
        End Set
    End Property
    
    <[Property]("SupplierDeliveryNotePrefix", ColumnType:="String")>  _
    Public Overridable Property SupplierDeliveryNotePrefix() As String
        Get
            Return Me._supplierDeliveryNotePrefix
        End Get
        Set
            If (_supplierDeliveryNotePrefix <> value) Then
                Me._supplierDeliveryNotePrefix = value
                Me.NotifyPropertyChanged("SupplierDeliveryNotePrefix")
            End If
        End Set
    End Property
    
    <[Property]("SupplierDeliveryNotePadding", ColumnType:="Int32")>  _
    Public Overridable Property SupplierDeliveryNotePadding() As System.Nullable(Of Integer)
        Get
            Return Me._supplierDeliveryNotePadding
        End Get
        Set
            If ((_supplierDeliveryNotePadding <> value)  _
                        Or (_supplierDeliveryNotePadding Is Nothing)) Then
                Me._supplierDeliveryNotePadding = value
                Me.NotifyPropertyChanged("SupplierDeliveryNotePadding")
            End If
        End Set
    End Property
    
    <[Property]("SupplierDeliveryNoteNextNumber", ColumnType:="Int32")>  _
    Public Overridable Property SupplierDeliveryNoteNextNumber() As System.Nullable(Of Integer)
        Get
            Return Me._supplierDeliveryNoteNextNumber
        End Get
        Set
            If ((_supplierDeliveryNoteNextNumber <> value)  _
                        Or (_supplierDeliveryNoteNextNumber Is Nothing)) Then
                Me._supplierDeliveryNoteNextNumber = value
                Me.NotifyPropertyChanged("SupplierDeliveryNoteNextNumber")
            End If
        End Set
    End Property
    
    <[Property]("isSupplierDeliveryNoteNumberAutoGenerated", ColumnType:="Boolean")>  _
    Public Overridable Property isSupplierDeliveryNoteNumberAutoGenerated() As System.Nullable(Of Boolean)
        Get
            Return Me._isSupplierDeliveryNoteNumberAutoGenerated
        End Get
        Set
            If ((_isSupplierDeliveryNoteNumberAutoGenerated <> value)  _
                        Or (_isSupplierDeliveryNoteNumberAutoGenerated Is Nothing)) Then
                Me._isSupplierDeliveryNoteNumberAutoGenerated = value
                Me.NotifyPropertyChanged("isSupplierDeliveryNoteNumberAutoGenerated")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Int32")>  _
    Public Overridable Property SupplierDeliveryNotePrefixTypeID() As System.Nullable(Of Integer)
        Get
            Return Me._supplierDeliveryNotePrefixTypeID
        End Get
        Set
            If ((_supplierDeliveryNotePrefixTypeID <> value)  _
                        Or (_supplierDeliveryNotePrefixTypeID Is Nothing)) Then
                Me._supplierDeliveryNotePrefixTypeID = value
                Me.NotifyPropertyChanged("SupplierDeliveryNotePrefixTypeID")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property ProformaInvoiceNumberPrefix() As String
        Get
            Return Me._proformaInvoiceNumberPrefix
        End Get
        Set
            If (_proformaInvoiceNumberPrefix <> value) Then
                Me._proformaInvoiceNumberPrefix = value
                Me.NotifyPropertyChanged("ProformaInvoiceNumberPrefix")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Int32")>  _
    Public Overridable Property ProformaInvoiceNumberPadding() As System.Nullable(Of Integer)
        Get
            Return Me._proformaInvoiceNumberPadding
        End Get
        Set
            If ((_proformaInvoiceNumberPadding <> value)  _
                        Or (_proformaInvoiceNumberPadding Is Nothing)) Then
                Me._proformaInvoiceNumberPadding = value
                Me.NotifyPropertyChanged("ProformaInvoiceNumberPadding")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Int32")>  _
    Public Overridable Property ProformaInvoiceNumberNextNumber() As System.Nullable(Of Integer)
        Get
            Return Me._proformaInvoiceNumberNextNumber
        End Get
        Set
            If ((_proformaInvoiceNumberNextNumber <> value)  _
                        Or (_proformaInvoiceNumberNextNumber Is Nothing)) Then
                Me._proformaInvoiceNumberNextNumber = value
                Me.NotifyPropertyChanged("ProformaInvoiceNumberNextNumber")
            End If
        End Set
    End Property
    
    <[Property]("JobCardCreateStandardLines", ColumnType:="Boolean")>  _
    Public Overridable Property JobCardCreateStandardLines() As System.Nullable(Of Boolean)
        Get
            Return Me._jobCardCreateStandardLines
        End Get
        Set
            If ((_jobCardCreateStandardLines <> value)  _
                        Or (_jobCardCreateStandardLines Is Nothing)) Then
                Me._jobCardCreateStandardLines = value
                Me.NotifyPropertyChanged("JobCardCreateStandardLines")
            End If
        End Set
    End Property
    
    <[Property]("WarehouseIssueNumberPrefix", ColumnType:="String")>  _
    Public Overridable Property WarehouseIssueNumberPrefix() As String
        Get
            Return Me._warehouseIssueNumberPrefix
        End Get
        Set
            If (_warehouseIssueNumberPrefix <> value) Then
                Me._warehouseIssueNumberPrefix = value
                Me.NotifyPropertyChanged("WarehouseIssueNumberPrefix")
            End If
        End Set
    End Property
    
    <[Property]("WarehouseIssueNumberPadding", ColumnType:="Int32")>  _
    Public Overridable Property WarehouseIssueNumberPadding() As System.Nullable(Of Integer)
        Get
            Return Me._warehouseIssueNumberPadding
        End Get
        Set
            If ((_warehouseIssueNumberPadding <> value)  _
                        Or (_warehouseIssueNumberPadding Is Nothing)) Then
                Me._warehouseIssueNumberPadding = value
                Me.NotifyPropertyChanged("WarehouseIssueNumberPadding")
            End If
        End Set
    End Property
    
    <[Property]("WarehouseIssueNumberPrefixTypeID", ColumnType:="Int32")>  _
    Public Overridable Property WarehouseIssueNumberPrefixTypeID() As System.Nullable(Of Integer)
        Get
            Return Me._warehouseIssueNumberPrefixTypeID
        End Get
        Set
            If ((_warehouseIssueNumberPrefixTypeID <> value)  _
                        Or (_warehouseIssueNumberPrefixTypeID Is Nothing)) Then
                Me._warehouseIssueNumberPrefixTypeID = value
                Me.NotifyPropertyChanged("WarehouseIssueNumberPrefixTypeID")
            End If
        End Set
    End Property
    
    <[Property]("WarehouseIssueNumberNextNumber", ColumnType:="String")>  _
    Public Overridable Property WarehouseIssueNumberNextNumber() As String
        Get
            Return Me._warehouseIssueNumberNextNumber
        End Get
        Set
            If (_warehouseIssueNumberNextNumber <> value) Then
                Me._warehouseIssueNumberNextNumber = value
                Me.NotifyPropertyChanged("WarehouseIssueNumberNextNumber")
            End If
        End Set
    End Property
    
    <[Property]("isWarehouseIssueNumberAutoGenerated", ColumnType:="Boolean")>  _
    Public Overridable Property isWarehouseIssueNumberAutoGenerated() As System.Nullable(Of Boolean)
        Get
            Return Me._isWarehouseIssueNumberAutoGenerated
        End Get
        Set
            If ((_isWarehouseIssueNumberAutoGenerated <> value)  _
                        Or (_isWarehouseIssueNumberAutoGenerated Is Nothing)) Then
                Me._isWarehouseIssueNumberAutoGenerated = value
                Me.NotifyPropertyChanged("isWarehouseIssueNumberAutoGenerated")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Int16")>  _
    Public Overridable Property JobLineCancelledReasonMinLenght() As System.Nullable(Of Short)
        Get
            Return Me._jobLineCancelledReasonMinLenght
        End Get
        Set
            If ((_jobLineCancelledReasonMinLenght <> value)  _
                        Or (_jobLineCancelledReasonMinLenght Is Nothing)) Then
                Me._jobLineCancelledReasonMinLenght = value
                Me.NotifyPropertyChanged("JobLineCancelledReasonMinLenght")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Boolean")>  _
    Public Overridable Property IsRequisitionQtyReadOnly() As System.Nullable(Of Boolean)
        Get
            Return Me._isRequisitionQtyReadOnly
        End Get
        Set
            If ((_isRequisitionQtyReadOnly <> value)  _
                        Or (_isRequisitionQtyReadOnly Is Nothing)) Then
                Me._isRequisitionQtyReadOnly = value
                Me.NotifyPropertyChanged("IsRequisitionQtyReadOnly")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Boolean")>  _
    Public Overridable Property IsStockReservedOnPreRequisition() As System.Nullable(Of Boolean)
        Get
            Return Me._isStockReservedOnPreRequisition
        End Get
        Set
            If ((_isStockReservedOnPreRequisition <> value)  _
                        Or (_isStockReservedOnPreRequisition Is Nothing)) Then
                Me._isStockReservedOnPreRequisition = value
                Me.NotifyPropertyChanged("IsStockReservedOnPreRequisition")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Boolean")>  _
    Public Overridable Property ValidateActiveJobsAsset() As System.Nullable(Of Boolean)
        Get
            Return Me._validateActiveJobsAsset
        End Get
        Set
            If ((_validateActiveJobsAsset <> value)  _
                        Or (_validateActiveJobsAsset Is Nothing)) Then
                Me._validateActiveJobsAsset = value
                Me.NotifyPropertyChanged("ValidateActiveJobsAsset")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFDefaults", Schema:="dbo")>  _
Partial Public Class Defaults
    Inherits DefaultsBase
End Class

<Serializable()>  _
Partial Public MustInherit Class WorkCentreBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of WorkCentre)
    
    Private _code As String
    
    Private _description As String
    
    Private _calculationTypeID As System.Nullable(Of Integer)
    
    Private _hourlyRate As System.Nullable(Of Double)
    
    Private _factor As System.Nullable(Of Double)
    
    Private _formula As String
    
    Private _recoveryServiceCode As String
    
    Private _isBuyOut As System.Nullable(Of Boolean)
    
    Private _gLExpense As System.Nullable(Of Boolean)
    
    Private _aPExpense As System.Nullable(Of Boolean)
    
    Private _primaryService As System.Nullable(Of Boolean)
    
    Private _measurement As String
    
    Private _usageRequired As System.Nullable(Of Boolean)
    
    Private _defaultUsage As System.Nullable(Of Double)
    
    Private _approvedUsage As System.Nullable(Of Double)
    
    Private _projectID As System.Nullable(Of Integer)
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _jobTemplateLines As IList(Of JobTemplateLine) = New List(Of JobTemplateLine)()
    
    Private _workCentreCategory As WorkCentreCategory
    
    Private _costCentre As CostCentre
    
    <[Property]("Code", ColumnType:="String"),  _
     ValidateNonEmpty("Required field"),  _
     ValidateIsUnique()>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String"),  _
     ValidateNonEmpty("Required field")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("CalculationTypeID", ColumnType:="Int32")>  _
    Public Overridable Property CalculationTypeID() As System.Nullable(Of Integer)
        Get
            Return Me._calculationTypeID
        End Get
        Set
            If ((_calculationTypeID <> value)  _
                        Or (_calculationTypeID Is Nothing)) Then
                Me._calculationTypeID = value
                Me.NotifyPropertyChanged("CalculationTypeID")
            End If
        End Set
    End Property
    
    <[Property]("HourlyRate", ColumnType:="Double")>  _
    Public Overridable Property HourlyRate() As System.Nullable(Of Double)
        Get
            Return Me._hourlyRate
        End Get
        Set
            If ((_hourlyRate <> value)  _
                        Or (_hourlyRate Is Nothing)) Then
                Me._hourlyRate = value
                Me.NotifyPropertyChanged("HourlyRate")
            End If
        End Set
    End Property
    
    <[Property]("Factor", ColumnType:="Double", [Default]:="1")>  _
    Public Overridable Property Factor() As System.Nullable(Of Double)
        Get
            Return Me._factor
        End Get
        Set
            If ((_factor <> value)  _
                        Or (_factor Is Nothing)) Then
                Me._factor = value
                Me.NotifyPropertyChanged("Factor")
            End If
        End Set
    End Property
    
    <[Property]("Formula", ColumnType:="String")>  _
    Public Overridable Property Formula() As String
        Get
            Return Me._formula
        End Get
        Set
            If (_formula <> value) Then
                Me._formula = value
                Me.NotifyPropertyChanged("Formula")
            End If
        End Set
    End Property
    
    <[Property]("RecoveryServiceCode", ColumnType:="String")>  _
    Public Overridable Property RecoveryServiceCode() As String
        Get
            Return Me._recoveryServiceCode
        End Get
        Set
            If (_recoveryServiceCode <> value) Then
                Me._recoveryServiceCode = value
                Me.NotifyPropertyChanged("RecoveryServiceCode")
            End If
        End Set
    End Property
    
    <[Property]("IsBuyOut", ColumnType:="Boolean")>  _
    Public Overridable Property IsBuyOut() As System.Nullable(Of Boolean)
        Get
            Return Me._isBuyOut
        End Get
        Set
            If ((_isBuyOut <> value)  _
                        Or (_isBuyOut Is Nothing)) Then
                Me._isBuyOut = value
                Me.NotifyPropertyChanged("IsBuyOut")
            End If
        End Set
    End Property
    
    <[Property]("GLExpense", ColumnType:="Boolean")>  _
    Public Overridable Property GLExpense() As System.Nullable(Of Boolean)
        Get
            Return Me._gLExpense
        End Get
        Set
            If ((_gLExpense <> value)  _
                        Or (_gLExpense Is Nothing)) Then
                Me._gLExpense = value
                Me.NotifyPropertyChanged("GLExpense")
            End If
        End Set
    End Property
    
    <[Property]("APExpense", ColumnType:="Boolean")>  _
    Public Overridable Property APExpense() As System.Nullable(Of Boolean)
        Get
            Return Me._aPExpense
        End Get
        Set
            If ((_aPExpense <> value)  _
                        Or (_aPExpense Is Nothing)) Then
                Me._aPExpense = value
                Me.NotifyPropertyChanged("APExpense")
            End If
        End Set
    End Property
    
    '''<summary>
    '''PrimaryService
    '''</summary>
    <[Property]("PrimaryService", ColumnType:="Boolean")>  _
    Public Overridable Property PrimaryService() As System.Nullable(Of Boolean)
        Get
            Return Me._primaryService
        End Get
        Set
            If ((_primaryService <> value)  _
                        Or (_primaryService Is Nothing)) Then
                Me._primaryService = value
                Me.NotifyPropertyChanged("PrimaryService")
            End If
        End Set
    End Property
    
    <[Property]("Measurement", ColumnType:="String")>  _
    Public Overridable Property Measurement() As String
        Get
            Return Me._measurement
        End Get
        Set
            If (_measurement <> value) Then
                Me._measurement = value
                Me.NotifyPropertyChanged("Measurement")
            End If
        End Set
    End Property
    
    <[Property]("UsageRequired", ColumnType:="Boolean")>  _
    Public Overridable Property UsageRequired() As System.Nullable(Of Boolean)
        Get
            Return Me._usageRequired
        End Get
        Set
            If ((_usageRequired <> value)  _
                        Or (_usageRequired Is Nothing)) Then
                Me._usageRequired = value
                Me.NotifyPropertyChanged("UsageRequired")
            End If
        End Set
    End Property
    
    <[Property]("DefaultUsage", ColumnType:="Double")>  _
    Public Overridable Property DefaultUsage() As System.Nullable(Of Double)
        Get
            Return Me._defaultUsage
        End Get
        Set
            If ((_defaultUsage <> value)  _
                        Or (_defaultUsage Is Nothing)) Then
                Me._defaultUsage = value
                Me.NotifyPropertyChanged("DefaultUsage")
            End If
        End Set
    End Property
    
    <[Property]("ApprovedUsage", ColumnType:="Double")>  _
    Public Overridable Property ApprovedUsage() As System.Nullable(Of Double)
        Get
            Return Me._approvedUsage
        End Get
        Set
            If ((_approvedUsage <> value)  _
                        Or (_approvedUsage Is Nothing)) Then
                Me._approvedUsage = value
                Me.NotifyPropertyChanged("ApprovedUsage")
            End If
        End Set
    End Property
    
    <[Property]("ProjectID", ColumnType:="Int32")>  _
    Public Overridable Property ProjectID() As System.Nullable(Of Integer)
        Get
            Return Me._projectID
        End Get
        Set
            If ((_projectID <> value)  _
                        Or (_projectID Is Nothing)) Then
                Me._projectID = value
                Me.NotifyPropertyChanged("ProjectID")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(JobTemplateLine), ColumnKey:="WorkCentreID", Lazy:=true, NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobTemplateLines() As IList(Of JobTemplateLine)
        Get
            Return Me._jobTemplateLines
        End Get
        Set
            Me._jobTemplateLines = value
        End Set
    End Property
    
    <BelongsTo("CategoryID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property WorkCentreCategory() As WorkCentreCategory
        Get
            Return Me._workCentreCategory
        End Get
        Set
            If (_workCentreCategory <> value) Then
                Me._workCentreCategory = value
                Me.NotifyPropertyChanged("WorkCentreCategory")
            End If
        End Set
    End Property
    
    <BelongsTo("CostCentreID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property CostCentre() As CostCentre
        Get
            Return Me._costCentre
        End Get
        Set
            If (_costCentre <> value) Then
                Me._costCentre = value
                Me.NotifyPropertyChanged("CostCentre")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFWorkCentre", Lazy:=true, Schema:="dbo")>  _
Partial Public Class WorkCentre
    Inherits WorkCentreBase
End Class

<Serializable()>  _
Partial Public MustInherit Class JobBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Job)
    
    Private _jobNumber As String
    
    Private _quoteNumber As String
    
    Private _deliveryNumber As String
    
    Private _orderNumber As String
    
    Private _jobDate As System.Nullable(Of Date)
    
    Private _quoteDate As System.Nullable(Of Date)
    
    Private _invoiceDate As System.Nullable(Of Date)
    
    Private _acceptedDate As System.Nullable(Of Date)
    
    Private _estimatedDeliveryDate As System.Nullable(Of Date)
    
    Private _cancelledDate As System.Nullable(Of Date)
    
    Private _estimatedStartDate As System.Nullable(Of Date)
    
    Private _estimatedEndDate As System.Nullable(Of Date)
    
    Private _actualStartDate As System.Nullable(Of Date)
    
    Private _actualEndDate As System.Nullable(Of Date)
    
    Private _validityDays As System.Nullable(Of Short)
    
    Private _deliveryDays As System.Nullable(Of Short)
    
    Private _isTemplate As System.Nullable(Of Boolean)
    
    Private _isBreakdown As System.Nullable(Of Boolean)
    
    Private _isApproved As System.Nullable(Of Boolean)
    
    Private _isProcured As System.Nullable(Of Boolean)
    
    Private _isStockDrawn As System.Nullable(Of Boolean)
    
    Private _contractID As System.Nullable(Of Integer)
    
    Private _representativeID As System.Nullable(Of Integer)
    
    Private _jobAgentID As System.Nullable(Of Integer)
    
    Private _approveAgentID As System.Nullable(Of Integer)
    
    Private _buyingAgentID As System.Nullable(Of Integer)
    
    Private _assignedAgentID As System.Nullable(Of Integer)
    
    Private _quoteAgentID As System.Nullable(Of Integer)
    
    Private _jobCardID As System.Nullable(Of Integer)
    
    Private _accountName As String
    
    Private _contactName As String
    
    Private _telephone As String
    
    Private _email As String
    
    Private _fax As String
    
    Private _description1 As String
    
    Private _description2 As String
    
    Private _quantity As System.Nullable(Of Double)
    
    Private _unitPrice As System.Nullable(Of Double)
    
    Private _totalPrice As System.Nullable(Of Double)
    
    Private _unitCost As System.Nullable(Of Double)
    
    Private _totalCost As System.Nullable(Of Double)
    
    Private _orderTotal As System.Nullable(Of Double)
    
    Private _discountPercent As System.Nullable(Of Double)
    
    Private _discountAmount As System.Nullable(Of Double)
    
    Private _newPrice As System.Nullable(Of Double)
    
    Private _warranty As String
    
    Private _cancelReason As String
    
    Private _quoteComments As String
    
    Private _pricelistID As System.Nullable(Of Integer)
    
    Private _quantityDelivered As System.Nullable(Of Double)
    
    Private _stateID As System.Nullable(Of Integer)
    
    Private _requisitionNumber As String
    
    Private _subContractorReference As String
    
    Private _subContractorQuotedPrice As System.Nullable(Of Double)
    
    Private _subContractor As String
    
    Private _preRequisitionPrintedAgentID As System.Nullable(Of Integer)
    
    Private _requisitionPrintedAgentID As System.Nullable(Of Integer)
    
    Private _importReference As String
    
    Private _expectedGP As System.Nullable(Of Double)
    
    Private _currentGP As System.Nullable(Of Double)
    
    Private _actualCost As System.Nullable(Of Double)
    
    Private _sourceID As System.Nullable(Of Integer)
    
    Private _importDate As System.Nullable(Of Date)
    
    Private _jobSourceID As System.Nullable(Of Integer)
    
    Private _templateID As System.Nullable(Of Integer)
    
    Private _isCancelled As System.Nullable(Of Boolean)
    
    Private _cancelAgentID As System.Nullable(Of Integer)
    
    Private _supplierQuantityDelivered As System.Nullable(Of Integer)
    
    Private _defaultDiscountPercent As System.Nullable(Of Double)
    
    Private _serviceTemplate As System.Nullable(Of Integer)
    
    Private _equipamentoNo1 As System.Nullable(Of Integer)
    
    Private _equipamentoNo2 As System.Nullable(Of Integer)
    
    Private _equipamentoNo3 As System.Nullable(Of Integer)
    
    Private _equipamentoNo4 As System.Nullable(Of Integer)
    
    Private _equipamentoNo5 As System.Nullable(Of Integer)
    
    Private _serviceType As System.Nullable(Of Integer)
    
    Private _assetOperator As System.Nullable(Of Integer)
    
    Private _operator_A As System.Nullable(Of Integer)
    
    Private _technician As System.Nullable(Of Integer)
    
    Private _workshopManager As System.Nullable(Of Integer)
    
    Private _resolutionCode As String
    
    Private _errorCode As String
    
    Private _kMPercorridos As System.Nullable(Of Double)
    
    Private _kMAutorizado As System.Nullable(Of Double)
    
    Private _distanciaSTD As System.Nullable(Of Double)
    
    Private _inicioViagem As System.Nullable(Of Date)
    
    Private _startDate As System.Nullable(Of Date)
    
    Private _endDate As System.Nullable(Of Date)
    
    Private _fimViagem As System.Nullable(Of Date)
    
    Private _machineHoursToDate As System.Nullable(Of Double)
    
    Private _attachments As String
    
    Private _mastType As String
    
    Private _clientAsset As System.Nullable(Of Boolean)
    
    Private _assetClass As System.Nullable(Of Integer)
    
    Private _usageConfirmed As System.Nullable(Of Boolean)
    
    Private _totalUsage As System.Nullable(Of Double)
    
    Private _eq1UsageBefore As Double
    
    Private _eq2UsageBefore As Double
    
    Private _eq3UsageBefore As Double
    
    Private _eq4UsageBefore As Double
    
    Private _eq5UsageBefore As Double
    
    Private _eq1TotalUsage As System.Nullable(Of Double)
    
    Private _eq2TotalUsage As System.Nullable(Of Double)
    
    Private _eq3TotalUsage As System.Nullable(Of Double)
    
    Private _eq4TotalUsage As System.Nullable(Of Double)
    
    Private _eq5TotalUsage As System.Nullable(Of Double)
    
    Private _assetTypeID As System.Nullable(Of Integer)
    
    Private _assetTypeID2 As System.Nullable(Of Integer)
    
    Private _assetTypeID3 As System.Nullable(Of Integer)
    
    Private _assetTypeID4 As System.Nullable(Of Integer)
    
    Private _assetTypeID5 As System.Nullable(Of Integer)
    
    Private _maintenance_Repair As System.Nullable(Of Boolean)
    
    Private _assetOperator2 As System.Nullable(Of Integer)
    
    Private _assetOperator3 As System.Nullable(Of Integer)
    
    Private _assetOperator4 As System.Nullable(Of Integer)
    
    Private _assetOperator5 As System.Nullable(Of Integer)
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _jobDeliveries As IList(Of JobDelivery) = New List(Of JobDelivery)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _jobLines As IList(Of JobLine) = New List(Of JobLine)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _jobTolerances As IList(Of JobTolerance) = New List(Of JobTolerance)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _requisitions As IList(Of Requisition) = New List(Of Requisition)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _purchaseOrders As IList(Of PurchaseOrder) = New List(Of PurchaseOrder)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _notes As IList(Of Note) = New List(Of Note)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _jobMemoes As IList(Of JobMemo) = New List(Of JobMemo)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _jobDrawingAnnotations As IList(Of JobDrawingAnnotation) = New List(Of JobDrawingAnnotation)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _jobLineTimes As IList(Of JobLineTime) = New List(Of JobLineTime)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _jobAttachments As IList(Of JobAttachment) = New List(Of JobAttachment)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _jobSupplierDeliveryNotes As IList(Of JobSupplierDeliveryNote) = New List(Of JobSupplierDeliveryNote)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _proformaInvoices As IList(Of ProformaInvoice) = New List(Of ProformaInvoice)()
    
    Private _jobStage As JobStage
    
    Private _jobType As JobType
    
    Private _drawing As Drawing
    
    Private _generation As Generation
    
    Private _make As Make
    
    Private _model As Model
    
    Private _function As [Function]
    
    Private _jobCategory As JobCategory
    
    Private _workCentreCategory As WorkCentreCategory
    
    Private _costCentre As CostCentre
    
    Private _cancelReasonCode As CancelReasonCode
    
    <[Property]("JobNumber", ColumnType:="String"),  _
     ValidateIsUnique("Job Number must be unique.")>  _
    Public Overridable Property JobNumber() As String
        Get
            Return Me._jobNumber
        End Get
        Set
            If (_jobNumber <> value) Then
                Me._jobNumber = value
                Me.NotifyPropertyChanged("JobNumber")
            End If
        End Set
    End Property
    
    <[Property]("QuoteNumber", ColumnType:="String"),  _
     ValidateIsUnique("Quote Number must be unique.")>  _
    Public Overridable Property QuoteNumber() As String
        Get
            Return Me._quoteNumber
        End Get
        Set
            If (_quoteNumber <> value) Then
                Me._quoteNumber = value
                Me.NotifyPropertyChanged("QuoteNumber")
            End If
        End Set
    End Property
    
    <[Property]("DeliveryNumber", ColumnType:="String")>  _
    Public Overridable Property DeliveryNumber() As String
        Get
            Return Me._deliveryNumber
        End Get
        Set
            If (_deliveryNumber <> value) Then
                Me._deliveryNumber = value
                Me.NotifyPropertyChanged("DeliveryNumber")
            End If
        End Set
    End Property
    
    <[Property]("OrderNumber", ColumnType:="String")>  _
    Public Overridable Property OrderNumber() As String
        Get
            Return Me._orderNumber
        End Get
        Set
            If (_orderNumber <> value) Then
                Me._orderNumber = value
                Me.NotifyPropertyChanged("OrderNumber")
            End If
        End Set
    End Property
    
    <[Property]("JobDate", ColumnType:="DateTime")>  _
    Public Overridable Property JobDate() As System.Nullable(Of Date)
        Get
            Return Me._jobDate
        End Get
        Set
            If ((_jobDate <> value)  _
                        Or (_jobDate Is Nothing)) Then
                Me._jobDate = value
                Me.NotifyPropertyChanged("JobDate")
            End If
        End Set
    End Property
    
    <[Property]("QuoteDate", ColumnType:="DateTime")>  _
    Public Overridable Property QuoteDate() As System.Nullable(Of Date)
        Get
            Return Me._quoteDate
        End Get
        Set
            If ((_quoteDate <> value)  _
                        Or (_quoteDate Is Nothing)) Then
                Me._quoteDate = value
                Me.NotifyPropertyChanged("QuoteDate")
            End If
        End Set
    End Property
    
    <[Property]("InvoiceDate", ColumnType:="DateTime")>  _
    Public Overridable Property InvoiceDate() As System.Nullable(Of Date)
        Get
            Return Me._invoiceDate
        End Get
        Set
            If ((_invoiceDate <> value)  _
                        Or (_invoiceDate Is Nothing)) Then
                Me._invoiceDate = value
                Me.NotifyPropertyChanged("InvoiceDate")
            End If
        End Set
    End Property
    
    <[Property]("AcceptedDate", ColumnType:="DateTime")>  _
    Public Overridable Property AcceptedDate() As System.Nullable(Of Date)
        Get
            Return Me._acceptedDate
        End Get
        Set
            If ((_acceptedDate <> value)  _
                        Or (_acceptedDate Is Nothing)) Then
                Me._acceptedDate = value
                Me.NotifyPropertyChanged("AcceptedDate")
            End If
        End Set
    End Property
    
    <[Property]("EstimatedDeliveryDate", ColumnType:="DateTime")>  _
    Public Overridable Property EstimatedDeliveryDate() As System.Nullable(Of Date)
        Get
            Return Me._estimatedDeliveryDate
        End Get
        Set
            If ((_estimatedDeliveryDate <> value)  _
                        Or (_estimatedDeliveryDate Is Nothing)) Then
                Me._estimatedDeliveryDate = value
                Me.NotifyPropertyChanged("EstimatedDeliveryDate")
            End If
        End Set
    End Property
    
    <[Property]("CancelledDate", ColumnType:="DateTime")>  _
    Public Overridable Property CancelledDate() As System.Nullable(Of Date)
        Get
            Return Me._cancelledDate
        End Get
        Set
            If ((_cancelledDate <> value)  _
                        Or (_cancelledDate Is Nothing)) Then
                Me._cancelledDate = value
                Me.NotifyPropertyChanged("CancelledDate")
            End If
        End Set
    End Property
    
    <[Property]("EstimatedStartDate", ColumnType:="DateTime")>  _
    Public Overridable Property EstimatedStartDate() As System.Nullable(Of Date)
        Get
            Return Me._estimatedStartDate
        End Get
        Set
            If ((_estimatedStartDate <> value)  _
                        Or (_estimatedStartDate Is Nothing)) Then
                Me._estimatedStartDate = value
                Me.NotifyPropertyChanged("EstimatedStartDate")
            End If
        End Set
    End Property
    
    <[Property]("EstimatedEndDate", ColumnType:="DateTime")>  _
    Public Overridable Property EstimatedEndDate() As System.Nullable(Of Date)
        Get
            Return Me._estimatedEndDate
        End Get
        Set
            If ((_estimatedEndDate <> value)  _
                        Or (_estimatedEndDate Is Nothing)) Then
                Me._estimatedEndDate = value
                Me.NotifyPropertyChanged("EstimatedEndDate")
            End If
        End Set
    End Property
    
    <[Property]("ActualStartDate", ColumnType:="DateTime")>  _
    Public Overridable Property ActualStartDate() As System.Nullable(Of Date)
        Get
            Return Me._actualStartDate
        End Get
        Set
            If ((_actualStartDate <> value)  _
                        Or (_actualStartDate Is Nothing)) Then
                Me._actualStartDate = value
                Me.NotifyPropertyChanged("ActualStartDate")
            End If
        End Set
    End Property
    
    <[Property]("ActualEndDate", ColumnType:="DateTime")>  _
    Public Overridable Property ActualEndDate() As System.Nullable(Of Date)
        Get
            Return Me._actualEndDate
        End Get
        Set
            If ((_actualEndDate <> value)  _
                        Or (_actualEndDate Is Nothing)) Then
                Me._actualEndDate = value
                Me.NotifyPropertyChanged("ActualEndDate")
            End If
        End Set
    End Property
    
    <[Property]("ValidityDays", ColumnType:="Int16")>  _
    Public Overridable Property ValidityDays() As System.Nullable(Of Short)
        Get
            Return Me._validityDays
        End Get
        Set
            If ((_validityDays <> value)  _
                        Or (_validityDays Is Nothing)) Then
                Me._validityDays = value
                Me.NotifyPropertyChanged("ValidityDays")
            End If
        End Set
    End Property
    
    <[Property]("DeliveryDays", ColumnType:="Int16")>  _
    Public Overridable Property DeliveryDays() As System.Nullable(Of Short)
        Get
            Return Me._deliveryDays
        End Get
        Set
            If ((_deliveryDays <> value)  _
                        Or (_deliveryDays Is Nothing)) Then
                Me._deliveryDays = value
                Me.NotifyPropertyChanged("DeliveryDays")
            End If
        End Set
    End Property
    
    <[Property]("IsTemplate", ColumnType:="Boolean")>  _
    Public Overridable Property IsTemplate() As System.Nullable(Of Boolean)
        Get
            Return Me._isTemplate
        End Get
        Set
            If ((_isTemplate <> value)  _
                        Or (_isTemplate Is Nothing)) Then
                Me._isTemplate = value
                Me.NotifyPropertyChanged("IsTemplate")
            End If
        End Set
    End Property
    
    <[Property]("IsBreakdown", ColumnType:="Boolean")>  _
    Public Overridable Property IsBreakdown() As System.Nullable(Of Boolean)
        Get
            Return Me._isBreakdown
        End Get
        Set
            If ((_isBreakdown <> value)  _
                        Or (_isBreakdown Is Nothing)) Then
                Me._isBreakdown = value
                Me.NotifyPropertyChanged("IsBreakdown")
            End If
        End Set
    End Property
    
    <[Property]("IsApproved", ColumnType:="Boolean")>  _
    Public Overridable Property IsApproved() As System.Nullable(Of Boolean)
        Get
            Return Me._isApproved
        End Get
        Set
            If ((_isApproved <> value)  _
                        Or (_isApproved Is Nothing)) Then
                Me._isApproved = value
                Me.NotifyPropertyChanged("IsApproved")
            End If
        End Set
    End Property
    
    <[Property]("IsProcured", ColumnType:="Boolean")>  _
    Public Overridable Property IsProcured() As System.Nullable(Of Boolean)
        Get
            Return Me._isProcured
        End Get
        Set
            If ((_isProcured <> value)  _
                        Or (_isProcured Is Nothing)) Then
                Me._isProcured = value
                Me.NotifyPropertyChanged("IsProcured")
            End If
        End Set
    End Property
    
    <[Property]("IsStockDrawn", ColumnType:="Boolean")>  _
    Public Overridable Property IsStockDrawn() As System.Nullable(Of Boolean)
        Get
            Return Me._isStockDrawn
        End Get
        Set
            If ((_isStockDrawn <> value)  _
                        Or (_isStockDrawn Is Nothing)) Then
                Me._isStockDrawn = value
                Me.NotifyPropertyChanged("IsStockDrawn")
            End If
        End Set
    End Property
    
    <[Property]("ContractID", ColumnType:="Int32")>  _
    Public Overridable Property ContractID() As System.Nullable(Of Integer)
        Get
            Return Me._contractID
        End Get
        Set
            If ((_contractID <> value)  _
                        Or (_contractID Is Nothing)) Then
                Me._contractID = value
                Me.NotifyPropertyChanged("ContractID")
            End If
        End Set
    End Property
    
    <[Property]("RepresentativeID", ColumnType:="Int32")>  _
    Public Overridable Property RepresentativeID() As System.Nullable(Of Integer)
        Get
            Return Me._representativeID
        End Get
        Set
            If ((_representativeID <> value)  _
                        Or (_representativeID Is Nothing)) Then
                Me._representativeID = value
                Me.NotifyPropertyChanged("RepresentativeID")
            End If
        End Set
    End Property
    
    <[Property]("JobAgentID", ColumnType:="Int32")>  _
    Public Overridable Property JobAgentID() As System.Nullable(Of Integer)
        Get
            Return Me._jobAgentID
        End Get
        Set
            If ((_jobAgentID <> value)  _
                        Or (_jobAgentID Is Nothing)) Then
                Me._jobAgentID = value
                Me.NotifyPropertyChanged("JobAgentID")
            End If
        End Set
    End Property
    
    <[Property]("ApproveAgentID", ColumnType:="Int32")>  _
    Public Overridable Property ApproveAgentID() As System.Nullable(Of Integer)
        Get
            Return Me._approveAgentID
        End Get
        Set
            If ((_approveAgentID <> value)  _
                        Or (_approveAgentID Is Nothing)) Then
                Me._approveAgentID = value
                Me.NotifyPropertyChanged("ApproveAgentID")
            End If
        End Set
    End Property
    
    <[Property]("BuyingAgentID", ColumnType:="Int32")>  _
    Public Overridable Property BuyingAgentID() As System.Nullable(Of Integer)
        Get
            Return Me._buyingAgentID
        End Get
        Set
            If ((_buyingAgentID <> value)  _
                        Or (_buyingAgentID Is Nothing)) Then
                Me._buyingAgentID = value
                Me.NotifyPropertyChanged("BuyingAgentID")
            End If
        End Set
    End Property
    
    <[Property]("AssignedAgentID", ColumnType:="Int32")>  _
    Public Overridable Property AssignedAgentID() As System.Nullable(Of Integer)
        Get
            Return Me._assignedAgentID
        End Get
        Set
            If ((_assignedAgentID <> value)  _
                        Or (_assignedAgentID Is Nothing)) Then
                Me._assignedAgentID = value
                Me.NotifyPropertyChanged("AssignedAgentID")
            End If
        End Set
    End Property
    
    <[Property]("QuoteAgentID", ColumnType:="Int32")>  _
    Public Overridable Property QuoteAgentID() As System.Nullable(Of Integer)
        Get
            Return Me._quoteAgentID
        End Get
        Set
            If ((_quoteAgentID <> value)  _
                        Or (_quoteAgentID Is Nothing)) Then
                Me._quoteAgentID = value
                Me.NotifyPropertyChanged("QuoteAgentID")
            End If
        End Set
    End Property
    
    <[Property]("JobCardID", ColumnType:="Int32")>  _
    Public Overridable Property JobCardID() As System.Nullable(Of Integer)
        Get
            Return Me._jobCardID
        End Get
        Set
            If ((_jobCardID <> value)  _
                        Or (_jobCardID Is Nothing)) Then
                Me._jobCardID = value
                Me.NotifyPropertyChanged("JobCardID")
            End If
        End Set
    End Property
    
    <[Property]("AccountName", ColumnType:="String")>  _
    Public Overridable Property AccountName() As String
        Get
            Return Me._accountName
        End Get
        Set
            If (_accountName <> value) Then
                Me._accountName = value
                Me.NotifyPropertyChanged("AccountName")
            End If
        End Set
    End Property
    
    <[Property]("ContactName", ColumnType:="String")>  _
    Public Overridable Property ContactName() As String
        Get
            Return Me._contactName
        End Get
        Set
            If (_contactName <> value) Then
                Me._contactName = value
                Me.NotifyPropertyChanged("ContactName")
            End If
        End Set
    End Property
    
    <[Property]("Telephone", ColumnType:="String")>  _
    Public Overridable Property Telephone() As String
        Get
            Return Me._telephone
        End Get
        Set
            If (_telephone <> value) Then
                Me._telephone = value
                Me.NotifyPropertyChanged("Telephone")
            End If
        End Set
    End Property
    
    <[Property]("Email", ColumnType:="String")>  _
    Public Overridable Property Email() As String
        Get
            Return Me._email
        End Get
        Set
            If (_email <> value) Then
                Me._email = value
                Me.NotifyPropertyChanged("Email")
            End If
        End Set
    End Property
    
    <[Property]("Fax", ColumnType:="String")>  _
    Public Overridable Property Fax() As String
        Get
            Return Me._fax
        End Get
        Set
            If (_fax <> value) Then
                Me._fax = value
                Me.NotifyPropertyChanged("Fax")
            End If
        End Set
    End Property
    
    <[Property]("Description1", ColumnType:="String")>  _
    Public Overridable Property Description1() As String
        Get
            Return Me._description1
        End Get
        Set
            If (_description1 <> value) Then
                Me._description1 = value
                Me.NotifyPropertyChanged("Description1")
            End If
        End Set
    End Property
    
    <[Property]("Description2", ColumnType:="String")>  _
    Public Overridable Property Description2() As String
        Get
            Return Me._description2
        End Get
        Set
            If (_description2 <> value) Then
                Me._description2 = value
                Me.NotifyPropertyChanged("Description2")
            End If
        End Set
    End Property
    
    <[Property]("Quantity", ColumnType:="Double", [Default]:="1")>  _
    Public Overridable Property Quantity() As System.Nullable(Of Double)
        Get
            Return Me._quantity
        End Get
        Set
            If ((_quantity <> value)  _
                        Or (_quantity Is Nothing)) Then
                Me._quantity = value
                Me.NotifyPropertyChanged("Quantity")
            End If
        End Set
    End Property
    
    <[Property]("UnitPrice", ColumnType:="Double")>  _
    Public Overridable Property UnitPrice() As System.Nullable(Of Double)
        Get
            Return Me._unitPrice
        End Get
        Set
            If ((_unitPrice <> value)  _
                        Or (_unitPrice Is Nothing)) Then
                Me._unitPrice = value
                Me.NotifyPropertyChanged("UnitPrice")
            End If
        End Set
    End Property
    
    <[Property]("TotalPrice", ColumnType:="Double")>  _
    Public Overridable Property TotalPrice() As System.Nullable(Of Double)
        Get
            Return Me._totalPrice
        End Get
        Set
            If ((_totalPrice <> value)  _
                        Or (_totalPrice Is Nothing)) Then
                Me._totalPrice = value
                Me.NotifyPropertyChanged("TotalPrice")
            End If
        End Set
    End Property
    
    <[Property]("UnitCost", ColumnType:="Double")>  _
    Public Overridable Property UnitCost() As System.Nullable(Of Double)
        Get
            Return Me._unitCost
        End Get
        Set
            If ((_unitCost <> value)  _
                        Or (_unitCost Is Nothing)) Then
                Me._unitCost = value
                Me.NotifyPropertyChanged("UnitCost")
            End If
        End Set
    End Property
    
    <[Property]("TotalCost", ColumnType:="Double")>  _
    Public Overridable Property TotalCost() As System.Nullable(Of Double)
        Get
            Return Me._totalCost
        End Get
        Set
            If ((_totalCost <> value)  _
                        Or (_totalCost Is Nothing)) Then
                Me._totalCost = value
                Me.NotifyPropertyChanged("TotalCost")
            End If
        End Set
    End Property
    
    <[Property]("OrderTotal", ColumnType:="Double")>  _
    Public Overridable Property OrderTotal() As System.Nullable(Of Double)
        Get
            Return Me._orderTotal
        End Get
        Set
            If ((_orderTotal <> value)  _
                        Or (_orderTotal Is Nothing)) Then
                Me._orderTotal = value
                Me.NotifyPropertyChanged("OrderTotal")
            End If
        End Set
    End Property
    
    <[Property]("DiscountPercent", ColumnType:="Double")>  _
    Public Overridable Property DiscountPercent() As System.Nullable(Of Double)
        Get
            Return Me._discountPercent
        End Get
        Set
            If ((_discountPercent <> value)  _
                        Or (_discountPercent Is Nothing)) Then
                Me._discountPercent = value
                Me.NotifyPropertyChanged("DiscountPercent")
            End If
        End Set
    End Property
    
    <[Property]("DiscountAmount", ColumnType:="Double")>  _
    Public Overridable Property DiscountAmount() As System.Nullable(Of Double)
        Get
            Return Me._discountAmount
        End Get
        Set
            If ((_discountAmount <> value)  _
                        Or (_discountAmount Is Nothing)) Then
                Me._discountAmount = value
                Me.NotifyPropertyChanged("DiscountAmount")
            End If
        End Set
    End Property
    
    <[Property]("NewPrice", ColumnType:="Double")>  _
    Public Overridable Property NewPrice() As System.Nullable(Of Double)
        Get
            Return Me._newPrice
        End Get
        Set
            If ((_newPrice <> value)  _
                        Or (_newPrice Is Nothing)) Then
                Me._newPrice = value
                Me.NotifyPropertyChanged("NewPrice")
            End If
        End Set
    End Property
    
    <[Property]("Warranty", ColumnType:="String")>  _
    Public Overridable Property Warranty() As String
        Get
            Return Me._warranty
        End Get
        Set
            If (_warranty <> value) Then
                Me._warranty = value
                Me.NotifyPropertyChanged("Warranty")
            End If
        End Set
    End Property
    
    <[Property]("CancelReason", ColumnType:="String")>  _
    Public Overridable Property CancelReason() As String
        Get
            Return Me._cancelReason
        End Get
        Set
            If (_cancelReason <> value) Then
                Me._cancelReason = value
                Me.NotifyPropertyChanged("CancelReason")
            End If
        End Set
    End Property
    
    <[Property]("QuoteComments", ColumnType:="String")>  _
    Public Overridable Property QuoteComments() As String
        Get
            Return Me._quoteComments
        End Get
        Set
            If (_quoteComments <> value) Then
                Me._quoteComments = value
                Me.NotifyPropertyChanged("QuoteComments")
            End If
        End Set
    End Property
    
    <[Property]("PricelistID", ColumnType:="Int32")>  _
    Public Overridable Property PricelistID() As System.Nullable(Of Integer)
        Get
            Return Me._pricelistID
        End Get
        Set
            If ((_pricelistID <> value)  _
                        Or (_pricelistID Is Nothing)) Then
                Me._pricelistID = value
                Me.NotifyPropertyChanged("PricelistID")
            End If
        End Set
    End Property
    
    <[Property]("QuantityDelivered", ColumnType:="Double")>  _
    Public Overridable Property QuantityDelivered() As System.Nullable(Of Double)
        Get
            Return Me._quantityDelivered
        End Get
        Set
            If ((_quantityDelivered <> value)  _
                        Or (_quantityDelivered Is Nothing)) Then
                Me._quantityDelivered = value
                Me.NotifyPropertyChanged("QuantityDelivered")
            End If
        End Set
    End Property
    
    <[Property]("StateID", ColumnType:="Int32")>  _
    Public Overridable Property StateID() As System.Nullable(Of Integer)
        Get
            Return Me._stateID
        End Get
        Set
            If ((_stateID <> value)  _
                        Or (_stateID Is Nothing)) Then
                Me._stateID = value
                Me.NotifyPropertyChanged("StateID")
            End If
        End Set
    End Property
    
    <[Property]("RequisitionNumber", ColumnType:="String")>  _
    Public Overridable Property RequisitionNumber() As String
        Get
            Return Me._requisitionNumber
        End Get
        Set
            If (_requisitionNumber <> value) Then
                Me._requisitionNumber = value
                Me.NotifyPropertyChanged("RequisitionNumber")
            End If
        End Set
    End Property
    
    <[Property]("SubContractorReference", ColumnType:="String")>  _
    Public Overridable Property SubContractorReference() As String
        Get
            Return Me._subContractorReference
        End Get
        Set
            If (_subContractorReference <> value) Then
                Me._subContractorReference = value
                Me.NotifyPropertyChanged("SubContractorReference")
            End If
        End Set
    End Property
    
    <[Property]("SubContractorQuotedPrice", ColumnType:="Double")>  _
    Public Overridable Property SubContractorQuotedPrice() As System.Nullable(Of Double)
        Get
            Return Me._subContractorQuotedPrice
        End Get
        Set
            If ((_subContractorQuotedPrice <> value)  _
                        Or (_subContractorQuotedPrice Is Nothing)) Then
                Me._subContractorQuotedPrice = value
                Me.NotifyPropertyChanged("SubContractorQuotedPrice")
            End If
        End Set
    End Property
    
    <[Property]("SubContractor", ColumnType:="String")>  _
    Public Overridable Property SubContractor() As String
        Get
            Return Me._subContractor
        End Get
        Set
            If (_subContractor <> value) Then
                Me._subContractor = value
                Me.NotifyPropertyChanged("SubContractor")
            End If
        End Set
    End Property
    
    <[Property]("PreRequisitionPrintedAgentID", ColumnType:="Int32")>  _
    Public Overridable Property PreRequisitionPrintedAgentID() As System.Nullable(Of Integer)
        Get
            Return Me._preRequisitionPrintedAgentID
        End Get
        Set
            If ((_preRequisitionPrintedAgentID <> value)  _
                        Or (_preRequisitionPrintedAgentID Is Nothing)) Then
                Me._preRequisitionPrintedAgentID = value
                Me.NotifyPropertyChanged("PreRequisitionPrintedAgentID")
            End If
        End Set
    End Property
    
    <[Property]("RequisitionPrintedAgentID", ColumnType:="Int32")>  _
    Public Overridable Property RequisitionPrintedAgentID() As System.Nullable(Of Integer)
        Get
            Return Me._requisitionPrintedAgentID
        End Get
        Set
            If ((_requisitionPrintedAgentID <> value)  _
                        Or (_requisitionPrintedAgentID Is Nothing)) Then
                Me._requisitionPrintedAgentID = value
                Me.NotifyPropertyChanged("RequisitionPrintedAgentID")
            End If
        End Set
    End Property
    
    <[Property]("ImportReference", ColumnType:="String")>  _
    Public Overridable Property ImportReference() As String
        Get
            Return Me._importReference
        End Get
        Set
            If (_importReference <> value) Then
                Me._importReference = value
                Me.NotifyPropertyChanged("ImportReference")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Double")>  _
    Public Overridable Property ExpectedGP() As System.Nullable(Of Double)
        Get
            Return Me._expectedGP
        End Get
        Set
            If ((_expectedGP <> value)  _
                        Or (_expectedGP Is Nothing)) Then
                Me._expectedGP = value
                Me.NotifyPropertyChanged("ExpectedGP")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Double")>  _
    Public Overridable Property CurrentGP() As System.Nullable(Of Double)
        Get
            Return Me._currentGP
        End Get
        Set
            If ((_currentGP <> value)  _
                        Or (_currentGP Is Nothing)) Then
                Me._currentGP = value
                Me.NotifyPropertyChanged("CurrentGP")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Double")>  _
    Public Overridable Property ActualCost() As System.Nullable(Of Double)
        Get
            Return Me._actualCost
        End Get
        Set
            If ((_actualCost <> value)  _
                        Or (_actualCost Is Nothing)) Then
                Me._actualCost = value
                Me.NotifyPropertyChanged("ActualCost")
            End If
        End Set
    End Property
    
    <[Property]("SourceID", ColumnType:="Int32")>  _
    Public Overridable Property SourceID() As System.Nullable(Of Integer)
        Get
            Return Me._sourceID
        End Get
        Set
            If ((_sourceID <> value)  _
                        Or (_sourceID Is Nothing)) Then
                Me._sourceID = value
                Me.NotifyPropertyChanged("SourceID")
            End If
        End Set
    End Property
    
    <[Property]("ImportDate", ColumnType:="DateTime")>  _
    Public Overridable Property ImportDate() As System.Nullable(Of Date)
        Get
            Return Me._importDate
        End Get
        Set
            If ((_importDate <> value)  _
                        Or (_importDate Is Nothing)) Then
                Me._importDate = value
                Me.NotifyPropertyChanged("ImportDate")
            End If
        End Set
    End Property
    
    <[Property]("JobSourceID", ColumnType:="Int32")>  _
    Public Overridable Property JobSourceID() As System.Nullable(Of Integer)
        Get
            Return Me._jobSourceID
        End Get
        Set
            If ((_jobSourceID <> value)  _
                        Or (_jobSourceID Is Nothing)) Then
                Me._jobSourceID = value
                Me.NotifyPropertyChanged("JobSourceID")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Int32")>  _
    Public Overridable Property TemplateID() As System.Nullable(Of Integer)
        Get
            Return Me._templateID
        End Get
        Set
            If ((_templateID <> value)  _
                        Or (_templateID Is Nothing)) Then
                Me._templateID = value
                Me.NotifyPropertyChanged("TemplateID")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Boolean")>  _
    Public Overridable Property IsCancelled() As System.Nullable(Of Boolean)
        Get
            Return Me._isCancelled
        End Get
        Set
            If ((_isCancelled <> value)  _
                        Or (_isCancelled Is Nothing)) Then
                Me._isCancelled = value
                Me.NotifyPropertyChanged("IsCancelled")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Int32")>  _
    Public Overridable Property CancelAgentID() As System.Nullable(Of Integer)
        Get
            Return Me._cancelAgentID
        End Get
        Set
            If ((_cancelAgentID <> value)  _
                        Or (_cancelAgentID Is Nothing)) Then
                Me._cancelAgentID = value
                Me.NotifyPropertyChanged("CancelAgentID")
            End If
        End Set
    End Property
    
    <[Property]("SupplierQuantityDelivered", ColumnType:="Int32")>  _
    Public Overridable Property SupplierQuantityDelivered() As System.Nullable(Of Integer)
        Get
            Return Me._supplierQuantityDelivered
        End Get
        Set
            If ((_supplierQuantityDelivered <> value)  _
                        Or (_supplierQuantityDelivered Is Nothing)) Then
                Me._supplierQuantityDelivered = value
                Me.NotifyPropertyChanged("SupplierQuantityDelivered")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Double")>  _
    Public Overridable Property DefaultDiscountPercent() As System.Nullable(Of Double)
        Get
            Return Me._defaultDiscountPercent
        End Get
        Set
            If ((_defaultDiscountPercent <> value)  _
                        Or (_defaultDiscountPercent Is Nothing)) Then
                Me._defaultDiscountPercent = value
                Me.NotifyPropertyChanged("DefaultDiscountPercent")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Int32")>  _
    Public Overridable Property ServiceTemplate() As System.Nullable(Of Integer)
        Get
            Return Me._serviceTemplate
        End Get
        Set
            If ((_serviceTemplate <> value)  _
                        Or (_serviceTemplate Is Nothing)) Then
                Me._serviceTemplate = value
                Me.NotifyPropertyChanged("ServiceTemplate")
            End If
        End Set
    End Property
    
    <[Property]("EquipamentoNo1", ColumnType:="Int32")>  _
    Public Overridable Property EquipamentoNo1() As System.Nullable(Of Integer)
        Get
            Return Me._equipamentoNo1
        End Get
        Set
            If ((_equipamentoNo1 <> value)  _
                        Or (_equipamentoNo1 Is Nothing)) Then
                Me._equipamentoNo1 = value
                Me.NotifyPropertyChanged("EquipamentoNo1")
            End If
        End Set
    End Property
    
    <[Property]("EquipamentoNo2", ColumnType:="Int32")>  _
    Public Overridable Property EquipamentoNo2() As System.Nullable(Of Integer)
        Get
            Return Me._equipamentoNo2
        End Get
        Set
            If ((_equipamentoNo2 <> value)  _
                        Or (_equipamentoNo2 Is Nothing)) Then
                Me._equipamentoNo2 = value
                Me.NotifyPropertyChanged("EquipamentoNo2")
            End If
        End Set
    End Property
    
    <[Property]("EquipamentoNo3", ColumnType:="Int32")>  _
    Public Overridable Property EquipamentoNo3() As System.Nullable(Of Integer)
        Get
            Return Me._equipamentoNo3
        End Get
        Set
            If ((_equipamentoNo3 <> value)  _
                        Or (_equipamentoNo3 Is Nothing)) Then
                Me._equipamentoNo3 = value
                Me.NotifyPropertyChanged("EquipamentoNo3")
            End If
        End Set
    End Property
    
    <[Property]("EquipamentoNo4", ColumnType:="Int32")>  _
    Public Overridable Property EquipamentoNo4() As System.Nullable(Of Integer)
        Get
            Return Me._equipamentoNo4
        End Get
        Set
            If ((_equipamentoNo4 <> value)  _
                        Or (_equipamentoNo4 Is Nothing)) Then
                Me._equipamentoNo4 = value
                Me.NotifyPropertyChanged("EquipamentoNo4")
            End If
        End Set
    End Property
    
    <[Property]("EquipamentoNo5", ColumnType:="Int32")>  _
    Public Overridable Property EquipamentoNo5() As System.Nullable(Of Integer)
        Get
            Return Me._equipamentoNo5
        End Get
        Set
            If ((_equipamentoNo5 <> value)  _
                        Or (_equipamentoNo5 Is Nothing)) Then
                Me._equipamentoNo5 = value
                Me.NotifyPropertyChanged("EquipamentoNo5")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Int32")>  _
    Public Overridable Property ServiceType() As System.Nullable(Of Integer)
        Get
            Return Me._serviceType
        End Get
        Set
            If ((_serviceType <> value)  _
                        Or (_serviceType Is Nothing)) Then
                Me._serviceType = value
                Me.NotifyPropertyChanged("ServiceType")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Int32")>  _
    Public Overridable Property AssetOperator() As System.Nullable(Of Integer)
        Get
            Return Me._assetOperator
        End Get
        Set
            If ((_assetOperator <> value)  _
                        Or (_assetOperator Is Nothing)) Then
                Me._assetOperator = value
                Me.NotifyPropertyChanged("AssetOperator")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Int32")>  _
    Public Overridable Property Operator_A() As System.Nullable(Of Integer)
        Get
            Return Me._operator_A
        End Get
        Set
            If ((_operator_A <> value)  _
                        Or (_operator_A Is Nothing)) Then
                Me._operator_A = value
                Me.NotifyPropertyChanged("Operator_A")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Int32")>  _
    Public Overridable Property Technician() As System.Nullable(Of Integer)
        Get
            Return Me._technician
        End Get
        Set
            If ((_technician <> value)  _
                        Or (_technician Is Nothing)) Then
                Me._technician = value
                Me.NotifyPropertyChanged("Technician")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Int32")>  _
    Public Overridable Property WorkshopManager() As System.Nullable(Of Integer)
        Get
            Return Me._workshopManager
        End Get
        Set
            If ((_workshopManager <> value)  _
                        Or (_workshopManager Is Nothing)) Then
                Me._workshopManager = value
                Me.NotifyPropertyChanged("WorkshopManager")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property ResolutionCode() As String
        Get
            Return Me._resolutionCode
        End Get
        Set
            If (_resolutionCode <> value) Then
                Me._resolutionCode = value
                Me.NotifyPropertyChanged("ResolutionCode")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property ErrorCode() As String
        Get
            Return Me._errorCode
        End Get
        Set
            If (_errorCode <> value) Then
                Me._errorCode = value
                Me.NotifyPropertyChanged("ErrorCode")
            End If
        End Set
    End Property
    
    <[Property]("KMPercorridos", ColumnType:="Double")>  _
    Public Overridable Property KMPercorridos() As System.Nullable(Of Double)
        Get
            Return Me._kMPercorridos
        End Get
        Set
            If ((_kMPercorridos <> value)  _
                        Or (_kMPercorridos Is Nothing)) Then
                Me._kMPercorridos = value
                Me.NotifyPropertyChanged("KMPercorridos")
            End If
        End Set
    End Property
    
    <[Property]("KMAutorizado", ColumnType:="Double")>  _
    Public Overridable Property KMAutorizado() As System.Nullable(Of Double)
        Get
            Return Me._kMAutorizado
        End Get
        Set
            If ((_kMAutorizado <> value)  _
                        Or (_kMAutorizado Is Nothing)) Then
                Me._kMAutorizado = value
                Me.NotifyPropertyChanged("KMAutorizado")
            End If
        End Set
    End Property
    
    <[Property]("DistanciaSTD", ColumnType:="Double")>  _
    Public Overridable Property DistanciaSTD() As System.Nullable(Of Double)
        Get
            Return Me._distanciaSTD
        End Get
        Set
            If ((_distanciaSTD <> value)  _
                        Or (_distanciaSTD Is Nothing)) Then
                Me._distanciaSTD = value
                Me.NotifyPropertyChanged("DistanciaSTD")
            End If
        End Set
    End Property
    
    <[Property]("InicioViagem", ColumnType:="DateTime")>  _
    Public Overridable Property InicioViagem() As System.Nullable(Of Date)
        Get
            Return Me._inicioViagem
        End Get
        Set
            If ((_inicioViagem <> value)  _
                        Or (_inicioViagem Is Nothing)) Then
                Me._inicioViagem = value
                Me.NotifyPropertyChanged("InicioViagem")
            End If
        End Set
    End Property
    
    <[Property]("StartDate", ColumnType:="DateTime")>  _
    Public Overridable Property StartDate() As System.Nullable(Of Date)
        Get
            Return Me._startDate
        End Get
        Set
            If ((_startDate <> value)  _
                        Or (_startDate Is Nothing)) Then
                Me._startDate = value
                Me.NotifyPropertyChanged("StartDate")
            End If
        End Set
    End Property
    
    <[Property]("EndDate", ColumnType:="DateTime")>  _
    Public Overridable Property EndDate() As System.Nullable(Of Date)
        Get
            Return Me._endDate
        End Get
        Set
            If ((_endDate <> value)  _
                        Or (_endDate Is Nothing)) Then
                Me._endDate = value
                Me.NotifyPropertyChanged("EndDate")
            End If
        End Set
    End Property
    
    <[Property]("FimViagem", ColumnType:="DateTime")>  _
    Public Overridable Property FimViagem() As System.Nullable(Of Date)
        Get
            Return Me._fimViagem
        End Get
        Set
            If ((_fimViagem <> value)  _
                        Or (_fimViagem Is Nothing)) Then
                Me._fimViagem = value
                Me.NotifyPropertyChanged("FimViagem")
            End If
        End Set
    End Property
    
    <[Property]("MachineHoursToDate", ColumnType:="Double")>  _
    Public Overridable Property MachineHoursToDate() As System.Nullable(Of Double)
        Get
            Return Me._machineHoursToDate
        End Get
        Set
            If ((_machineHoursToDate <> value)  _
                        Or (_machineHoursToDate Is Nothing)) Then
                Me._machineHoursToDate = value
                Me.NotifyPropertyChanged("MachineHoursToDate")
            End If
        End Set
    End Property
    
    <[Property]("JAttachments", ColumnType:="String")>  _
    Public Overridable Property Attachments() As String
        Get
            Return Me._attachments
        End Get
        Set
            If (_attachments <> value) Then
                Me._attachments = value
                Me.NotifyPropertyChanged("Attachments")
            End If
        End Set
    End Property
    
    <[Property]("MastType", ColumnType:="String")>  _
    Public Overridable Property MastType() As String
        Get
            Return Me._mastType
        End Get
        Set
            If (_mastType <> value) Then
                Me._mastType = value
                Me.NotifyPropertyChanged("MastType")
            End If
        End Set
    End Property
    
    <[Property]("ClientAsset", ColumnType:="Boolean")>  _
    Public Overridable Property ClientAsset() As System.Nullable(Of Boolean)
        Get
            Return Me._clientAsset
        End Get
        Set
            If ((_clientAsset <> value)  _
                        Or (_clientAsset Is Nothing)) Then
                Me._clientAsset = value
                Me.NotifyPropertyChanged("ClientAsset")
            End If
        End Set
    End Property
    
    <[Property]("AssetClass", ColumnType:="Int32")>  _
    Public Overridable Property AssetClass() As System.Nullable(Of Integer)
        Get
            Return Me._assetClass
        End Get
        Set
            If ((_assetClass <> value)  _
                        Or (_assetClass Is Nothing)) Then
                Me._assetClass = value
                Me.NotifyPropertyChanged("AssetClass")
            End If
        End Set
    End Property
    
    <[Property]("UsageConfirmed", ColumnType:="Boolean")>  _
    Public Overridable Property UsageConfirmed() As System.Nullable(Of Boolean)
        Get
            Return Me._usageConfirmed
        End Get
        Set
            If ((_usageConfirmed <> value)  _
                        Or (_usageConfirmed Is Nothing)) Then
                Me._usageConfirmed = value
                Me.NotifyPropertyChanged("UsageConfirmed")
            End If
        End Set
    End Property
    
    <[Property]("TotalUsage", ColumnType:="Double")>  _
    Public Overridable Property TotalUsage() As System.Nullable(Of Double)
        Get
            Return Me._totalUsage
        End Get
        Set
            If ((_totalUsage <> value)  _
                        Or (_totalUsage Is Nothing)) Then
                Me._totalUsage = value
                Me.NotifyPropertyChanged("TotalUsage")
            End If
        End Set
    End Property
    
    <[Property]("Eq1UsageBefore", ColumnType:="Double", NotNull:=true)>  _
    Public Overridable Property Eq1UsageBefore() As Double
        Get
            Return Me._eq1UsageBefore
        End Get
        Set
            If (_eq1UsageBefore <> value) Then
                Me._eq1UsageBefore = value
                Me.NotifyPropertyChanged("Eq1UsageBefore")
            End If
        End Set
    End Property
    
    <[Property]("Eq2UsageBefore", ColumnType:="Double", NotNull:=true)>  _
    Public Overridable Property Eq2UsageBefore() As Double
        Get
            Return Me._eq2UsageBefore
        End Get
        Set
            If (_eq2UsageBefore <> value) Then
                Me._eq2UsageBefore = value
                Me.NotifyPropertyChanged("Eq2UsageBefore")
            End If
        End Set
    End Property
    
    <[Property]("Eq3UsageBefore", ColumnType:="Double", NotNull:=true)>  _
    Public Overridable Property Eq3UsageBefore() As Double
        Get
            Return Me._eq3UsageBefore
        End Get
        Set
            If (_eq3UsageBefore <> value) Then
                Me._eq3UsageBefore = value
                Me.NotifyPropertyChanged("Eq3UsageBefore")
            End If
        End Set
    End Property
    
    <[Property]("Eq4UsageBefore", ColumnType:="Double", NotNull:=true)>  _
    Public Overridable Property Eq4UsageBefore() As Double
        Get
            Return Me._eq4UsageBefore
        End Get
        Set
            If (_eq4UsageBefore <> value) Then
                Me._eq4UsageBefore = value
                Me.NotifyPropertyChanged("Eq4UsageBefore")
            End If
        End Set
    End Property
    
    <[Property]("Eq5UsageBefore", ColumnType:="Double", NotNull:=true)>  _
    Public Overridable Property Eq5UsageBefore() As Double
        Get
            Return Me._eq5UsageBefore
        End Get
        Set
            If (_eq5UsageBefore <> value) Then
                Me._eq5UsageBefore = value
                Me.NotifyPropertyChanged("Eq5UsageBefore")
            End If
        End Set
    End Property
    
    <[Property]("Eq1TotalUsage", ColumnType:="Double")>  _
    Public Overridable Property Eq1TotalUsage() As System.Nullable(Of Double)
        Get
            Return Me._eq1TotalUsage
        End Get
        Set
            If ((_eq1TotalUsage <> value)  _
                        Or (_eq1TotalUsage Is Nothing)) Then
                Me._eq1TotalUsage = value
                Me.NotifyPropertyChanged("Eq1TotalUsage")
            End If
        End Set
    End Property
    
    <[Property]("Eq2TotalUsage", ColumnType:="Double")>  _
    Public Overridable Property Eq2TotalUsage() As System.Nullable(Of Double)
        Get
            Return Me._eq2TotalUsage
        End Get
        Set
            If ((_eq2TotalUsage <> value)  _
                        Or (_eq2TotalUsage Is Nothing)) Then
                Me._eq2TotalUsage = value
                Me.NotifyPropertyChanged("Eq2TotalUsage")
            End If
        End Set
    End Property
    
    <[Property]("Eq3TotalUsage", ColumnType:="Double")>  _
    Public Overridable Property Eq3TotalUsage() As System.Nullable(Of Double)
        Get
            Return Me._eq3TotalUsage
        End Get
        Set
            If ((_eq3TotalUsage <> value)  _
                        Or (_eq3TotalUsage Is Nothing)) Then
                Me._eq3TotalUsage = value
                Me.NotifyPropertyChanged("Eq3TotalUsage")
            End If
        End Set
    End Property
    
    <[Property]("Eq4TotalUsage", ColumnType:="Double")>  _
    Public Overridable Property Eq4TotalUsage() As System.Nullable(Of Double)
        Get
            Return Me._eq4TotalUsage
        End Get
        Set
            If ((_eq4TotalUsage <> value)  _
                        Or (_eq4TotalUsage Is Nothing)) Then
                Me._eq4TotalUsage = value
                Me.NotifyPropertyChanged("Eq4TotalUsage")
            End If
        End Set
    End Property
    
    <[Property]("Eq5TotalUsage", ColumnType:="Double")>  _
    Public Overridable Property Eq5TotalUsage() As System.Nullable(Of Double)
        Get
            Return Me._eq5TotalUsage
        End Get
        Set
            If ((_eq5TotalUsage <> value)  _
                        Or (_eq5TotalUsage Is Nothing)) Then
                Me._eq5TotalUsage = value
                Me.NotifyPropertyChanged("Eq5TotalUsage")
            End If
        End Set
    End Property
    
    <[Property]("AssetTypeID", ColumnType:="Int32")>  _
    Public Overridable Property AssetTypeID() As System.Nullable(Of Integer)
        Get
            Return Me._assetTypeID
        End Get
        Set
            If ((_assetTypeID <> value)  _
                        Or (_assetTypeID Is Nothing)) Then
                Me._assetTypeID = value
                Me.NotifyPropertyChanged("AssetTypeID")
            End If
        End Set
    End Property
    
    <[Property]("AssetTypeID2", ColumnType:="Int32")>  _
    Public Overridable Property AssetTypeID2() As System.Nullable(Of Integer)
        Get
            Return Me._assetTypeID2
        End Get
        Set
            If ((_assetTypeID2 <> value)  _
                        Or (_assetTypeID2 Is Nothing)) Then
                Me._assetTypeID2 = value
                Me.NotifyPropertyChanged("AssetTypeID2")
            End If
        End Set
    End Property
    
    <[Property]("AssetTypeID3", ColumnType:="Int32")>  _
    Public Overridable Property AssetTypeID3() As System.Nullable(Of Integer)
        Get
            Return Me._assetTypeID3
        End Get
        Set
            If ((_assetTypeID3 <> value)  _
                        Or (_assetTypeID3 Is Nothing)) Then
                Me._assetTypeID3 = value
                Me.NotifyPropertyChanged("AssetTypeID3")
            End If
        End Set
    End Property
    
    <[Property]("AssetTypeID4", ColumnType:="Int32")>  _
    Public Overridable Property AssetTypeID4() As System.Nullable(Of Integer)
        Get
            Return Me._assetTypeID4
        End Get
        Set
            If ((_assetTypeID4 <> value)  _
                        Or (_assetTypeID4 Is Nothing)) Then
                Me._assetTypeID4 = value
                Me.NotifyPropertyChanged("AssetTypeID4")
            End If
        End Set
    End Property
    
    <[Property]("AssetTypeID5", ColumnType:="Int32")>  _
    Public Overridable Property AssetTypeID5() As System.Nullable(Of Integer)
        Get
            Return Me._assetTypeID5
        End Get
        Set
            If ((_assetTypeID5 <> value)  _
                        Or (_assetTypeID5 Is Nothing)) Then
                Me._assetTypeID5 = value
                Me.NotifyPropertyChanged("AssetTypeID5")
            End If
        End Set
    End Property
    
    <[Property]("Maintenance_Repair", ColumnType:="Boolean")>  _
    Public Overridable Property Maintenance_Repair() As System.Nullable(Of Boolean)
        Get
            Return Me._maintenance_Repair
        End Get
        Set
            If ((_maintenance_Repair <> value)  _
                        Or (_maintenance_Repair Is Nothing)) Then
                Me._maintenance_Repair = value
                Me.NotifyPropertyChanged("Maintenance_Repair")
            End If
        End Set
    End Property
    
    <[Property]("AssetOperator2", ColumnType:="Int32")>  _
    Public Overridable Property AssetOperator2() As System.Nullable(Of Integer)
        Get
            Return Me._assetOperator2
        End Get
        Set
            If ((_assetOperator2 <> value)  _
                        Or (_assetOperator2 Is Nothing)) Then
                Me._assetOperator2 = value
                Me.NotifyPropertyChanged("AssetOperator2")
            End If
        End Set
    End Property
    
    <[Property]("AssetOperator3", ColumnType:="Int32")>  _
    Public Overridable Property AssetOperator3() As System.Nullable(Of Integer)
        Get
            Return Me._assetOperator3
        End Get
        Set
            If ((_assetOperator3 <> value)  _
                        Or (_assetOperator3 Is Nothing)) Then
                Me._assetOperator3 = value
                Me.NotifyPropertyChanged("AssetOperator3")
            End If
        End Set
    End Property
    
    <[Property]("AssetOperator4", ColumnType:="Int32")>  _
    Public Overridable Property AssetOperator4() As System.Nullable(Of Integer)
        Get
            Return Me._assetOperator4
        End Get
        Set
            If ((_assetOperator4 <> value)  _
                        Or (_assetOperator4 Is Nothing)) Then
                Me._assetOperator4 = value
                Me.NotifyPropertyChanged("AssetOperator4")
            End If
        End Set
    End Property
    
    <[Property]("AssetOperator5", ColumnType:="Int32")>  _
    Public Overridable Property AssetOperator5() As System.Nullable(Of Integer)
        Get
            Return Me._assetOperator5
        End Get
        Set
            If ((_assetOperator5 <> value)  _
                        Or (_assetOperator5 Is Nothing)) Then
                Me._assetOperator5 = value
                Me.NotifyPropertyChanged("AssetOperator5")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(JobDelivery), ColumnKey:="JobID", Lazy:=true, Table:="ussSFJobDelivery", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobDeliveries() As IList(Of JobDelivery)
        Get
            Return Me._jobDeliveries
        End Get
        Set
            Me._jobDeliveries = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(JobLine), Cascade:=ManyRelationCascadeEnum.All, ColumnKey:="JobID", Lazy:=true, Table:="ussSFJobLine", Where:="IsCancelled Is Null Or IsCancelled = 0", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobLines() As IList(Of JobLine)
        Get
            Return Me._jobLines
        End Get
        Set
            Me._jobLines = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(JobTolerance), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="JobID", Lazy:=true, NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobTolerances() As IList(Of JobTolerance)
        Get
            Return Me._jobTolerances
        End Get
        Set
            Me._jobTolerances = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(Requisition), Cascade:=ManyRelationCascadeEnum.All, ColumnKey:="JobID", Lazy:=true, NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Requisitions() As IList(Of Requisition)
        Get
            Return Me._requisitions
        End Get
        Set
            Me._requisitions = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(PurchaseOrder), ColumnKey:="JobID", Lazy:=true)>  _
    Public Overridable Property PurchaseOrders() As IList(Of PurchaseOrder)
        Get
            Return Me._purchaseOrders
        End Get
        Set
            Me._purchaseOrders = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(Note), ColumnKey:="JobID", Lazy:=true, NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Notes() As IList(Of Note)
        Get
            Return Me._notes
        End Get
        Set
            Me._notes = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(JobMemo), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="JobID", Lazy:=true, Table:="ussSFJobMemo", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobMemoes() As IList(Of JobMemo)
        Get
            Return Me._jobMemoes
        End Get
        Set
            Me._jobMemoes = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(JobDrawingAnnotation), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="JobID", Lazy:=true, NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobDrawingAnnotations() As IList(Of JobDrawingAnnotation)
        Get
            Return Me._jobDrawingAnnotations
        End Get
        Set
            Me._jobDrawingAnnotations = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(JobLineTime), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="JobID", Lazy:=true, Table:="ussSFJoblineTime", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobLineTimes() As IList(Of JobLineTime)
        Get
            Return Me._jobLineTimes
        End Get
        Set
            Me._jobLineTimes = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(JobAttachment), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="JobID", Lazy:=true, Table:="ussSFJobAttachment", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobAttachments() As IList(Of JobAttachment)
        Get
            Return Me._jobAttachments
        End Get
        Set
            Me._jobAttachments = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(JobSupplierDeliveryNote), Cascade:=ManyRelationCascadeEnum.All, ColumnKey:="JobID", Lazy:=true, NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobSupplierDeliveryNotes() As IList(Of JobSupplierDeliveryNote)
        Get
            Return Me._jobSupplierDeliveryNotes
        End Get
        Set
            Me._jobSupplierDeliveryNotes = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(ProformaInvoice), Cascade:=ManyRelationCascadeEnum.All, ColumnKey:="JobID", Lazy:=true, NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property ProformaInvoices() As IList(Of ProformaInvoice)
        Get
            Return Me._proformaInvoices
        End Get
        Set
            Me._proformaInvoices = value
        End Set
    End Property
    
    <BelongsTo("StageID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobStage() As JobStage
        Get
            Return Me._jobStage
        End Get
        Set
            If (_jobStage <> value) Then
                Me._jobStage = value
                Me.NotifyPropertyChanged("JobStage")
            End If
        End Set
    End Property
    
    <BelongsTo("TypeID", NotFoundBehaviour:=NotFoundBehaviour.Ignore),  _
     ValidateNonEmpty("JobType is required.")>  _
    Public Overridable Property JobType() As JobType
        Get
            Return Me._jobType
        End Get
        Set
            If (_jobType <> value) Then
                Me._jobType = value
                Me.NotifyPropertyChanged("JobType")
            End If
        End Set
    End Property
    
    <BelongsTo("DrawingID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Drawing() As Drawing
        Get
            Return Me._drawing
        End Get
        Set
            If (_drawing <> value) Then
                Me._drawing = value
                Me.NotifyPropertyChanged("Drawing")
            End If
        End Set
    End Property
    
    <BelongsTo("GenerationID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Generation() As Generation
        Get
            Return Me._generation
        End Get
        Set
            If (_generation <> value) Then
                Me._generation = value
                Me.NotifyPropertyChanged("Generation")
            End If
        End Set
    End Property
    
    <BelongsTo("MakeID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Make() As Make
        Get
            Return Me._make
        End Get
        Set
            If (_make <> value) Then
                Me._make = value
                Me.NotifyPropertyChanged("Make")
            End If
        End Set
    End Property
    
    <BelongsTo("ModelID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Model() As Model
        Get
            Return Me._model
        End Get
        Set
            If (_model <> value) Then
                Me._model = value
                Me.NotifyPropertyChanged("Model")
            End If
        End Set
    End Property
    
    <BelongsTo("FunctionID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property [Function]() As [Function]
        Get
            Return Me._function
        End Get
        Set
            If (_function <> value) Then
                Me._function = value
                Me.NotifyPropertyChanged("Function")
            End If
        End Set
    End Property
    
    <BelongsTo("CategoryID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobCategory() As JobCategory
        Get
            Return Me._jobCategory
        End Get
        Set
            If (_jobCategory <> value) Then
                Me._jobCategory = value
                Me.NotifyPropertyChanged("JobCategory")
            End If
        End Set
    End Property
    
    <BelongsTo("WorkCentreCategoryID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property WorkCentreCategory() As WorkCentreCategory
        Get
            Return Me._workCentreCategory
        End Get
        Set
            If (_workCentreCategory <> value) Then
                Me._workCentreCategory = value
                Me.NotifyPropertyChanged("WorkCentreCategory")
            End If
        End Set
    End Property
    
    <BelongsTo("CostCentreID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property CostCentre() As CostCentre
        Get
            Return Me._costCentre
        End Get
        Set
            If (_costCentre <> value) Then
                Me._costCentre = value
                Me.NotifyPropertyChanged("CostCentre")
            End If
        End Set
    End Property
    
    <BelongsTo("CancelReasonID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property CancelReasonCode() As CancelReasonCode
        Get
            Return Me._cancelReasonCode
        End Get
        Set
            If (_cancelReasonCode <> value) Then
                Me._cancelReasonCode = value
                Me.NotifyPropertyChanged("CancelReasonCode")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFJob", Schema:="dbo", BatchSize:=100)>  _
Partial Public Class Job
    Inherits JobBase
End Class

<Serializable()>  _
Partial Public MustInherit Class JobDeliveryBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of JobDelivery)
    
    Private _deliveryDate As String
    
    Private _deliveryNumber As String
    
    Private _quantity As System.Nullable(Of Double)
    
    Private _agentID As System.Nullable(Of Integer)
    
    Private _responsibleAgentID As System.Nullable(Of Integer)
    
    Private _information1 As String
    
    Private _information2 As String
    
    Private _reason As String
    
    Private _job As Job
    
    <[Property]("DeliveryDate", ColumnType:="String"),  _
     ValidateDate("Delivery Date is required.")>  _
    Public Overridable Property DeliveryDate() As String
        Get
            Return Me._deliveryDate
        End Get
        Set
            If (_deliveryDate <> value) Then
                Me._deliveryDate = value
                Me.NotifyPropertyChanged("DeliveryDate")
            End If
        End Set
    End Property
    
    <[Property]("DeliveryNumber", ColumnType:="String"),  _
     ValidateIsUnique("Delivery Number already exists."),  _
     ValidateNonEmpty("Delivery Number is required.")>  _
    Public Overridable Property DeliveryNumber() As String
        Get
            Return Me._deliveryNumber
        End Get
        Set
            If (_deliveryNumber <> value) Then
                Me._deliveryNumber = value
                Me.NotifyPropertyChanged("DeliveryNumber")
            End If
        End Set
    End Property
    
    <[Property]("Quantity", ColumnType:="Double"),  _
     ValidateDouble("Delivery Quantity is required."),  _
     ValidateRange(1, Int32.MaxValue, "Cannot deliver zero quantity.")>  _
    Public Overridable Property Quantity() As System.Nullable(Of Double)
        Get
            Return Me._quantity
        End Get
        Set
            If ((_quantity <> value)  _
                        Or (_quantity Is Nothing)) Then
                Me._quantity = value
                Me.NotifyPropertyChanged("Quantity")
            End If
        End Set
    End Property
    
    <[Property]("AgentID", ColumnType:="Int32")>  _
    Public Overridable Property AgentID() As System.Nullable(Of Integer)
        Get
            Return Me._agentID
        End Get
        Set
            If ((_agentID <> value)  _
                        Or (_agentID Is Nothing)) Then
                Me._agentID = value
                Me.NotifyPropertyChanged("AgentID")
            End If
        End Set
    End Property
    
    <[Property]("ResponsibleAgentID", ColumnType:="Int32")>  _
    Public Overridable Property ResponsibleAgentID() As System.Nullable(Of Integer)
        Get
            Return Me._responsibleAgentID
        End Get
        Set
            If ((_responsibleAgentID <> value)  _
                        Or (_responsibleAgentID Is Nothing)) Then
                Me._responsibleAgentID = value
                Me.NotifyPropertyChanged("ResponsibleAgentID")
            End If
        End Set
    End Property
    
    <[Property]("Information1", ColumnType:="String")>  _
    Public Overridable Property Information1() As String
        Get
            Return Me._information1
        End Get
        Set
            If (_information1 <> value) Then
                Me._information1 = value
                Me.NotifyPropertyChanged("Information1")
            End If
        End Set
    End Property
    
    <[Property]("Information2", ColumnType:="String")>  _
    Public Overridable Property Information2() As String
        Get
            Return Me._information2
        End Get
        Set
            If (_information2 <> value) Then
                Me._information2 = value
                Me.NotifyPropertyChanged("Information2")
            End If
        End Set
    End Property
    
    <[Property]("Reason", ColumnType:="String")>  _
    Public Overridable Property Reason() As String
        Get
            Return Me._reason
        End Get
        Set
            If (_reason <> value) Then
                Me._reason = value
                Me.NotifyPropertyChanged("Reason")
            End If
        End Set
    End Property
    
    <BelongsTo("JobID", NotFoundBehaviour:=NotFoundBehaviour.Ignore),  _
     ValidateNonEmpty("Job is required.")>  _
    Public Overridable Property Job() As Job
        Get
            Return Me._job
        End Get
        Set
            If (_job <> value) Then
                Me._job = value
                Me.NotifyPropertyChanged("Job")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFJobDelivery", Lazy:=true, Schema:="dbo")>  _
Partial Public Class JobDelivery
    Inherits JobDeliveryBase
End Class

<Serializable()>  _
Partial Public MustInherit Class JobLineBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of JobLine)
    
    Private _jobLineDate As System.Nullable(Of Date)
    
    Private _orderDate As System.Nullable(Of Date)
    
    Private _requiredDate As System.Nullable(Of Date)
    
    Private _gRVDate As System.Nullable(Of Date)
    
    Private _orderNumber As String
    
    Private _gRVNumber As String
    
    Private _description1 As String
    
    Private _description2 As String
    
    Private _quoteDescription As String
    
    Private _criteria As String
    
    Private _normalWearAndTearReason As String
    
    Private _isNormalWearAndTear As System.Nullable(Of Boolean)
    
    Private _isProcured As System.Nullable(Of Boolean)
    
    Private _isStockDrawn As System.Nullable(Of Boolean)
    
    Private _purchaseOrder1ID As System.Nullable(Of Integer)
    
    Private _purchaseOrderLine1ID As System.Nullable(Of Integer)
    
    Private _purchaseOrder2ID As System.Nullable(Of Integer)
    
    Private _purchaseOrderLine2ID As System.Nullable(Of Integer)
    
    Private _quantity As System.Nullable(Of Double)
    
    Private _quantityStock As System.Nullable(Of Double)
    
    Private _quantitySupplier1 As System.Nullable(Of Double)
    
    Private _quantitySupplier2 As System.Nullable(Of Double)
    
    Private _estimatedDuration As System.Nullable(Of Double)
    
    Private _actualDuration As System.Nullable(Of Double)
    
    Private _unitPrice As System.Nullable(Of Double)
    
    Private _totalPrice As System.Nullable(Of Double)
    
    Private _measurement1 As System.Nullable(Of Double)
    
    Private _measurement2 As System.Nullable(Of Double)
    
    Private _measurement3 As System.Nullable(Of Double)
    
    Private _lineNumber As System.Nullable(Of Integer)
    
    Private _unitCost As System.Nullable(Of Double)
    
    Private _totalCost As System.Nullable(Of Double)
    
    Private _newPrice As System.Nullable(Of Double)
    
    Private _unitSize As System.Nullable(Of Double)
    
    Private _unitPriceBeforeMarkup As System.Nullable(Of Double)
    
    Private _lineDiscountPercent As System.Nullable(Of Double)
    
    Private _purchaseDiscountPercent As System.Nullable(Of Double)
    
    Private _unitPurchasePrice As System.Nullable(Of Double)
    
    Private _unitPriceBeforeDiscount As System.Nullable(Of Double)
    
    Private _quantityStockDrawn As System.Nullable(Of Double)
    
    Private _quantitySupplierOrdered As System.Nullable(Of Double)
    
    Private _eRPBudgetLineID As System.Nullable(Of Integer)
    
    Private _eRPRecoveryLineID As System.Nullable(Of Integer)
    
    Private _markupPercent As System.Nullable(Of Double)
    
    Private _inventoryItemID As System.Nullable(Of Integer)
    
    Private _supplierTypeID As System.Nullable(Of Integer)
    
    Private _supplier1ID As System.Nullable(Of Integer)
    
    Private _supplier2ID As System.Nullable(Of Integer)
    
    Private _gLAccount As String
    
    Private _primaryAssetUsage As System.Nullable(Of Double)
    
    Private _accountGroup As String
    
    Private _warehouseID As String
    
    Private _assetID As System.Nullable(Of Integer)
    
    Private _asset2ID As System.Nullable(Of Integer)
    
    Private _asset2Usage As System.Nullable(Of Double)
    
    Private _isRequisitionedGenerated As System.Nullable(Of Boolean)
    
    Private _isRequisitionReportSelected As System.Nullable(Of Boolean)
    
    Private _projectID As System.Nullable(Of Integer)
    
    Private _requisition_Number As String
    
    Private _isCancelled As System.Nullable(Of Boolean)
    
    Private _cancelledReason As String
    
    Private _cancelledUser As String
    
    Private _cancelledDateTime As System.Nullable(Of Date)
    
    Private _preRequisitionPrintedAgentID As System.Nullable(Of Integer)
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _requisitionLines As IList(Of RequisitionLine) = New List(Of RequisitionLine)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _purchaseOrderLines As IList(Of PurchaseOrderLine) = New List(Of PurchaseOrderLine)()
    
    Private _workCentre As WorkCentre
    
    Private _job As Job
    
    Private _part As Part
    
    Private _supplyScope As SupplyScope
    
    Private _workCentreCategory As WorkCentreCategory
    
    <[Property]("JobLineDate", ColumnType:="DateTime")>  _
    Public Overridable Property JobLineDate() As System.Nullable(Of Date)
        Get
            Return Me._jobLineDate
        End Get
        Set
            If ((_jobLineDate <> value)  _
                        Or (_jobLineDate Is Nothing)) Then
                Me._jobLineDate = value
                Me.NotifyPropertyChanged("JobLineDate")
            End If
        End Set
    End Property
    
    <[Property]("OrderDate", ColumnType:="DateTime")>  _
    Public Overridable Property OrderDate() As System.Nullable(Of Date)
        Get
            Return Me._orderDate
        End Get
        Set
            If ((_orderDate <> value)  _
                        Or (_orderDate Is Nothing)) Then
                Me._orderDate = value
                Me.NotifyPropertyChanged("OrderDate")
            End If
        End Set
    End Property
    
    <[Property]("RequiredDate", ColumnType:="DateTime")>  _
    Public Overridable Property RequiredDate() As System.Nullable(Of Date)
        Get
            Return Me._requiredDate
        End Get
        Set
            If ((_requiredDate <> value)  _
                        Or (_requiredDate Is Nothing)) Then
                Me._requiredDate = value
                Me.NotifyPropertyChanged("RequiredDate")
            End If
        End Set
    End Property
    
    <[Property]("GRVDate", ColumnType:="DateTime")>  _
    Public Overridable Property GRVDate() As System.Nullable(Of Date)
        Get
            Return Me._gRVDate
        End Get
        Set
            If ((_gRVDate <> value)  _
                        Or (_gRVDate Is Nothing)) Then
                Me._gRVDate = value
                Me.NotifyPropertyChanged("GRVDate")
            End If
        End Set
    End Property
    
    <[Property]("OrderNumber", ColumnType:="String")>  _
    Public Overridable Property OrderNumber() As String
        Get
            Return Me._orderNumber
        End Get
        Set
            If (_orderNumber <> value) Then
                Me._orderNumber = value
                Me.NotifyPropertyChanged("OrderNumber")
            End If
        End Set
    End Property
    
    <[Property]("GRVNumber", ColumnType:="String")>  _
    Public Overridable Property GRVNumber() As String
        Get
            Return Me._gRVNumber
        End Get
        Set
            If (_gRVNumber <> value) Then
                Me._gRVNumber = value
                Me.NotifyPropertyChanged("GRVNumber")
            End If
        End Set
    End Property
    
    <[Property]("Description1", ColumnType:="String")>  _
    Public Overridable Property Description1() As String
        Get
            Return Me._description1
        End Get
        Set
            If (_description1 <> value) Then
                Me._description1 = value
                Me.NotifyPropertyChanged("Description1")
            End If
        End Set
    End Property
    
    <[Property]("Description2", ColumnType:="String")>  _
    Public Overridable Property Description2() As String
        Get
            Return Me._description2
        End Get
        Set
            If (_description2 <> value) Then
                Me._description2 = value
                Me.NotifyPropertyChanged("Description2")
            End If
        End Set
    End Property
    
    <[Property]("QuoteDescription", ColumnType:="String")>  _
    Public Overridable Property QuoteDescription() As String
        Get
            Return Me._quoteDescription
        End Get
        Set
            If (_quoteDescription <> value) Then
                Me._quoteDescription = value
                Me.NotifyPropertyChanged("QuoteDescription")
            End If
        End Set
    End Property
    
    <[Property]("Criteria", ColumnType:="String")>  _
    Public Overridable Property Criteria() As String
        Get
            Return Me._criteria
        End Get
        Set
            If (_criteria <> value) Then
                Me._criteria = value
                Me.NotifyPropertyChanged("Criteria")
            End If
        End Set
    End Property
    
    <[Property]("NormalWearAndTearReason", ColumnType:="String")>  _
    Public Overridable Property NormalWearAndTearReason() As String
        Get
            Return Me._normalWearAndTearReason
        End Get
        Set
            If (_normalWearAndTearReason <> value) Then
                Me._normalWearAndTearReason = value
                Me.NotifyPropertyChanged("NormalWearAndTearReason")
            End If
        End Set
    End Property
    
    <[Property]("IsNormalWearAndTear", ColumnType:="Boolean")>  _
    Public Overridable Property IsNormalWearAndTear() As System.Nullable(Of Boolean)
        Get
            Return Me._isNormalWearAndTear
        End Get
        Set
            If ((_isNormalWearAndTear <> value)  _
                        Or (_isNormalWearAndTear Is Nothing)) Then
                Me._isNormalWearAndTear = value
                Me.NotifyPropertyChanged("IsNormalWearAndTear")
            End If
        End Set
    End Property
    
    <[Property]("IsProcured", ColumnType:="Boolean")>  _
    Public Overridable Property IsProcured() As System.Nullable(Of Boolean)
        Get
            Return Me._isProcured
        End Get
        Set
            If ((_isProcured <> value)  _
                        Or (_isProcured Is Nothing)) Then
                Me._isProcured = value
                Me.NotifyPropertyChanged("IsProcured")
            End If
        End Set
    End Property
    
    <[Property]("IsStockDrawn", ColumnType:="Boolean")>  _
    Public Overridable Property IsStockDrawn() As System.Nullable(Of Boolean)
        Get
            Return Me._isStockDrawn
        End Get
        Set
            If ((_isStockDrawn <> value)  _
                        Or (_isStockDrawn Is Nothing)) Then
                Me._isStockDrawn = value
                Me.NotifyPropertyChanged("IsStockDrawn")
            End If
        End Set
    End Property
    
    <[Property]("PurchaseOrder1ID", ColumnType:="Int32")>  _
    Public Overridable Property PurchaseOrder1ID() As System.Nullable(Of Integer)
        Get
            Return Me._purchaseOrder1ID
        End Get
        Set
            If ((_purchaseOrder1ID <> value)  _
                        Or (_purchaseOrder1ID Is Nothing)) Then
                Me._purchaseOrder1ID = value
                Me.NotifyPropertyChanged("PurchaseOrder1ID")
            End If
        End Set
    End Property
    
    <[Property]("PurchaseOrderLine1ID", ColumnType:="Int32")>  _
    Public Overridable Property PurchaseOrderLine1ID() As System.Nullable(Of Integer)
        Get
            Return Me._purchaseOrderLine1ID
        End Get
        Set
            If ((_purchaseOrderLine1ID <> value)  _
                        Or (_purchaseOrderLine1ID Is Nothing)) Then
                Me._purchaseOrderLine1ID = value
                Me.NotifyPropertyChanged("PurchaseOrderLine1ID")
            End If
        End Set
    End Property
    
    <[Property]("PurchaseOrder2ID", ColumnType:="Int32")>  _
    Public Overridable Property PurchaseOrder2ID() As System.Nullable(Of Integer)
        Get
            Return Me._purchaseOrder2ID
        End Get
        Set
            If ((_purchaseOrder2ID <> value)  _
                        Or (_purchaseOrder2ID Is Nothing)) Then
                Me._purchaseOrder2ID = value
                Me.NotifyPropertyChanged("PurchaseOrder2ID")
            End If
        End Set
    End Property
    
    <[Property]("PurchaseOrderLine2ID", ColumnType:="Int32")>  _
    Public Overridable Property PurchaseOrderLine2ID() As System.Nullable(Of Integer)
        Get
            Return Me._purchaseOrderLine2ID
        End Get
        Set
            If ((_purchaseOrderLine2ID <> value)  _
                        Or (_purchaseOrderLine2ID Is Nothing)) Then
                Me._purchaseOrderLine2ID = value
                Me.NotifyPropertyChanged("PurchaseOrderLine2ID")
            End If
        End Set
    End Property
    
    <[Property]("Quantity", ColumnType:="Double"),  _
     ValidateDouble("Quantity not valid")>  _
    Public Overridable Property Quantity() As System.Nullable(Of Double)
        Get
            Return Me._quantity
        End Get
        Set
            If ((_quantity <> value)  _
                        Or (_quantity Is Nothing)) Then
                Me._quantity = value
                Me.NotifyPropertyChanged("Quantity")
            End If
        End Set
    End Property
    
    <[Property]("QuantityStock", ColumnType:="Double")>  _
    Public Overridable Property QuantityStock() As System.Nullable(Of Double)
        Get
            Return Me._quantityStock
        End Get
        Set
            If ((_quantityStock <> value)  _
                        Or (_quantityStock Is Nothing)) Then
                Me._quantityStock = value
                Me.NotifyPropertyChanged("QuantityStock")
            End If
        End Set
    End Property
    
    <[Property]("QuantitySupplier1", ColumnType:="Double")>  _
    Public Overridable Property QuantitySupplier1() As System.Nullable(Of Double)
        Get
            Return Me._quantitySupplier1
        End Get
        Set
            If ((_quantitySupplier1 <> value)  _
                        Or (_quantitySupplier1 Is Nothing)) Then
                Me._quantitySupplier1 = value
                Me.NotifyPropertyChanged("QuantitySupplier1")
            End If
        End Set
    End Property
    
    <[Property]("QuantitySupplier2", ColumnType:="Double")>  _
    Public Overridable Property QuantitySupplier2() As System.Nullable(Of Double)
        Get
            Return Me._quantitySupplier2
        End Get
        Set
            If ((_quantitySupplier2 <> value)  _
                        Or (_quantitySupplier2 Is Nothing)) Then
                Me._quantitySupplier2 = value
                Me.NotifyPropertyChanged("QuantitySupplier2")
            End If
        End Set
    End Property
    
    <[Property]("EstimatedDuration", ColumnType:="Double")>  _
    Public Overridable Property EstimatedDuration() As System.Nullable(Of Double)
        Get
            Return Me._estimatedDuration
        End Get
        Set
            If ((_estimatedDuration <> value)  _
                        Or (_estimatedDuration Is Nothing)) Then
                Me._estimatedDuration = value
                Me.NotifyPropertyChanged("EstimatedDuration")
            End If
        End Set
    End Property
    
    <[Property]("ActualDuration", ColumnType:="Double")>  _
    Public Overridable Property ActualDuration() As System.Nullable(Of Double)
        Get
            Return Me._actualDuration
        End Get
        Set
            If ((_actualDuration <> value)  _
                        Or (_actualDuration Is Nothing)) Then
                Me._actualDuration = value
                Me.NotifyPropertyChanged("ActualDuration")
            End If
        End Set
    End Property
    
    <[Property]("UnitPrice", ColumnType:="Double")>  _
    Public Overridable Property UnitPrice() As System.Nullable(Of Double)
        Get
            Return Me._unitPrice
        End Get
        Set
            If ((_unitPrice <> value)  _
                        Or (_unitPrice Is Nothing)) Then
                Me._unitPrice = value
                Me.NotifyPropertyChanged("UnitPrice")
            End If
        End Set
    End Property
    
    <[Property]("TotalPrice", ColumnType:="Double")>  _
    Public Overridable Property TotalPrice() As System.Nullable(Of Double)
        Get
            Return Me._totalPrice
        End Get
        Set
            If ((_totalPrice <> value)  _
                        Or (_totalPrice Is Nothing)) Then
                Me._totalPrice = value
                Me.NotifyPropertyChanged("TotalPrice")
            End If
        End Set
    End Property
    
    <[Property]("Measurement1", ColumnType:="Double")>  _
    Public Overridable Property Measurement1() As System.Nullable(Of Double)
        Get
            Return Me._measurement1
        End Get
        Set
            If ((_measurement1 <> value)  _
                        Or (_measurement1 Is Nothing)) Then
                Me._measurement1 = value
                Me.NotifyPropertyChanged("Measurement1")
            End If
        End Set
    End Property
    
    <[Property]("Measurement2", ColumnType:="Double")>  _
    Public Overridable Property Measurement2() As System.Nullable(Of Double)
        Get
            Return Me._measurement2
        End Get
        Set
            If ((_measurement2 <> value)  _
                        Or (_measurement2 Is Nothing)) Then
                Me._measurement2 = value
                Me.NotifyPropertyChanged("Measurement2")
            End If
        End Set
    End Property
    
    <[Property]("Measurement3", ColumnType:="Double")>  _
    Public Overridable Property Measurement3() As System.Nullable(Of Double)
        Get
            Return Me._measurement3
        End Get
        Set
            If ((_measurement3 <> value)  _
                        Or (_measurement3 Is Nothing)) Then
                Me._measurement3 = value
                Me.NotifyPropertyChanged("Measurement3")
            End If
        End Set
    End Property
    
    <[Property]("LineNumber", ColumnType:="Int32")>  _
    Public Overridable Property LineNumber() As System.Nullable(Of Integer)
        Get
            Return Me._lineNumber
        End Get
        Set
            If ((_lineNumber <> value)  _
                        Or (_lineNumber Is Nothing)) Then
                Me._lineNumber = value
                Me.NotifyPropertyChanged("LineNumber")
            End If
        End Set
    End Property
    
    <[Property]("UnitCost", ColumnType:="Double")>  _
    Public Overridable Property UnitCost() As System.Nullable(Of Double)
        Get
            Return Me._unitCost
        End Get
        Set
            If ((_unitCost <> value)  _
                        Or (_unitCost Is Nothing)) Then
                Me._unitCost = value
                Me.NotifyPropertyChanged("UnitCost")
            End If
        End Set
    End Property
    
    <[Property]("TotalCost", ColumnType:="Double")>  _
    Public Overridable Property TotalCost() As System.Nullable(Of Double)
        Get
            Return Me._totalCost
        End Get
        Set
            If ((_totalCost <> value)  _
                        Or (_totalCost Is Nothing)) Then
                Me._totalCost = value
                Me.NotifyPropertyChanged("TotalCost")
            End If
        End Set
    End Property
    
    <[Property]("NewPrice", ColumnType:="Double")>  _
    Public Overridable Property NewPrice() As System.Nullable(Of Double)
        Get
            Return Me._newPrice
        End Get
        Set
            If ((_newPrice <> value)  _
                        Or (_newPrice Is Nothing)) Then
                Me._newPrice = value
                Me.NotifyPropertyChanged("NewPrice")
            End If
        End Set
    End Property
    
    <[Property]("UnitSize", ColumnType:="Double", [Default]:="1")>  _
    Public Overridable Property UnitSize() As System.Nullable(Of Double)
        Get
            Return Me._unitSize
        End Get
        Set
            If ((_unitSize <> value)  _
                        Or (_unitSize Is Nothing)) Then
                Me._unitSize = value
                Me.NotifyPropertyChanged("UnitSize")
            End If
        End Set
    End Property
    
    <[Property]("UnitPriceBeforeMarkup", ColumnType:="Double")>  _
    Public Overridable Property UnitPriceBeforeMarkup() As System.Nullable(Of Double)
        Get
            Return Me._unitPriceBeforeMarkup
        End Get
        Set
            If ((_unitPriceBeforeMarkup <> value)  _
                        Or (_unitPriceBeforeMarkup Is Nothing)) Then
                Me._unitPriceBeforeMarkup = value
                Me.NotifyPropertyChanged("UnitPriceBeforeMarkup")
            End If
        End Set
    End Property
    
    <[Property]("LineDiscountPercent", ColumnType:="Double")>  _
    Public Overridable Property LineDiscountPercent() As System.Nullable(Of Double)
        Get
            Return Me._lineDiscountPercent
        End Get
        Set
            If ((_lineDiscountPercent <> value)  _
                        Or (_lineDiscountPercent Is Nothing)) Then
                Me._lineDiscountPercent = value
                Me.NotifyPropertyChanged("LineDiscountPercent")
            End If
        End Set
    End Property
    
    <[Property]("PurchaseDiscountPercent", ColumnType:="Double")>  _
    Public Overridable Property PurchaseDiscountPercent() As System.Nullable(Of Double)
        Get
            Return Me._purchaseDiscountPercent
        End Get
        Set
            If ((_purchaseDiscountPercent <> value)  _
                        Or (_purchaseDiscountPercent Is Nothing)) Then
                Me._purchaseDiscountPercent = value
                Me.NotifyPropertyChanged("PurchaseDiscountPercent")
            End If
        End Set
    End Property
    
    <[Property]("UnitPurchasePrice", ColumnType:="Double")>  _
    Public Overridable Property UnitPurchasePrice() As System.Nullable(Of Double)
        Get
            Return Me._unitPurchasePrice
        End Get
        Set
            If ((_unitPurchasePrice <> value)  _
                        Or (_unitPurchasePrice Is Nothing)) Then
                Me._unitPurchasePrice = value
                Me.NotifyPropertyChanged("UnitPurchasePrice")
            End If
        End Set
    End Property
    
    <[Property]("UnitPriceBeforeDiscount", ColumnType:="Double")>  _
    Public Overridable Property UnitPriceBeforeDiscount() As System.Nullable(Of Double)
        Get
            Return Me._unitPriceBeforeDiscount
        End Get
        Set
            If ((_unitPriceBeforeDiscount <> value)  _
                        Or (_unitPriceBeforeDiscount Is Nothing)) Then
                Me._unitPriceBeforeDiscount = value
                Me.NotifyPropertyChanged("UnitPriceBeforeDiscount")
            End If
        End Set
    End Property
    
    <[Property]("QuantityStockDrawn", ColumnType:="Double")>  _
    Public Overridable Property QuantityStockDrawn() As System.Nullable(Of Double)
        Get
            Return Me._quantityStockDrawn
        End Get
        Set
            If ((_quantityStockDrawn <> value)  _
                        Or (_quantityStockDrawn Is Nothing)) Then
                Me._quantityStockDrawn = value
                Me.NotifyPropertyChanged("QuantityStockDrawn")
            End If
        End Set
    End Property
    
    <[Property]("QuantitySupplierOrdered", ColumnType:="Double")>  _
    Public Overridable Property QuantitySupplierOrdered() As System.Nullable(Of Double)
        Get
            Return Me._quantitySupplierOrdered
        End Get
        Set
            If ((_quantitySupplierOrdered <> value)  _
                        Or (_quantitySupplierOrdered Is Nothing)) Then
                Me._quantitySupplierOrdered = value
                Me.NotifyPropertyChanged("QuantitySupplierOrdered")
            End If
        End Set
    End Property
    
    <[Property]("ERPBudgetLineID", ColumnType:="Int32")>  _
    Public Overridable Property ERPBudgetLineID() As System.Nullable(Of Integer)
        Get
            Return Me._eRPBudgetLineID
        End Get
        Set
            If ((_eRPBudgetLineID <> value)  _
                        Or (_eRPBudgetLineID Is Nothing)) Then
                Me._eRPBudgetLineID = value
                Me.NotifyPropertyChanged("ERPBudgetLineID")
            End If
        End Set
    End Property
    
    <[Property]("ERPRecoveryLineID", ColumnType:="Int32")>  _
    Public Overridable Property ERPRecoveryLineID() As System.Nullable(Of Integer)
        Get
            Return Me._eRPRecoveryLineID
        End Get
        Set
            If ((_eRPRecoveryLineID <> value)  _
                        Or (_eRPRecoveryLineID Is Nothing)) Then
                Me._eRPRecoveryLineID = value
                Me.NotifyPropertyChanged("ERPRecoveryLineID")
            End If
        End Set
    End Property
    
    <[Property]("MarkupPercent", ColumnType:="Double", [Default]:="0")>  _
    Public Overridable Property MarkupPercent() As System.Nullable(Of Double)
        Get
            Return Me._markupPercent
        End Get
        Set
            If ((_markupPercent <> value)  _
                        Or (_markupPercent Is Nothing)) Then
                Me._markupPercent = value
                Me.NotifyPropertyChanged("MarkupPercent")
            End If
        End Set
    End Property
    
    <[Property]("InventoryItemID", ColumnType:="Int32"),  _
     ValidateNonEmpty("Inventory Item is required.")>  _
    Public Overridable Property InventoryItemID() As System.Nullable(Of Integer)
        Get
            Return Me._inventoryItemID
        End Get
        Set
            If ((_inventoryItemID <> value)  _
                        Or (_inventoryItemID Is Nothing)) Then
                Me._inventoryItemID = value
                Me.NotifyPropertyChanged("InventoryItemID")
            End If
        End Set
    End Property
    
    <[Property]("SupplierTypeID", ColumnType:="Int32")>  _
    Public Overridable Property SupplierTypeID() As System.Nullable(Of Integer)
        Get
            Return Me._supplierTypeID
        End Get
        Set
            If ((_supplierTypeID <> value)  _
                        Or (_supplierTypeID Is Nothing)) Then
                Me._supplierTypeID = value
                Me.NotifyPropertyChanged("SupplierTypeID")
            End If
        End Set
    End Property
    
    <[Property]("Supplier1ID", ColumnType:="Int32")>  _
    Public Overridable Property Supplier1ID() As System.Nullable(Of Integer)
        Get
            Return Me._supplier1ID
        End Get
        Set
            If ((_supplier1ID <> value)  _
                        Or (_supplier1ID Is Nothing)) Then
                Me._supplier1ID = value
                Me.NotifyPropertyChanged("Supplier1ID")
            End If
        End Set
    End Property
    
    <[Property]("Supplier2ID", ColumnType:="Int32")>  _
    Public Overridable Property Supplier2ID() As System.Nullable(Of Integer)
        Get
            Return Me._supplier2ID
        End Get
        Set
            If ((_supplier2ID <> value)  _
                        Or (_supplier2ID Is Nothing)) Then
                Me._supplier2ID = value
                Me.NotifyPropertyChanged("Supplier2ID")
            End If
        End Set
    End Property
    
    <[Property]("GLAccount", ColumnType:="String")>  _
    Public Overridable Property GLAccount() As String
        Get
            Return Me._gLAccount
        End Get
        Set
            If (_gLAccount <> value) Then
                Me._gLAccount = value
                Me.NotifyPropertyChanged("GLAccount")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Double")>  _
    Public Overridable Property PrimaryAssetUsage() As System.Nullable(Of Double)
        Get
            Return Me._primaryAssetUsage
        End Get
        Set
            If ((_primaryAssetUsage <> value)  _
                        Or (_primaryAssetUsage Is Nothing)) Then
                Me._primaryAssetUsage = value
                Me.NotifyPropertyChanged("PrimaryAssetUsage")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property AccountGroup() As String
        Get
            Return Me._accountGroup
        End Get
        Set
            If (_accountGroup <> value) Then
                Me._accountGroup = value
                Me.NotifyPropertyChanged("AccountGroup")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property WarehouseID() As String
        Get
            Return Me._warehouseID
        End Get
        Set
            If (_warehouseID <> value) Then
                Me._warehouseID = value
                Me.NotifyPropertyChanged("WarehouseID")
            End If
        End Set
    End Property
    
    <[Property]("AssetID", ColumnType:="Int32")>  _
    Public Overridable Property AssetID() As System.Nullable(Of Integer)
        Get
            Return Me._assetID
        End Get
        Set
            If ((_assetID <> value)  _
                        Or (_assetID Is Nothing)) Then
                Me._assetID = value
                Me.NotifyPropertyChanged("AssetID")
            End If
        End Set
    End Property
    
    <[Property]("Asset2ID", ColumnType:="Int32")>  _
    Public Overridable Property Asset2ID() As System.Nullable(Of Integer)
        Get
            Return Me._asset2ID
        End Get
        Set
            If ((_asset2ID <> value)  _
                        Or (_asset2ID Is Nothing)) Then
                Me._asset2ID = value
                Me.NotifyPropertyChanged("Asset2ID")
            End If
        End Set
    End Property
    
    <[Property]("Asset2Usage", ColumnType:="Double")>  _
    Public Overridable Property Asset2Usage() As System.Nullable(Of Double)
        Get
            Return Me._asset2Usage
        End Get
        Set
            If ((_asset2Usage <> value)  _
                        Or (_asset2Usage Is Nothing)) Then
                Me._asset2Usage = value
                Me.NotifyPropertyChanged("Asset2Usage")
            End If
        End Set
    End Property
    
    <[Property]("IsRequisitionedGenerated", ColumnType:="Boolean")>  _
    Public Overridable Property IsRequisitionedGenerated() As System.Nullable(Of Boolean)
        Get
            Return Me._isRequisitionedGenerated
        End Get
        Set
            If ((_isRequisitionedGenerated <> value)  _
                        Or (_isRequisitionedGenerated Is Nothing)) Then
                Me._isRequisitionedGenerated = value
                Me.NotifyPropertyChanged("IsRequisitionedGenerated")
            End If
        End Set
    End Property
    
    <[Property]("IsRequisitionReportSelected", ColumnType:="Boolean")>  _
    Public Overridable Property IsRequisitionReportSelected() As System.Nullable(Of Boolean)
        Get
            Return Me._isRequisitionReportSelected
        End Get
        Set
            If ((_isRequisitionReportSelected <> value)  _
                        Or (_isRequisitionReportSelected Is Nothing)) Then
                Me._isRequisitionReportSelected = value
                Me.NotifyPropertyChanged("IsRequisitionReportSelected")
            End If
        End Set
    End Property
    
    <[Property]("ProjectID", ColumnType:="Int32")>  _
    Public Overridable Property ProjectID() As System.Nullable(Of Integer)
        Get
            Return Me._projectID
        End Get
        Set
            If ((_projectID <> value)  _
                        Or (_projectID Is Nothing)) Then
                Me._projectID = value
                Me.NotifyPropertyChanged("ProjectID")
            End If
        End Set
    End Property
    
    <[Property]("Requisition_Number", ColumnType:="String")>  _
    Public Overridable Property Requisition_Number() As String
        Get
            Return Me._requisition_Number
        End Get
        Set
            If (_requisition_Number <> value) Then
                Me._requisition_Number = value
                Me.NotifyPropertyChanged("Requisition_Number")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Boolean")>  _
    Public Overridable Property IsCancelled() As System.Nullable(Of Boolean)
        Get
            Return Me._isCancelled
        End Get
        Set
            If ((_isCancelled <> value)  _
                        Or (_isCancelled Is Nothing)) Then
                Me._isCancelled = value
                Me.NotifyPropertyChanged("IsCancelled")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property CancelledReason() As String
        Get
            Return Me._cancelledReason
        End Get
        Set
            If (_cancelledReason <> value) Then
                Me._cancelledReason = value
                Me.NotifyPropertyChanged("CancelledReason")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property CancelledUser() As String
        Get
            Return Me._cancelledUser
        End Get
        Set
            If (_cancelledUser <> value) Then
                Me._cancelledUser = value
                Me.NotifyPropertyChanged("CancelledUser")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="DateTime")>  _
    Public Overridable Property CancelledDateTime() As System.Nullable(Of Date)
        Get
            Return Me._cancelledDateTime
        End Get
        Set
            If ((_cancelledDateTime <> value)  _
                        Or (_cancelledDateTime Is Nothing)) Then
                Me._cancelledDateTime = value
                Me.NotifyPropertyChanged("CancelledDateTime")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Int32")>  _
    Public Overridable Property PreRequisitionPrintedAgentID() As System.Nullable(Of Integer)
        Get
            Return Me._preRequisitionPrintedAgentID
        End Get
        Set
            If ((_preRequisitionPrintedAgentID <> value)  _
                        Or (_preRequisitionPrintedAgentID Is Nothing)) Then
                Me._preRequisitionPrintedAgentID = value
                Me.NotifyPropertyChanged("PreRequisitionPrintedAgentID")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(RequisitionLine), Cascade:=ManyRelationCascadeEnum.SaveUpdate, ColumnKey:="JobLineID", Lazy:=true, NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property RequisitionLines() As IList(Of RequisitionLine)
        Get
            Return Me._requisitionLines
        End Get
        Set
            Me._requisitionLines = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(PurchaseOrderLine), ColumnKey:="JobLineID", Lazy:=true)>  _
    Public Overridable Property PurchaseOrderLines() As IList(Of PurchaseOrderLine)
        Get
            Return Me._purchaseOrderLines
        End Get
        Set
            Me._purchaseOrderLines = value
        End Set
    End Property
    
    <BelongsTo("WorkCentreID", NotFoundBehaviour:=NotFoundBehaviour.Ignore),  _
     ValidateNonEmpty("Work Centre is required.")>  _
    Public Overridable Property WorkCentre() As WorkCentre
        Get
            Return Me._workCentre
        End Get
        Set
            If (_workCentre <> value) Then
                Me._workCentre = value
                Me.NotifyPropertyChanged("WorkCentre")
            End If
        End Set
    End Property
    
    <BelongsTo("JobID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Job() As Job
        Get
            Return Me._job
        End Get
        Set
            If (_job <> value) Then
                Me._job = value
                Me.NotifyPropertyChanged("Job")
            End If
        End Set
    End Property
    
    <BelongsTo("PartID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Part() As Part
        Get
            Return Me._part
        End Get
        Set
            If (_part <> value) Then
                Me._part = value
                Me.NotifyPropertyChanged("Part")
            End If
        End Set
    End Property
    
    <BelongsTo("SupplyScopeID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property SupplyScope() As SupplyScope
        Get
            Return Me._supplyScope
        End Get
        Set
            If (_supplyScope <> value) Then
                Me._supplyScope = value
                Me.NotifyPropertyChanged("SupplyScope")
            End If
        End Set
    End Property
    
    <BelongsTo("WorkCentreCategoryID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property WorkCentreCategory() As WorkCentreCategory
        Get
            Return Me._workCentreCategory
        End Get
        Set
            If (_workCentreCategory <> value) Then
                Me._workCentreCategory = value
                Me.NotifyPropertyChanged("WorkCentreCategory")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFJobLine", Schema:="dbo", Where:="IsCancelled Is Null Or IsCancelled = 0", BatchSize:=100)>  _
Partial Public Class JobLine
    Inherits JobLineBase
End Class

<Serializable()>  _
Partial Public MustInherit Class JobStageBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of JobStage)
    
    Private _code As String
    
    Private _description As String
    
    Private _isRequired As System.Nullable(Of Boolean)
    
    Private _isActive As System.Nullable(Of Boolean)
    
    Private _isProcurement As System.Nullable(Of Boolean)
    
    Private _sequence As System.Nullable(Of Integer)
    
    Private _isInvoicing As System.Nullable(Of Boolean)
    
    Private _isZeroDiscountChecked As System.Nullable(Of Boolean)
    
    Private _isCustomerOnHoldChecked As System.Nullable(Of Boolean)
    
    Private _updateAssetUsage As System.Nullable(Of Boolean)
    
    Private _validateActiveJobsAsset As System.Nullable(Of Boolean)
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _jobStageReports As IList(Of JobStageReport) = New List(Of JobStageReport)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _jobStageFunctions As IList(Of JobStageFunction) = New List(Of JobStageFunction)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _jobStageChecklists As IList(Of JobStageChecklist) = New List(Of JobStageChecklist)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _jobStageTriggers As IList(Of JobStageTrigger) = New List(Of JobStageTrigger)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _jobStageFieldPrompts As IList(Of JobStageFieldPrompt) = New List(Of JobStageFieldPrompt)()
    
    <[Property]("Code", ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("IsRequired", ColumnType:="Boolean")>  _
    Public Overridable Property IsRequired() As System.Nullable(Of Boolean)
        Get
            Return Me._isRequired
        End Get
        Set
            If ((_isRequired <> value)  _
                        Or (_isRequired Is Nothing)) Then
                Me._isRequired = value
                Me.NotifyPropertyChanged("IsRequired")
            End If
        End Set
    End Property
    
    <[Property]("IsActive", ColumnType:="Boolean")>  _
    Public Overridable Property IsActive() As System.Nullable(Of Boolean)
        Get
            Return Me._isActive
        End Get
        Set
            If ((_isActive <> value)  _
                        Or (_isActive Is Nothing)) Then
                Me._isActive = value
                Me.NotifyPropertyChanged("IsActive")
            End If
        End Set
    End Property
    
    <[Property]("IsProcurement", ColumnType:="Boolean")>  _
    Public Overridable Property IsProcurement() As System.Nullable(Of Boolean)
        Get
            Return Me._isProcurement
        End Get
        Set
            If ((_isProcurement <> value)  _
                        Or (_isProcurement Is Nothing)) Then
                Me._isProcurement = value
                Me.NotifyPropertyChanged("IsProcurement")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Int32")>  _
    Public Overridable Property Sequence() As System.Nullable(Of Integer)
        Get
            Return Me._sequence
        End Get
        Set
            If ((_sequence <> value)  _
                        Or (_sequence Is Nothing)) Then
                Me._sequence = value
                Me.NotifyPropertyChanged("Sequence")
            End If
        End Set
    End Property
    
    <[Property]("IsInvoicing", ColumnType:="Boolean")>  _
    Public Overridable Property IsInvoicing() As System.Nullable(Of Boolean)
        Get
            Return Me._isInvoicing
        End Get
        Set
            If ((_isInvoicing <> value)  _
                        Or (_isInvoicing Is Nothing)) Then
                Me._isInvoicing = value
                Me.NotifyPropertyChanged("IsInvoicing")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Boolean")>  _
    Public Overridable Property IsZeroDiscountChecked() As System.Nullable(Of Boolean)
        Get
            Return Me._isZeroDiscountChecked
        End Get
        Set
            If ((_isZeroDiscountChecked <> value)  _
                        Or (_isZeroDiscountChecked Is Nothing)) Then
                Me._isZeroDiscountChecked = value
                Me.NotifyPropertyChanged("IsZeroDiscountChecked")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Boolean")>  _
    Public Overridable Property IsCustomerOnHoldChecked() As System.Nullable(Of Boolean)
        Get
            Return Me._isCustomerOnHoldChecked
        End Get
        Set
            If ((_isCustomerOnHoldChecked <> value)  _
                        Or (_isCustomerOnHoldChecked Is Nothing)) Then
                Me._isCustomerOnHoldChecked = value
                Me.NotifyPropertyChanged("IsCustomerOnHoldChecked")
            End If
        End Set
    End Property
    
    <[Property]("UpdateAssetUsage", ColumnType:="Boolean")>  _
    Public Overridable Property UpdateAssetUsage() As System.Nullable(Of Boolean)
        Get
            Return Me._updateAssetUsage
        End Get
        Set
            If ((_updateAssetUsage <> value)  _
                        Or (_updateAssetUsage Is Nothing)) Then
                Me._updateAssetUsage = value
                Me.NotifyPropertyChanged("UpdateAssetUsage")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Boolean")>  _
    Public Overridable Property ValidateActiveJobsAsset() As System.Nullable(Of Boolean)
        Get
            Return Me._validateActiveJobsAsset
        End Get
        Set
            If ((_validateActiveJobsAsset <> value)  _
                        Or (_validateActiveJobsAsset Is Nothing)) Then
                Me._validateActiveJobsAsset = value
                Me.NotifyPropertyChanged("ValidateActiveJobsAsset")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(JobStageReport), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="JobStageID", Lazy:=true, NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobStageReports() As IList(Of JobStageReport)
        Get
            Return Me._jobStageReports
        End Get
        Set
            Me._jobStageReports = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(JobStageFunction), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="JobStageID", Lazy:=true, NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobStageFunctions() As IList(Of JobStageFunction)
        Get
            Return Me._jobStageFunctions
        End Get
        Set
            Me._jobStageFunctions = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(JobStageChecklist), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="JobStageID", Lazy:=true, NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobStageChecklists() As IList(Of JobStageChecklist)
        Get
            Return Me._jobStageChecklists
        End Get
        Set
            Me._jobStageChecklists = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(JobStageTrigger), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="JobStageID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobStageTriggers() As IList(Of JobStageTrigger)
        Get
            Return Me._jobStageTriggers
        End Get
        Set
            Me._jobStageTriggers = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(JobStageFieldPrompt), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="JobStageID", Lazy:=true, NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobStageFieldPrompts() As IList(Of JobStageFieldPrompt)
        Get
            Return Me._jobStageFieldPrompts
        End Get
        Set
            Me._jobStageFieldPrompts = value
        End Set
    End Property
End Class

<ActiveRecord("ussSFJobStage", Lazy:=true, Schema:="dbo")>  _
Partial Public Class JobStage
    Inherits JobStageBase
End Class

<Serializable()>  _
Partial Public MustInherit Class JobTypeBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of JobType)
    
    Private _description As String
    
    Private _code As String
    
    Private _isInspectionRequired As System.Nullable(Of Boolean)
    
    Private _revenueServiceCode As String
    
    Private _revenueMethodID As System.Nullable(Of Integer)
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _jobTypeStages As IList(Of JobTypeStage) = New List(Of JobTypeStage)()
    
    Private _costCentre As CostCentre
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("Code", ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("IsInspectionRequired", ColumnType:="Boolean")>  _
    Public Overridable Property IsInspectionRequired() As System.Nullable(Of Boolean)
        Get
            Return Me._isInspectionRequired
        End Get
        Set
            If ((_isInspectionRequired <> value)  _
                        Or (_isInspectionRequired Is Nothing)) Then
                Me._isInspectionRequired = value
                Me.NotifyPropertyChanged("IsInspectionRequired")
            End If
        End Set
    End Property
    
    <[Property]("RevenueServiceCode", ColumnType:="String")>  _
    Public Overridable Property RevenueServiceCode() As String
        Get
            Return Me._revenueServiceCode
        End Get
        Set
            If (_revenueServiceCode <> value) Then
                Me._revenueServiceCode = value
                Me.NotifyPropertyChanged("RevenueServiceCode")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Int32")>  _
    Public Overridable Property RevenueMethodID() As System.Nullable(Of Integer)
        Get
            Return Me._revenueMethodID
        End Get
        Set
            If ((_revenueMethodID <> value)  _
                        Or (_revenueMethodID Is Nothing)) Then
                Me._revenueMethodID = value
                Me.NotifyPropertyChanged("RevenueMethodID")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(JobTypeStage), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="JobTypeID", Lazy:=true, Table:="ussSFJobTypeStages", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobTypeStages() As IList(Of JobTypeStage)
        Get
            Return Me._jobTypeStages
        End Get
        Set
            Me._jobTypeStages = value
        End Set
    End Property
    
    <BelongsTo("CostCentreID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property CostCentre() As CostCentre
        Get
            Return Me._costCentre
        End Get
        Set
            If (_costCentre <> value) Then
                Me._costCentre = value
                Me.NotifyPropertyChanged("CostCentre")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFJobType", Lazy:=true, Schema:="dbo")>  _
Partial Public Class JobType
    Inherits JobTypeBase
End Class

<Serializable()>  _
Partial Public MustInherit Class JobTypeStageReportBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of JobTypeStageReport)
    
    Private _reportID As System.Nullable(Of Integer)
    
    Private _isAutomatic As System.Nullable(Of Boolean)
    
    Private _jobTypeStage As JobTypeStage
    
    <[Property]("ReportID", ColumnType:="Int32")>  _
    Public Overridable Property ReportID() As System.Nullable(Of Integer)
        Get
            Return Me._reportID
        End Get
        Set
            If ((_reportID <> value)  _
                        Or (_reportID Is Nothing)) Then
                Me._reportID = value
                Me.NotifyPropertyChanged("ReportID")
            End If
        End Set
    End Property
    
    <[Property]("IsAutomatic", ColumnType:="Boolean", [Default]:="0")>  _
    Public Overridable Property IsAutomatic() As System.Nullable(Of Boolean)
        Get
            Return Me._isAutomatic
        End Get
        Set
            If ((_isAutomatic <> value)  _
                        Or (_isAutomatic Is Nothing)) Then
                Me._isAutomatic = value
                Me.NotifyPropertyChanged("IsAutomatic")
            End If
        End Set
    End Property
    
    <BelongsTo("JobTypeStageID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobTypeStage() As JobTypeStage
        Get
            Return Me._jobTypeStage
        End Get
        Set
            If (_jobTypeStage <> value) Then
                Me._jobTypeStage = value
                Me.NotifyPropertyChanged("JobTypeStage")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFJobTypeStageReport", Lazy:=true, Schema:="dbo")>  _
Partial Public Class JobTypeStageReport
    Inherits JobTypeStageReportBase
End Class

<Serializable()>  _
Partial Public MustInherit Class JobTypeStageBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of JobTypeStage)
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _jobTypeStageReports As IList(Of JobTypeStageReport) = New List(Of JobTypeStageReport)()
    
    Private _jobStage As JobStage
    
    Private _jobType As JobType
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(JobTypeStageReport), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="JobTypeStageID", Lazy:=true, Table:="ussSFJobTypeStageReports", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobTypeStageReports() As IList(Of JobTypeStageReport)
        Get
            Return Me._jobTypeStageReports
        End Get
        Set
            Me._jobTypeStageReports = value
        End Set
    End Property
    
    <BelongsTo("JobStageID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobStage() As JobStage
        Get
            Return Me._jobStage
        End Get
        Set
            If (_jobStage <> value) Then
                Me._jobStage = value
                Me.NotifyPropertyChanged("JobStage")
            End If
        End Set
    End Property
    
    <BelongsTo("JobTypeID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobType() As JobType
        Get
            Return Me._jobType
        End Get
        Set
            If (_jobType <> value) Then
                Me._jobType = value
                Me.NotifyPropertyChanged("JobType")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFJobTypeStages", Lazy:=true, Schema:="dbo")>  _
Partial Public Class JobTypeStage
    Inherits JobTypeStageBase
End Class

<Serializable()>  _
Partial Public MustInherit Class PartBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Part)
    
    Private _code As String
    
    Private _description As String
    
    Private _transactionTypeID As System.Nullable(Of Integer)
    
    Private _criteria As String
    
    Private _dBColour As String
    
    Private _image() As Byte
    
    Private _supplyScope As SupplyScope
    
    Private _partGroup As PartGroup
    
    <[Property]("Code", ColumnType:="String"),  _
     ValidateNonEmpty("Required field"),  _
     ValidateIsUnique()>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String"),  _
     ValidateNonEmpty("Required field")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("TransactionTypeID", ColumnType:="Int32")>  _
    Public Overridable Property TransactionTypeID() As System.Nullable(Of Integer)
        Get
            Return Me._transactionTypeID
        End Get
        Set
            If ((_transactionTypeID <> value)  _
                        Or (_transactionTypeID Is Nothing)) Then
                Me._transactionTypeID = value
                Me.NotifyPropertyChanged("TransactionTypeID")
            End If
        End Set
    End Property
    
    <[Property]("Criteria", ColumnType:="String")>  _
    Public Overridable Property Criteria() As String
        Get
            Return Me._criteria
        End Get
        Set
            If (_criteria <> value) Then
                Me._criteria = value
                Me.NotifyPropertyChanged("Criteria")
            End If
        End Set
    End Property
    
    <[Property]("Colour", ColumnType:="String")>  _
    Protected Overridable Property DBColour() As String
        Get
            Return Me._dBColour
        End Get
        Set
            If (_dBColour <> value) Then
                Me._dBColour = value
                Me.NotifyPropertyChanged("DBColour")
            End If
        End Set
    End Property
    
    <[Property]("Image", ColumnType:="BinaryBlob")>  _
    Public Overridable Property Image() As Byte()
        Get
            Return Me._image
        End Get
        Set
            Me._image = value
            Me.NotifyPropertyChanged("Image")
        End Set
    End Property
    
    <BelongsTo("SupplyScopeID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property SupplyScope() As SupplyScope
        Get
            Return Me._supplyScope
        End Get
        Set
            If (_supplyScope <> value) Then
                Me._supplyScope = value
                Me.NotifyPropertyChanged("SupplyScope")
            End If
        End Set
    End Property
    
    <BelongsTo("PartGroupID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property PartGroup() As PartGroup
        Get
            Return Me._partGroup
        End Get
        Set
            If (_partGroup <> value) Then
                Me._partGroup = value
                Me.NotifyPropertyChanged("PartGroup")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFPart", Lazy:=true, Schema:="dbo")>  _
Partial Public Class Part
    Inherits PartBase
End Class

<Serializable()>  _
Partial Public MustInherit Class DrawingBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Drawing)
    
    Private _code As String
    
    Private _drawing() As Byte
    
    Private _drawingPath As String
    
    Private _description As String
    
    Private _numberOfAnnotations As System.Nullable(Of Integer)
    
    <[Property]("Code", ColumnType:="String"),  _
     ValidateNonEmpty("Required field"),  _
     ValidateIsUnique()>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Drawing", ColumnType:="BinaryBlob")>  _
    Public Overridable Property Drawing() As Byte()
        Get
            Return Me._drawing
        End Get
        Set
            Me._drawing = value
            Me.NotifyPropertyChanged("Drawing")
        End Set
    End Property
    
    <[Property]("DrawingPath", ColumnType:="String")>  _
    Public Overridable Property DrawingPath() As String
        Get
            Return Me._drawingPath
        End Get
        Set
            If (_drawingPath <> value) Then
                Me._drawingPath = value
                Me.NotifyPropertyChanged("DrawingPath")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String"),  _
     ValidateNonEmpty("Required field")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("NumberOfAnnotations", ColumnType:="Int32")>  _
    Public Overridable Property NumberOfAnnotations() As System.Nullable(Of Integer)
        Get
            Return Me._numberOfAnnotations
        End Get
        Set
            If ((_numberOfAnnotations <> value)  _
                        Or (_numberOfAnnotations Is Nothing)) Then
                Me._numberOfAnnotations = value
                Me.NotifyPropertyChanged("NumberOfAnnotations")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFDrawing", Lazy:=true, Schema:="dbo")>  _
Partial Public Class Drawing
    Inherits DrawingBase
End Class

<Serializable()>  _
Partial Public MustInherit Class MakeBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Make)
    
    Private _code As String
    
    Private _description As String
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _models As IList(Of Model) = New List(Of Model)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _functions As IList(Of [Function]) = New List(Of [Function])()
    
    <[Property]("Code", ColumnType:="String"),  _
     ValidateNonEmpty("Required field"),  _
     ValidateIsUnique()>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String"),  _
     ValidateNonEmpty("Required field")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(Model), ColumnKey:="MakeID", Lazy:=true, Table:="ussSFModel")>  _
    Public Overridable Property Models() As IList(Of Model)
        Get
            Return Me._models
        End Get
        Set
            Me._models = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType([Function]), ColumnKey:="MakeID", Lazy:=true, Table:="ussSFFunction")>  _
    Public Overridable Property Functions() As IList(Of [Function])
        Get
            Return Me._functions
        End Get
        Set
            Me._functions = value
        End Set
    End Property
End Class

<ActiveRecord("ussSFMake", Lazy:=true, Schema:="dbo")>  _
Partial Public Class Make
    Inherits MakeBase
End Class

<Serializable()>  _
Partial Public MustInherit Class ModelBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Model)
    
    Private _code As String
    
    Private _description As String
    
    Private _make As Make
    
    <[Property]("Code", ColumnType:="String"),  _
     ValidateNonEmpty("Required field"),  _
     ValidateIsUnique()>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String"),  _
     ValidateNonEmpty("Required field")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <BelongsTo("MakeID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Make() As Make
        Get
            Return Me._make
        End Get
        Set
            If (_make <> value) Then
                Me._make = value
                Me.NotifyPropertyChanged("Make")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFModel", Lazy:=true, Schema:="dbo")>  _
Partial Public Class Model
    Inherits ModelBase
End Class

<Serializable()>  _
Partial Public MustInherit Class PartGroupBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of PartGroup)
    
    Private _code As String
    
    Private _description As String
    
    <[Property]("Code", ColumnType:="String"),  _
     ValidateNonEmpty("Required field"),  _
     ValidateIsUnique()>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String"),  _
     ValidateNonEmpty("Required field")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFPartGroup", Lazy:=true, Schema:="dbo")>  _
Partial Public Class PartGroup
    Inherits PartGroupBase
End Class

<Serializable()>  _
Partial Public MustInherit Class SupplyScopeBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of SupplyScope)
    
    Private _code As String
    
    Private _description As String
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _jobTemplateLines As IList(Of JobTemplateLine) = New List(Of JobTemplateLine)()
    
    <[Property]("Code", ColumnType:="String"),  _
     ValidateNonEmpty("Required field"),  _
     ValidateIsUnique()>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String"),  _
     ValidateNonEmpty("Required field")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(JobTemplateLine), ColumnKey:="SupplyScopeID", Lazy:=true, NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobTemplateLines() As IList(Of JobTemplateLine)
        Get
            Return Me._jobTemplateLines
        End Get
        Set
            Me._jobTemplateLines = value
        End Set
    End Property
End Class

<ActiveRecord("ussSFSupplyScope", Lazy:=true, Schema:="dbo")>  _
Partial Public Class SupplyScope
    Inherits SupplyScopeBase
End Class

<Serializable()>  _
Partial Public MustInherit Class WorkCentreCategoryBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of WorkCentreCategory)
    
    Private _code As String
    
    Private _description As String
    
    Private _recoveryServiceCode As String
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _workCentres As IList(Of WorkCentre) = New List(Of WorkCentre)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _jobTemplateLines As IList(Of JobTemplateLine) = New List(Of JobTemplateLine)()
    
    <[Property]("Code", ColumnType:="String"),  _
     ValidateNonEmpty("Required field"),  _
     ValidateIsUnique()>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String"),  _
     ValidateNonEmpty("Required field")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("RecoveryServiceCode", ColumnType:="String")>  _
    Public Overridable Property RecoveryServiceCode() As String
        Get
            Return Me._recoveryServiceCode
        End Get
        Set
            If (_recoveryServiceCode <> value) Then
                Me._recoveryServiceCode = value
                Me.NotifyPropertyChanged("RecoveryServiceCode")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(WorkCentre), ColumnKey:="CategoryID", Lazy:=true)>  _
    Public Overridable Property WorkCentres() As IList(Of WorkCentre)
        Get
            Return Me._workCentres
        End Get
        Set
            Me._workCentres = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(JobTemplateLine), ColumnKey:="WorkCentreCategoryID", Lazy:=true, NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobTemplateLines() As IList(Of JobTemplateLine)
        Get
            Return Me._jobTemplateLines
        End Get
        Set
            Me._jobTemplateLines = value
        End Set
    End Property
End Class

<ActiveRecord("ussSFWorkCentreCategory", Lazy:=true, Schema:="dbo")>  _
Partial Public Class WorkCentreCategory
    Inherits WorkCentreCategoryBase
End Class

<Serializable()>  _
Partial Public MustInherit Class FunctionBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of [Function])
    
    Private _code As String
    
    Private _description As String
    
    Private _make As Make
    
    <[Property]("Code", ColumnType:="String"),  _
     ValidateNonEmpty("Required field"),  _
     ValidateIsUnique()>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String"),  _
     ValidateNonEmpty("Required field")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <BelongsTo("MakeID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Make() As Make
        Get
            Return Me._make
        End Get
        Set
            If (_make <> value) Then
                Me._make = value
                Me.NotifyPropertyChanged("Make")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFFunction", Lazy:=true, Schema:="dbo")>  _
Partial Public Class [Function]
    Inherits FunctionBase
End Class

<Serializable()>  _
Partial Public MustInherit Class GenerationBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Generation)
    
    Private _code As String
    
    Private _description As String
    
    <[Property]("Code", ColumnType:="String"),  _
     ValidateNonEmpty("Required field"),  _
     ValidateIsUnique()>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String"),  _
     ValidateNonEmpty("Required field")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFGeneration", Lazy:=true, Schema:="dbo")>  _
Partial Public Class Generation
    Inherits GenerationBase
End Class

<Serializable()>  _
Partial Public MustInherit Class JobStageReportBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of JobStageReport)
    
    Private _isAutomatic As System.Nullable(Of Boolean)
    
    Private _isReportOnEditScreen As System.Nullable(Of Boolean)
    
    Private _isReportOnListScreen As System.Nullable(Of Boolean)
    
    Private _jobStage As JobStage
    
    <[Property]("IsAutomatic", ColumnType:="Boolean")>  _
    Public Overridable Property IsAutomatic() As System.Nullable(Of Boolean)
        Get
            Return Me._isAutomatic
        End Get
        Set
            If ((_isAutomatic <> value)  _
                        Or (_isAutomatic Is Nothing)) Then
                Me._isAutomatic = value
                Me.NotifyPropertyChanged("IsAutomatic")
            End If
        End Set
    End Property
    
    <[Property]("IsReportOnEditScreen", ColumnType:="Boolean")>  _
    Public Overridable Property IsReportOnEditScreen() As System.Nullable(Of Boolean)
        Get
            Return Me._isReportOnEditScreen
        End Get
        Set
            If ((_isReportOnEditScreen <> value)  _
                        Or (_isReportOnEditScreen Is Nothing)) Then
                Me._isReportOnEditScreen = value
                Me.NotifyPropertyChanged("IsReportOnEditScreen")
            End If
        End Set
    End Property
    
    <[Property]("IsReportOnListScreen", ColumnType:="Boolean")>  _
    Public Overridable Property IsReportOnListScreen() As System.Nullable(Of Boolean)
        Get
            Return Me._isReportOnListScreen
        End Get
        Set
            If ((_isReportOnListScreen <> value)  _
                        Or (_isReportOnListScreen Is Nothing)) Then
                Me._isReportOnListScreen = value
                Me.NotifyPropertyChanged("IsReportOnListScreen")
            End If
        End Set
    End Property
    
    <BelongsTo("JobStageID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobStage() As JobStage
        Get
            Return Me._jobStage
        End Get
        Set
            If (_jobStage <> value) Then
                Me._jobStage = value
                Me.NotifyPropertyChanged("JobStage")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFJobStageReport", Lazy:=true, Schema:="dbo")>  _
Partial Public Class JobStageReport
    Inherits JobStageReportBase
End Class

<Serializable()>  _
Partial Public MustInherit Class JobStageFunctionBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of JobStageFunction)
    
    Private _jobFunctionID As System.Nullable(Of Integer)
    
    Private _jobStage As JobStage
    
    <[Property]("JobFunctionID", ColumnType:="Int32")>  _
    Public Overridable Property JobFunctionID() As System.Nullable(Of Integer)
        Get
            Return Me._jobFunctionID
        End Get
        Set
            If ((_jobFunctionID <> value)  _
                        Or (_jobFunctionID Is Nothing)) Then
                Me._jobFunctionID = value
                Me.NotifyPropertyChanged("JobFunctionID")
            End If
        End Set
    End Property
    
    <BelongsTo("JobStageID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobStage() As JobStage
        Get
            Return Me._jobStage
        End Get
        Set
            If (_jobStage <> value) Then
                Me._jobStage = value
                Me.NotifyPropertyChanged("JobStage")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFJobStageFunction", Lazy:=true, Schema:="dbo")>  _
Partial Public Class JobStageFunction
    Inherits JobStageFunctionBase
End Class

<Serializable()>  _
Partial Public MustInherit Class JobFunctionControlBase
    Inherits Castle.ActiveRecord.ActiveRecordValidationBase(Of JobFunctionControl)
    
    Private _jobFunctionID As System.Nullable(Of Integer)
    
    Private _password As String
    
    <PrimaryKey(PrimaryKeyType.Assigned, "JobFunctionID", ColumnType:="Int32"),  _
     ValidateNonEmpty("Required field")>  _
    Friend Property JobFunctionID() As System.Nullable(Of Integer)
        Get
            Return Me._jobFunctionID
        End Get
        Set
            Me._jobFunctionID = value
        End Set
    End Property
    
    <[Property]("Password", ColumnType:="String"),  _
     ValidateNonEmpty("Required field")>  _
    Public Overridable Property Password() As String
        Get
            Return Me._password
        End Get
        Set
            Me._password = value
        End Set
    End Property
End Class

<ActiveRecord("ussSFJobFunctionControl", Schema:="dbo")>  _
Partial Public Class JobFunctionControl
    Inherits JobFunctionControlBase
End Class

<Serializable()>  _
Partial Public MustInherit Class JobTemplateBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of JobTemplate)
    
    Private _templateNumber As String
    
    Private _validityDays As System.Nullable(Of Short)
    
    Private _deliveryDays As System.Nullable(Of Short)
    
    Private _description1 As String
    
    Private _description2 As String
    
    Private _unitPrice As System.Nullable(Of Double)
    
    Private _unitCost As System.Nullable(Of Double)
    
    Private _pricelistID As System.Nullable(Of Integer)
    
    Private _useTemplatePricing As System.Nullable(Of Boolean)
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _jobTemplateLines As IList(Of JobTemplateLine) = New List(Of JobTemplateLine)()
    
    Private _generation As Generation
    
    Private _make As Make
    
    Private _model As Model
    
    Private _function As [Function]
    
    Private _drawing As Drawing
    
    Private _jobType As JobType
    
    Private _jobCategory As JobCategory
    
    Private _workCentreCategory As WorkCentreCategory
    
    Private _costCentre As CostCentre
    
    <[Property]("TemplateNumber", ColumnType:="String"),  _
     ValidateNonEmpty(),  _
     ValidateIsUnique()>  _
    Public Overridable Property TemplateNumber() As String
        Get
            Return Me._templateNumber
        End Get
        Set
            If (_templateNumber <> value) Then
                Me._templateNumber = value
                Me.NotifyPropertyChanged("TemplateNumber")
            End If
        End Set
    End Property
    
    <[Property]("ValidityDays", ColumnType:="Int16")>  _
    Public Overridable Property ValidityDays() As System.Nullable(Of Short)
        Get
            Return Me._validityDays
        End Get
        Set
            If ((_validityDays <> value)  _
                        Or (_validityDays Is Nothing)) Then
                Me._validityDays = value
                Me.NotifyPropertyChanged("ValidityDays")
            End If
        End Set
    End Property
    
    <[Property]("DeliveryDays", ColumnType:="Int16")>  _
    Public Overridable Property DeliveryDays() As System.Nullable(Of Short)
        Get
            Return Me._deliveryDays
        End Get
        Set
            If ((_deliveryDays <> value)  _
                        Or (_deliveryDays Is Nothing)) Then
                Me._deliveryDays = value
                Me.NotifyPropertyChanged("DeliveryDays")
            End If
        End Set
    End Property
    
    <[Property]("Description1", ColumnType:="String")>  _
    Public Overridable Property Description1() As String
        Get
            Return Me._description1
        End Get
        Set
            If (_description1 <> value) Then
                Me._description1 = value
                Me.NotifyPropertyChanged("Description1")
            End If
        End Set
    End Property
    
    <[Property]("Description2", ColumnType:="String")>  _
    Public Overridable Property Description2() As String
        Get
            Return Me._description2
        End Get
        Set
            If (_description2 <> value) Then
                Me._description2 = value
                Me.NotifyPropertyChanged("Description2")
            End If
        End Set
    End Property
    
    <[Property]("UnitPrice", ColumnType:="Double")>  _
    Public Overridable Property UnitPrice() As System.Nullable(Of Double)
        Get
            Return Me._unitPrice
        End Get
        Set
            If ((_unitPrice <> value)  _
                        Or (_unitPrice Is Nothing)) Then
                Me._unitPrice = value
                Me.NotifyPropertyChanged("UnitPrice")
            End If
        End Set
    End Property
    
    <[Property]("UnitCost", ColumnType:="Double")>  _
    Public Overridable Property UnitCost() As System.Nullable(Of Double)
        Get
            Return Me._unitCost
        End Get
        Set
            If ((_unitCost <> value)  _
                        Or (_unitCost Is Nothing)) Then
                Me._unitCost = value
                Me.NotifyPropertyChanged("UnitCost")
            End If
        End Set
    End Property
    
    <[Property]("PricelistID", ColumnType:="Int32")>  _
    Public Overridable Property PricelistID() As System.Nullable(Of Integer)
        Get
            Return Me._pricelistID
        End Get
        Set
            If ((_pricelistID <> value)  _
                        Or (_pricelistID Is Nothing)) Then
                Me._pricelistID = value
                Me.NotifyPropertyChanged("PricelistID")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Boolean")>  _
    Public Overridable Property UseTemplatePricing() As System.Nullable(Of Boolean)
        Get
            Return Me._useTemplatePricing
        End Get
        Set
            If ((_useTemplatePricing <> value)  _
                        Or (_useTemplatePricing Is Nothing)) Then
                Me._useTemplatePricing = value
                Me.NotifyPropertyChanged("UseTemplatePricing")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(JobTemplateLine), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="JobTemplateID", Lazy:=true, NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobTemplateLines() As IList(Of JobTemplateLine)
        Get
            Return Me._jobTemplateLines
        End Get
        Set
            Me._jobTemplateLines = value
        End Set
    End Property
    
    <BelongsTo("GenerationID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Generation() As Generation
        Get
            Return Me._generation
        End Get
        Set
            If (_generation <> value) Then
                Me._generation = value
                Me.NotifyPropertyChanged("Generation")
            End If
        End Set
    End Property
    
    <BelongsTo("MakeID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Make() As Make
        Get
            Return Me._make
        End Get
        Set
            If (_make <> value) Then
                Me._make = value
                Me.NotifyPropertyChanged("Make")
            End If
        End Set
    End Property
    
    <BelongsTo("ModelID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Model() As Model
        Get
            Return Me._model
        End Get
        Set
            If (_model <> value) Then
                Me._model = value
                Me.NotifyPropertyChanged("Model")
            End If
        End Set
    End Property
    
    <BelongsTo("FunctionID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property [Function]() As [Function]
        Get
            Return Me._function
        End Get
        Set
            If (_function <> value) Then
                Me._function = value
                Me.NotifyPropertyChanged("Function")
            End If
        End Set
    End Property
    
    <BelongsTo("DrawingID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Drawing() As Drawing
        Get
            Return Me._drawing
        End Get
        Set
            If (_drawing <> value) Then
                Me._drawing = value
                Me.NotifyPropertyChanged("Drawing")
            End If
        End Set
    End Property
    
    <BelongsTo("TypeID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobType() As JobType
        Get
            Return Me._jobType
        End Get
        Set
            If (_jobType <> value) Then
                Me._jobType = value
                Me.NotifyPropertyChanged("JobType")
            End If
        End Set
    End Property
    
    <BelongsTo("CategoryID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobCategory() As JobCategory
        Get
            Return Me._jobCategory
        End Get
        Set
            If (_jobCategory <> value) Then
                Me._jobCategory = value
                Me.NotifyPropertyChanged("JobCategory")
            End If
        End Set
    End Property
    
    <BelongsTo("WorkCentreCategoryID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property WorkCentreCategory() As WorkCentreCategory
        Get
            Return Me._workCentreCategory
        End Get
        Set
            If (_workCentreCategory <> value) Then
                Me._workCentreCategory = value
                Me.NotifyPropertyChanged("WorkCentreCategory")
            End If
        End Set
    End Property
    
    <BelongsTo("CostCentreID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property CostCentre() As CostCentre
        Get
            Return Me._costCentre
        End Get
        Set
            If (_costCentre <> value) Then
                Me._costCentre = value
                Me.NotifyPropertyChanged("CostCentre")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFJobTemplate", Lazy:=true, Schema:="dbo", BatchSize:=100)>  _
Partial Public Class JobTemplate
    Inherits JobTemplateBase
End Class

<Serializable()>  _
Partial Public MustInherit Class JobTemplateLineBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of JobTemplateLine)
    
    Private _description1 As String
    
    Private _description2 As String
    
    Private _quoteDescription As String
    
    Private _criteria As String
    
    Private _quantity As System.Nullable(Of Double)
    
    Private _estimatedDuration As System.Nullable(Of Double)
    
    Private _unitPrice As System.Nullable(Of Double)
    
    Private _measurement1 As System.Nullable(Of Double)
    
    Private _measurement2 As System.Nullable(Of Double)
    
    Private _measurement3 As System.Nullable(Of Double)
    
    Private _lineNumber As System.Nullable(Of Integer)
    
    Private _totalPrice As System.Nullable(Of Double)
    
    Private _unitCost As System.Nullable(Of Double)
    
    Private _totalCost As System.Nullable(Of Double)
    
    Private _unitSize As System.Nullable(Of Double)
    
    Private _unitPriceBeforeMarkup As System.Nullable(Of Double)
    
    Private _markupPercent As System.Nullable(Of Double)
    
    Private _inventoryItemID As System.Nullable(Of Integer)
    
    Private _supplierTypeID As System.Nullable(Of Integer)
    
    Private _jobTemplate As JobTemplate
    
    Private _supplyScope As SupplyScope
    
    Private _part As Part
    
    Private _workCentre As WorkCentre
    
    Private _workCentreCategory As WorkCentreCategory
    
    <[Property]("Description1", ColumnType:="String")>  _
    Public Overridable Property Description1() As String
        Get
            Return Me._description1
        End Get
        Set
            If (_description1 <> value) Then
                Me._description1 = value
                Me.NotifyPropertyChanged("Description1")
            End If
        End Set
    End Property
    
    <[Property]("Description2", ColumnType:="String")>  _
    Public Overridable Property Description2() As String
        Get
            Return Me._description2
        End Get
        Set
            If (_description2 <> value) Then
                Me._description2 = value
                Me.NotifyPropertyChanged("Description2")
            End If
        End Set
    End Property
    
    <[Property]("QuoteDescription", ColumnType:="String")>  _
    Public Overridable Property QuoteDescription() As String
        Get
            Return Me._quoteDescription
        End Get
        Set
            If (_quoteDescription <> value) Then
                Me._quoteDescription = value
                Me.NotifyPropertyChanged("QuoteDescription")
            End If
        End Set
    End Property
    
    <[Property]("Criteria", ColumnType:="String")>  _
    Public Overridable Property Criteria() As String
        Get
            Return Me._criteria
        End Get
        Set
            If (_criteria <> value) Then
                Me._criteria = value
                Me.NotifyPropertyChanged("Criteria")
            End If
        End Set
    End Property
    
    <[Property]("Quantity", ColumnType:="Double")>  _
    Public Overridable Property Quantity() As System.Nullable(Of Double)
        Get
            Return Me._quantity
        End Get
        Set
            If ((_quantity <> value)  _
                        Or (_quantity Is Nothing)) Then
                Me._quantity = value
                Me.NotifyPropertyChanged("Quantity")
            End If
        End Set
    End Property
    
    <[Property]("EstimatedDuration", ColumnType:="Double")>  _
    Public Overridable Property EstimatedDuration() As System.Nullable(Of Double)
        Get
            Return Me._estimatedDuration
        End Get
        Set
            If ((_estimatedDuration <> value)  _
                        Or (_estimatedDuration Is Nothing)) Then
                Me._estimatedDuration = value
                Me.NotifyPropertyChanged("EstimatedDuration")
            End If
        End Set
    End Property
    
    <[Property]("UnitPrice", ColumnType:="Double")>  _
    Public Overridable Property UnitPrice() As System.Nullable(Of Double)
        Get
            Return Me._unitPrice
        End Get
        Set
            If ((_unitPrice <> value)  _
                        Or (_unitPrice Is Nothing)) Then
                Me._unitPrice = value
                Me.NotifyPropertyChanged("UnitPrice")
            End If
        End Set
    End Property
    
    <[Property]("Measurement1", ColumnType:="Double")>  _
    Public Overridable Property Measurement1() As System.Nullable(Of Double)
        Get
            Return Me._measurement1
        End Get
        Set
            If ((_measurement1 <> value)  _
                        Or (_measurement1 Is Nothing)) Then
                Me._measurement1 = value
                Me.NotifyPropertyChanged("Measurement1")
            End If
        End Set
    End Property
    
    <[Property]("Measurement2", ColumnType:="Double")>  _
    Public Overridable Property Measurement2() As System.Nullable(Of Double)
        Get
            Return Me._measurement2
        End Get
        Set
            If ((_measurement2 <> value)  _
                        Or (_measurement2 Is Nothing)) Then
                Me._measurement2 = value
                Me.NotifyPropertyChanged("Measurement2")
            End If
        End Set
    End Property
    
    <[Property]("Measurement3", ColumnType:="Double")>  _
    Public Overridable Property Measurement3() As System.Nullable(Of Double)
        Get
            Return Me._measurement3
        End Get
        Set
            If ((_measurement3 <> value)  _
                        Or (_measurement3 Is Nothing)) Then
                Me._measurement3 = value
                Me.NotifyPropertyChanged("Measurement3")
            End If
        End Set
    End Property
    
    <[Property]("LineNumber", ColumnType:="Int32")>  _
    Public Overridable Property LineNumber() As System.Nullable(Of Integer)
        Get
            Return Me._lineNumber
        End Get
        Set
            If ((_lineNumber <> value)  _
                        Or (_lineNumber Is Nothing)) Then
                Me._lineNumber = value
                Me.NotifyPropertyChanged("LineNumber")
            End If
        End Set
    End Property
    
    <[Property]("TotalPrice", ColumnType:="Double")>  _
    Public Overridable Property TotalPrice() As System.Nullable(Of Double)
        Get
            Return Me._totalPrice
        End Get
        Set
            If ((_totalPrice <> value)  _
                        Or (_totalPrice Is Nothing)) Then
                Me._totalPrice = value
                Me.NotifyPropertyChanged("TotalPrice")
            End If
        End Set
    End Property
    
    <[Property]("UnitCost", ColumnType:="Double")>  _
    Public Overridable Property UnitCost() As System.Nullable(Of Double)
        Get
            Return Me._unitCost
        End Get
        Set
            If ((_unitCost <> value)  _
                        Or (_unitCost Is Nothing)) Then
                Me._unitCost = value
                Me.NotifyPropertyChanged("UnitCost")
            End If
        End Set
    End Property
    
    <[Property]("TotalCost", ColumnType:="Double")>  _
    Public Overridable Property TotalCost() As System.Nullable(Of Double)
        Get
            Return Me._totalCost
        End Get
        Set
            If ((_totalCost <> value)  _
                        Or (_totalCost Is Nothing)) Then
                Me._totalCost = value
                Me.NotifyPropertyChanged("TotalCost")
            End If
        End Set
    End Property
    
    <[Property]("UnitSize", ColumnType:="Double", [Default]:="1")>  _
    Public Overridable Property UnitSize() As System.Nullable(Of Double)
        Get
            Return Me._unitSize
        End Get
        Set
            If ((_unitSize <> value)  _
                        Or (_unitSize Is Nothing)) Then
                Me._unitSize = value
                Me.NotifyPropertyChanged("UnitSize")
            End If
        End Set
    End Property
    
    <[Property]("UnitPriceBeforeMarkup", ColumnType:="Double")>  _
    Public Overridable Property UnitPriceBeforeMarkup() As System.Nullable(Of Double)
        Get
            Return Me._unitPriceBeforeMarkup
        End Get
        Set
            If ((_unitPriceBeforeMarkup <> value)  _
                        Or (_unitPriceBeforeMarkup Is Nothing)) Then
                Me._unitPriceBeforeMarkup = value
                Me.NotifyPropertyChanged("UnitPriceBeforeMarkup")
            End If
        End Set
    End Property
    
    <[Property]("MarkupPercent", ColumnType:="Double", [Default]:="0")>  _
    Public Overridable Property MarkupPercent() As System.Nullable(Of Double)
        Get
            Return Me._markupPercent
        End Get
        Set
            If ((_markupPercent <> value)  _
                        Or (_markupPercent Is Nothing)) Then
                Me._markupPercent = value
                Me.NotifyPropertyChanged("MarkupPercent")
            End If
        End Set
    End Property
    
    <[Property]("InventoryItemID", ColumnType:="Int32"),  _
     ValidateNonEmpty("Inventory Item is required.")>  _
    Public Overridable Property InventoryItemID() As System.Nullable(Of Integer)
        Get
            Return Me._inventoryItemID
        End Get
        Set
            If ((_inventoryItemID <> value)  _
                        Or (_inventoryItemID Is Nothing)) Then
                Me._inventoryItemID = value
                Me.NotifyPropertyChanged("InventoryItemID")
            End If
        End Set
    End Property
    
    <[Property]("SupplierTypeID", ColumnType:="Int32")>  _
    Public Overridable Property SupplierTypeID() As System.Nullable(Of Integer)
        Get
            Return Me._supplierTypeID
        End Get
        Set
            If ((_supplierTypeID <> value)  _
                        Or (_supplierTypeID Is Nothing)) Then
                Me._supplierTypeID = value
                Me.NotifyPropertyChanged("SupplierTypeID")
            End If
        End Set
    End Property
    
    <BelongsTo("JobTemplateID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobTemplate() As JobTemplate
        Get
            Return Me._jobTemplate
        End Get
        Set
            If (_jobTemplate <> value) Then
                Me._jobTemplate = value
                Me.NotifyPropertyChanged("JobTemplate")
            End If
        End Set
    End Property
    
    <BelongsTo("SupplyScopeID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property SupplyScope() As SupplyScope
        Get
            Return Me._supplyScope
        End Get
        Set
            If (_supplyScope <> value) Then
                Me._supplyScope = value
                Me.NotifyPropertyChanged("SupplyScope")
            End If
        End Set
    End Property
    
    <BelongsTo("PartID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Part() As Part
        Get
            Return Me._part
        End Get
        Set
            If (_part <> value) Then
                Me._part = value
                Me.NotifyPropertyChanged("Part")
            End If
        End Set
    End Property
    
    <BelongsTo("WorkCentreID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property WorkCentre() As WorkCentre
        Get
            Return Me._workCentre
        End Get
        Set
            If (_workCentre <> value) Then
                Me._workCentre = value
                Me.NotifyPropertyChanged("WorkCentre")
            End If
        End Set
    End Property
    
    <BelongsTo("WorkCentreCategoryID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property WorkCentreCategory() As WorkCentreCategory
        Get
            Return Me._workCentreCategory
        End Get
        Set
            If (_workCentreCategory <> value) Then
                Me._workCentreCategory = value
                Me.NotifyPropertyChanged("WorkCentreCategory")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFJobTemplateLine", Lazy:=true, Schema:="dbo", BatchSize:=100)>  _
Partial Public Class JobTemplateLine
    Inherits JobTemplateLineBase
End Class

<Serializable()>  _
Partial Public MustInherit Class JobCategoryBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of JobCategory)
    
    Private _code As String
    
    Private _description As String
    
    Private _revenueServiceCode As String
    
    <[Property]("Code", ColumnType:="String", Unique:=true),  _
     ValidateNonEmpty("Required field"),  _
     ValidateIsUnique("Field Must Be Unique")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String"),  _
     ValidateNonEmpty("Required field")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("RevenueServiceCode", ColumnType:="String")>  _
    Public Overridable Property RevenueServiceCode() As String
        Get
            Return Me._revenueServiceCode
        End Get
        Set
            If (_revenueServiceCode <> value) Then
                Me._revenueServiceCode = value
                Me.NotifyPropertyChanged("RevenueServiceCode")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFJobCategory", Lazy:=true, Schema:="dbo")>  _
Partial Public Class JobCategory
    Inherits JobCategoryBase
End Class

<Serializable()>  _
Partial Public MustInherit Class CommonLetterBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of CommonLetter)
    
    Private _code As String
    
    Private _description As String
    
    Private _contents As String
    
    <[Property]("Code", ColumnType:="String"),  _
     ValidateNonEmpty("Required field"),  _
     ValidateIsUnique()>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String"),  _
     ValidateNonEmpty("Required field")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("Contents", ColumnType:="StringClob")>  _
    Public Overridable Property Contents() As String
        Get
            Return Me._contents
        End Get
        Set
            If (_contents <> value) Then
                Me._contents = value
                Me.NotifyPropertyChanged("Contents")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFCommonLetter", Lazy:=true, Schema:="dbo")>  _
Partial Public Class CommonLetter
    Inherits CommonLetterBase
End Class

<Serializable()>  _
Partial Public MustInherit Class JobTolerancePhotographBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of JobTolerancePhotograph)
    
    Private _description As String
    
    Private _image() As Byte
    
    Private _jobTolerance As JobTolerance
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("Image", ColumnType:="BinaryBlob")>  _
    Public Overridable Property Image() As Byte()
        Get
            Return Me._image
        End Get
        Set
            Me._image = value
            Me.NotifyPropertyChanged("Image")
        End Set
    End Property
    
    <BelongsTo("JobToleranceID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobTolerance() As JobTolerance
        Get
            Return Me._jobTolerance
        End Get
        Set
            If (_jobTolerance <> value) Then
                Me._jobTolerance = value
                Me.NotifyPropertyChanged("JobTolerance")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFJobTolerancePhotograph", Lazy:=true, Schema:="dbo")>  _
Partial Public Class JobTolerancePhotograph
    Inherits JobTolerancePhotographBase
End Class

<Serializable()>  _
Partial Public MustInherit Class JobToleranceBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of JobTolerance)
    
    Private _code As String
    
    Private _description As String
    
    Private _band As System.Nullable(Of Integer)
    
    Private _sequence As System.Nullable(Of Integer)
    
    Private _new As System.Nullable(Of Double)
    
    Private _recon As System.Nullable(Of Double)
    
    Private _actual As System.Nullable(Of Double)
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _ussSFJobTolerancePhotographs As IList(Of JobTolerancePhotograph) = New List(Of JobTolerancePhotograph)()
    
    Private _job As Job
    
    <[Property]("Code", ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("Band", ColumnType:="Int32")>  _
    Public Overridable Property Band() As System.Nullable(Of Integer)
        Get
            Return Me._band
        End Get
        Set
            If ((_band <> value)  _
                        Or (_band Is Nothing)) Then
                Me._band = value
                Me.NotifyPropertyChanged("Band")
            End If
        End Set
    End Property
    
    <[Property]("Sequence", ColumnType:="Int32")>  _
    Public Overridable Property Sequence() As System.Nullable(Of Integer)
        Get
            Return Me._sequence
        End Get
        Set
            If ((_sequence <> value)  _
                        Or (_sequence Is Nothing)) Then
                Me._sequence = value
                Me.NotifyPropertyChanged("Sequence")
            End If
        End Set
    End Property
    
    <[Property]("New", ColumnType:="Double")>  _
    Public Overridable Property [New]() As System.Nullable(Of Double)
        Get
            Return Me._new
        End Get
        Set
            If ((_new <> value)  _
                        Or (_new Is Nothing)) Then
                Me._new = value
                Me.NotifyPropertyChanged("New")
            End If
        End Set
    End Property
    
    <[Property]("Recon", ColumnType:="Double")>  _
    Public Overridable Property Recon() As System.Nullable(Of Double)
        Get
            Return Me._recon
        End Get
        Set
            If ((_recon <> value)  _
                        Or (_recon Is Nothing)) Then
                Me._recon = value
                Me.NotifyPropertyChanged("Recon")
            End If
        End Set
    End Property
    
    <[Property]("Actual", ColumnType:="Double")>  _
    Public Overridable Property Actual() As System.Nullable(Of Double)
        Get
            Return Me._actual
        End Get
        Set
            If ((_actual <> value)  _
                        Or (_actual Is Nothing)) Then
                Me._actual = value
                Me.NotifyPropertyChanged("Actual")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(JobTolerancePhotograph), ColumnKey:="JobToleranceID", Lazy:=true, Table:="ussSFJobTolerancePhotograph", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property UssSFJobTolerancePhotographs() As IList(Of JobTolerancePhotograph)
        Get
            Return Me._ussSFJobTolerancePhotographs
        End Get
        Set
            Me._ussSFJobTolerancePhotographs = value
        End Set
    End Property
    
    <BelongsTo("JobID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Job() As Job
        Get
            Return Me._job
        End Get
        Set
            If (_job <> value) Then
                Me._job = value
                Me.NotifyPropertyChanged("Job")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFJobTolerance", Lazy:=true, Schema:="dbo")>  _
Partial Public Class JobTolerance
    Inherits JobToleranceBase
End Class

<Serializable()>  _
Partial Public MustInherit Class CostCentreBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of CostCentre)
    
    Private _code As String
    
    Private _description As String
    
    Private _transactionCode As String
    
    Private _colour As String
    
    Private _revenueServiceCode As String
    
    Private _recoveryServiceCode As String
    
    <[Property]("Code", ColumnType:="String"),  _
     ValidateNonEmpty("Required field", RunWhen:=RunWhen.Insert),  _
     ValidateIsUnique()>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String"),  _
     ValidateNonEmpty("Required field")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("TransactionCode", ColumnType:="String")>  _
    Public Overridable Property TransactionCode() As String
        Get
            Return Me._transactionCode
        End Get
        Set
            If (_transactionCode <> value) Then
                Me._transactionCode = value
                Me.NotifyPropertyChanged("TransactionCode")
            End If
        End Set
    End Property
    
    <[Property]("Colour", ColumnType:="String")>  _
    Public Overridable Property Colour() As String
        Get
            Return Me._colour
        End Get
        Set
            If (_colour <> value) Then
                Me._colour = value
                Me.NotifyPropertyChanged("Colour")
            End If
        End Set
    End Property
    
    <[Property]("RevenueServiceCode", ColumnType:="String")>  _
    Public Overridable Property RevenueServiceCode() As String
        Get
            Return Me._revenueServiceCode
        End Get
        Set
            If (_revenueServiceCode <> value) Then
                Me._revenueServiceCode = value
                Me.NotifyPropertyChanged("RevenueServiceCode")
            End If
        End Set
    End Property
    
    <[Property]("RecoveryServiceCode", ColumnType:="String")>  _
    Public Overridable Property RecoveryServiceCode() As String
        Get
            Return Me._recoveryServiceCode
        End Get
        Set
            If (_recoveryServiceCode <> value) Then
                Me._recoveryServiceCode = value
                Me.NotifyPropertyChanged("RecoveryServiceCode")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFCostCentre", Lazy:=true, Schema:="dbo")>  _
Partial Public Class CostCentre
    Inherits CostCentreBase
End Class

<Serializable()>  _
Partial Public MustInherit Class JobStageChecklistBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of JobStageChecklist)
    
    Private _jobStage As JobStage
    
    <BelongsTo("JobStageID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobStage() As JobStage
        Get
            Return Me._jobStage
        End Get
        Set
            If (_jobStage <> value) Then
                Me._jobStage = value
                Me.NotifyPropertyChanged("JobStage")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFJobStageChecklist", Lazy:=true, Schema:="dbo")>  _
Partial Public Class JobStageChecklist
    Inherits JobStageChecklistBase
End Class

<Serializable()>  _
Partial Public MustInherit Class RequisitionBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Requisition)
    
    Private _number As String
    
    Private _date As System.Nullable(Of Date)
    
    Private _agentID As System.Nullable(Of Integer)
    
    Private _agentName As String
    
    Private _eRPRequisitionID As System.Nullable(Of Integer)
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _requisitionLines As IList(Of RequisitionLine) = New List(Of RequisitionLine)()
    
    Private _job As Job
    
    Private _part As Part
    
    Private _partGroup As PartGroup
    
    Private _supplyScope As SupplyScope
    
    Private _workCentre As WorkCentre
    
    Private _workCentreCategory As WorkCentreCategory
    
    <[Property]("Number", ColumnType:="String")>  _
    Public Overridable Property Number() As String
        Get
            Return Me._number
        End Get
        Set
            If (_number <> value) Then
                Me._number = value
                Me.NotifyPropertyChanged("Number")
            End If
        End Set
    End Property
    
    <[Property]("Date", ColumnType:="Timestamp")>  _
    Public Overridable Property [Date]() As System.Nullable(Of Date)
        Get
            Return Me._date
        End Get
        Set
            If ((_date <> value)  _
                        Or (_date Is Nothing)) Then
                Me._date = value
                Me.NotifyPropertyChanged("Date")
            End If
        End Set
    End Property
    
    <[Property]("AgentID", ColumnType:="Int32")>  _
    Public Overridable Property AgentID() As System.Nullable(Of Integer)
        Get
            Return Me._agentID
        End Get
        Set
            If ((_agentID <> value)  _
                        Or (_agentID Is Nothing)) Then
                Me._agentID = value
                Me.NotifyPropertyChanged("AgentID")
            End If
        End Set
    End Property
    
    <[Property]("AgentName", ColumnType:="String")>  _
    Public Overridable Property AgentName() As String
        Get
            Return Me._agentName
        End Get
        Set
            If (_agentName <> value) Then
                Me._agentName = value
                Me.NotifyPropertyChanged("AgentName")
            End If
        End Set
    End Property
    
    <[Property]("ERPRequisitionID", ColumnType:="Int32")>  _
    Public Overridable Property ERPRequisitionID() As System.Nullable(Of Integer)
        Get
            Return Me._eRPRequisitionID
        End Get
        Set
            If ((_eRPRequisitionID <> value)  _
                        Or (_eRPRequisitionID Is Nothing)) Then
                Me._eRPRequisitionID = value
                Me.NotifyPropertyChanged("ERPRequisitionID")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(RequisitionLine), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="RequisitionID", Lazy:=true, NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property RequisitionLines() As IList(Of RequisitionLine)
        Get
            Return Me._requisitionLines
        End Get
        Set
            Me._requisitionLines = value
        End Set
    End Property
    
    <BelongsTo("JobID", Cascade:=CascadeEnum.SaveUpdate, NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Job() As Job
        Get
            Return Me._job
        End Get
        Set
            If (_job <> value) Then
                Me._job = value
                Me.NotifyPropertyChanged("Job")
            End If
        End Set
    End Property
    
    <BelongsTo("PartID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Part() As Part
        Get
            Return Me._part
        End Get
        Set
            If (_part <> value) Then
                Me._part = value
                Me.NotifyPropertyChanged("Part")
            End If
        End Set
    End Property
    
    <BelongsTo("PartGroupID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property PartGroup() As PartGroup
        Get
            Return Me._partGroup
        End Get
        Set
            If (_partGroup <> value) Then
                Me._partGroup = value
                Me.NotifyPropertyChanged("PartGroup")
            End If
        End Set
    End Property
    
    <BelongsTo("SupplyScopeID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property SupplyScope() As SupplyScope
        Get
            Return Me._supplyScope
        End Get
        Set
            If (_supplyScope <> value) Then
                Me._supplyScope = value
                Me.NotifyPropertyChanged("SupplyScope")
            End If
        End Set
    End Property
    
    <BelongsTo("WorkCentreID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property WorkCentre() As WorkCentre
        Get
            Return Me._workCentre
        End Get
        Set
            If (_workCentre <> value) Then
                Me._workCentre = value
                Me.NotifyPropertyChanged("WorkCentre")
            End If
        End Set
    End Property
    
    <BelongsTo("WorkCentreCategoryID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property WorkCentreCategory() As WorkCentreCategory
        Get
            Return Me._workCentreCategory
        End Get
        Set
            If (_workCentreCategory <> value) Then
                Me._workCentreCategory = value
                Me.NotifyPropertyChanged("WorkCentreCategory")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFRequisition", Lazy:=true, Schema:="dbo")>  _
Partial Public Class Requisition
    Inherits RequisitionBase
End Class

<Serializable()>  _
Partial Public MustInherit Class RequisitionLineBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of RequisitionLine)
    
    Private _quantity As System.Nullable(Of Double)
    
    Private _unitCost As System.Nullable(Of Double)
    
    Private _totalCost As System.Nullable(Of Double)
    
    Private _lineNote As String
    
    Private _eRPRequisitionLineID As System.Nullable(Of Integer)
    
    Private _requisition As Requisition
    
    Private _jobLine As JobLine
    
    <[Property]("Quantity", ColumnType:="Double")>  _
    Public Overridable Property Quantity() As System.Nullable(Of Double)
        Get
            Return Me._quantity
        End Get
        Set
            If ((_quantity <> value)  _
                        Or (_quantity Is Nothing)) Then
                Me._quantity = value
                Me.NotifyPropertyChanged("Quantity")
            End If
        End Set
    End Property
    
    <[Property]("UnitCost", ColumnType:="Double")>  _
    Public Overridable Property UnitCost() As System.Nullable(Of Double)
        Get
            Return Me._unitCost
        End Get
        Set
            If ((_unitCost <> value)  _
                        Or (_unitCost Is Nothing)) Then
                Me._unitCost = value
                Me.NotifyPropertyChanged("UnitCost")
            End If
        End Set
    End Property
    
    <[Property]("TotalCost", ColumnType:="Double")>  _
    Public Overridable Property TotalCost() As System.Nullable(Of Double)
        Get
            Return Me._totalCost
        End Get
        Set
            If ((_totalCost <> value)  _
                        Or (_totalCost Is Nothing)) Then
                Me._totalCost = value
                Me.NotifyPropertyChanged("TotalCost")
            End If
        End Set
    End Property
    
    <[Property]("LineNote", ColumnType:="String")>  _
    Public Overridable Property LineNote() As String
        Get
            Return Me._lineNote
        End Get
        Set
            If (_lineNote <> value) Then
                Me._lineNote = value
                Me.NotifyPropertyChanged("LineNote")
            End If
        End Set
    End Property
    
    <[Property]("ERPRequisitionLineID", ColumnType:="Int32")>  _
    Public Overridable Property ERPRequisitionLineID() As System.Nullable(Of Integer)
        Get
            Return Me._eRPRequisitionLineID
        End Get
        Set
            If ((_eRPRequisitionLineID <> value)  _
                        Or (_eRPRequisitionLineID Is Nothing)) Then
                Me._eRPRequisitionLineID = value
                Me.NotifyPropertyChanged("ERPRequisitionLineID")
            End If
        End Set
    End Property
    
    <BelongsTo("RequisitionID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Requisition() As Requisition
        Get
            Return Me._requisition
        End Get
        Set
            If (_requisition <> value) Then
                Me._requisition = value
                Me.NotifyPropertyChanged("Requisition")
            End If
        End Set
    End Property
    
    <BelongsTo("JobLineID", Cascade:=CascadeEnum.SaveUpdate, NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobLine() As JobLine
        Get
            Return Me._jobLine
        End Get
        Set
            If (_jobLine <> value) Then
                Me._jobLine = value
                Me.NotifyPropertyChanged("JobLine")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFRequisitionLine", Lazy:=true, Schema:="dbo")>  _
Partial Public Class RequisitionLine
    Inherits RequisitionLineBase
End Class

<Serializable()>  _
Partial Public MustInherit Class PurchaseOrderBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of PurchaseOrder)
    
    Private _eRPPurchaseOrderID As System.Nullable(Of Integer)
    
    Private _orderNumber As String
    
    Private _gRVNumber As String
    
    Private _orderDate As System.Nullable(Of Date)
    
    Private _requiredDate As System.Nullable(Of Date)
    
    Private _gRVDate As System.Nullable(Of Date)
    
    Private _agentID As System.Nullable(Of Integer)
    
    Private _agentName As String
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _purchaseOrderLines As IList(Of PurchaseOrderLine) = New List(Of PurchaseOrderLine)()
    
    Private _job As Job
    
    Private _part As Part
    
    Private _partGroup As PartGroup
    
    Private _supplyScope As SupplyScope
    
    Private _workCentre As WorkCentre
    
    Private _workCentreCategory As WorkCentreCategory
    
    <[Property]("ERPPurchaseOrderID", ColumnType:="Int32")>  _
    Public Overridable Property ERPPurchaseOrderID() As System.Nullable(Of Integer)
        Get
            Return Me._eRPPurchaseOrderID
        End Get
        Set
            If ((_eRPPurchaseOrderID <> value)  _
                        Or (_eRPPurchaseOrderID Is Nothing)) Then
                Me._eRPPurchaseOrderID = value
                Me.NotifyPropertyChanged("ERPPurchaseOrderID")
            End If
        End Set
    End Property
    
    <[Property]("OrderNumber", ColumnType:="String")>  _
    Public Overridable Property OrderNumber() As String
        Get
            Return Me._orderNumber
        End Get
        Set
            If (_orderNumber <> value) Then
                Me._orderNumber = value
                Me.NotifyPropertyChanged("OrderNumber")
            End If
        End Set
    End Property
    
    <[Property]("GRVNumber", ColumnType:="String")>  _
    Public Overridable Property GRVNumber() As String
        Get
            Return Me._gRVNumber
        End Get
        Set
            If (_gRVNumber <> value) Then
                Me._gRVNumber = value
                Me.NotifyPropertyChanged("GRVNumber")
            End If
        End Set
    End Property
    
    <[Property]("OrderDate", ColumnType:="Timestamp")>  _
    Public Overridable Property OrderDate() As System.Nullable(Of Date)
        Get
            Return Me._orderDate
        End Get
        Set
            If ((_orderDate <> value)  _
                        Or (_orderDate Is Nothing)) Then
                Me._orderDate = value
                Me.NotifyPropertyChanged("OrderDate")
            End If
        End Set
    End Property
    
    <[Property]("RequiredDate", ColumnType:="Timestamp")>  _
    Public Overridable Property RequiredDate() As System.Nullable(Of Date)
        Get
            Return Me._requiredDate
        End Get
        Set
            If ((_requiredDate <> value)  _
                        Or (_requiredDate Is Nothing)) Then
                Me._requiredDate = value
                Me.NotifyPropertyChanged("RequiredDate")
            End If
        End Set
    End Property
    
    <[Property]("GRVDate", ColumnType:="Timestamp")>  _
    Public Overridable Property GRVDate() As System.Nullable(Of Date)
        Get
            Return Me._gRVDate
        End Get
        Set
            If ((_gRVDate <> value)  _
                        Or (_gRVDate Is Nothing)) Then
                Me._gRVDate = value
                Me.NotifyPropertyChanged("GRVDate")
            End If
        End Set
    End Property
    
    <[Property]("AgentID", ColumnType:="Int32")>  _
    Public Overridable Property AgentID() As System.Nullable(Of Integer)
        Get
            Return Me._agentID
        End Get
        Set
            If ((_agentID <> value)  _
                        Or (_agentID Is Nothing)) Then
                Me._agentID = value
                Me.NotifyPropertyChanged("AgentID")
            End If
        End Set
    End Property
    
    <[Property]("AgentName", ColumnType:="String")>  _
    Public Overridable Property AgentName() As String
        Get
            Return Me._agentName
        End Get
        Set
            If (_agentName <> value) Then
                Me._agentName = value
                Me.NotifyPropertyChanged("AgentName")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(PurchaseOrderLine), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="PurchaseOrderID", Lazy:=true)>  _
    Public Overridable Property PurchaseOrderLines() As IList(Of PurchaseOrderLine)
        Get
            Return Me._purchaseOrderLines
        End Get
        Set
            Me._purchaseOrderLines = value
        End Set
    End Property
    
    <BelongsTo("JobID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Job() As Job
        Get
            Return Me._job
        End Get
        Set
            If (_job <> value) Then
                Me._job = value
                Me.NotifyPropertyChanged("Job")
            End If
        End Set
    End Property
    
    <BelongsTo("PartID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Part() As Part
        Get
            Return Me._part
        End Get
        Set
            If (_part <> value) Then
                Me._part = value
                Me.NotifyPropertyChanged("Part")
            End If
        End Set
    End Property
    
    <BelongsTo("PartGroupID")>  _
    Public Overridable Property PartGroup() As PartGroup
        Get
            Return Me._partGroup
        End Get
        Set
            If (_partGroup <> value) Then
                Me._partGroup = value
                Me.NotifyPropertyChanged("PartGroup")
            End If
        End Set
    End Property
    
    <BelongsTo("SupplyScopeID")>  _
    Public Overridable Property SupplyScope() As SupplyScope
        Get
            Return Me._supplyScope
        End Get
        Set
            If (_supplyScope <> value) Then
                Me._supplyScope = value
                Me.NotifyPropertyChanged("SupplyScope")
            End If
        End Set
    End Property
    
    <BelongsTo("WorkCentreID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property WorkCentre() As WorkCentre
        Get
            Return Me._workCentre
        End Get
        Set
            If (_workCentre <> value) Then
                Me._workCentre = value
                Me.NotifyPropertyChanged("WorkCentre")
            End If
        End Set
    End Property
    
    <BelongsTo("WorkCentreCategoryID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property WorkCentreCategory() As WorkCentreCategory
        Get
            Return Me._workCentreCategory
        End Get
        Set
            If (_workCentreCategory <> value) Then
                Me._workCentreCategory = value
                Me.NotifyPropertyChanged("WorkCentreCategory")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFPurchaseOrder", Lazy:=true, Schema:="dbo")>  _
Partial Public Class PurchaseOrder
    Inherits PurchaseOrderBase
End Class

<Serializable()>  _
Partial Public MustInherit Class PurchaseOrderLineBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of PurchaseOrderLine)
    
    Private _eRPPurchaseOrderLineID As System.Nullable(Of Integer)
    
    Private _quantity As System.Nullable(Of Double)
    
    Private _unitPrice As System.Nullable(Of Double)
    
    Private _totalPrice As System.Nullable(Of Double)
    
    Private _lineNote As String
    
    Private _purchaseOrder As PurchaseOrder
    
    Private _jobLine As JobLine
    
    <[Property]("ERPPurchaseOrderLineID", ColumnType:="Int32")>  _
    Public Overridable Property ERPPurchaseOrderLineID() As System.Nullable(Of Integer)
        Get
            Return Me._eRPPurchaseOrderLineID
        End Get
        Set
            If ((_eRPPurchaseOrderLineID <> value)  _
                        Or (_eRPPurchaseOrderLineID Is Nothing)) Then
                Me._eRPPurchaseOrderLineID = value
                Me.NotifyPropertyChanged("ERPPurchaseOrderLineID")
            End If
        End Set
    End Property
    
    <[Property]("Quantity", ColumnType:="Double")>  _
    Public Overridable Property Quantity() As System.Nullable(Of Double)
        Get
            Return Me._quantity
        End Get
        Set
            If ((_quantity <> value)  _
                        Or (_quantity Is Nothing)) Then
                Me._quantity = value
                Me.NotifyPropertyChanged("Quantity")
            End If
        End Set
    End Property
    
    <[Property]("UnitPrice", ColumnType:="Double")>  _
    Public Overridable Property UnitPrice() As System.Nullable(Of Double)
        Get
            Return Me._unitPrice
        End Get
        Set
            If ((_unitPrice <> value)  _
                        Or (_unitPrice Is Nothing)) Then
                Me._unitPrice = value
                Me.NotifyPropertyChanged("UnitPrice")
            End If
        End Set
    End Property
    
    <[Property]("TotalPrice", ColumnType:="Double")>  _
    Public Overridable Property TotalPrice() As System.Nullable(Of Double)
        Get
            Return Me._totalPrice
        End Get
        Set
            If ((_totalPrice <> value)  _
                        Or (_totalPrice Is Nothing)) Then
                Me._totalPrice = value
                Me.NotifyPropertyChanged("TotalPrice")
            End If
        End Set
    End Property
    
    <[Property]("LineNote", ColumnType:="String")>  _
    Public Overridable Property LineNote() As String
        Get
            Return Me._lineNote
        End Get
        Set
            If (_lineNote <> value) Then
                Me._lineNote = value
                Me.NotifyPropertyChanged("LineNote")
            End If
        End Set
    End Property
    
    <BelongsTo("PurchaseOrderID")>  _
    Public Overridable Property PurchaseOrder() As PurchaseOrder
        Get
            Return Me._purchaseOrder
        End Get
        Set
            If (_purchaseOrder <> value) Then
                Me._purchaseOrder = value
                Me.NotifyPropertyChanged("PurchaseOrder")
            End If
        End Set
    End Property
    
    <BelongsTo("JobLineID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobLine() As JobLine
        Get
            Return Me._jobLine
        End Get
        Set
            If (_jobLine <> value) Then
                Me._jobLine = value
                Me.NotifyPropertyChanged("JobLine")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFPurchaseOrderLine", Lazy:=true, Schema:="dbo")>  _
Partial Public Class PurchaseOrderLine
    Inherits PurchaseOrderLineBase
End Class

<Serializable()>  _
Partial Public MustInherit Class JobStageTriggerBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of JobStageTrigger)
    
    Private _triggerIDValue As System.Nullable(Of Integer)
    
    Private _jobStage As JobStage
    
    <[Property]("TriggerID", ColumnType:="Int32")>  _
    Public Overridable Property TriggerIDValue() As System.Nullable(Of Integer)
        Get
            Return Me._triggerIDValue
        End Get
        Set
            If ((_triggerIDValue <> value)  _
                        Or (_triggerIDValue Is Nothing)) Then
                Me._triggerIDValue = value
                Me.NotifyPropertyChanged("TriggerIDValue")
            End If
        End Set
    End Property
    
    <BelongsTo("JobStageID", Cascade:=CascadeEnum.All, NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobStage() As JobStage
        Get
            Return Me._jobStage
        End Get
        Set
            If (_jobStage <> value) Then
                Me._jobStage = value
                Me.NotifyPropertyChanged("JobStage")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFJobStageTrigger", Schema:="dbo")>  _
Partial Public Class JobStageTrigger
    Inherits JobStageTriggerBase
End Class

<Serializable()>  _
Partial Public MustInherit Class JobStageFieldPromptBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of JobStageFieldPrompt)
    
    Private _fieldName As String
    
    Private _isRequired As System.Nullable(Of Boolean)
    
    Private _requiredValue As String
    
    Private _defaultValue As String
    
    Private _promptBefore As System.Nullable(Of Boolean)
    
    Private _promptAfter As System.Nullable(Of Boolean)
    
    Private _jobStage As JobStage
    
    <[Property]("FieldName", ColumnType:="String")>  _
    Public Overridable Property FieldName() As String
        Get
            Return Me._fieldName
        End Get
        Set
            If (_fieldName <> value) Then
                Me._fieldName = value
                Me.NotifyPropertyChanged("FieldName")
            End If
        End Set
    End Property
    
    <[Property]("IsRequired", ColumnType:="Boolean")>  _
    Public Overridable Property IsRequired() As System.Nullable(Of Boolean)
        Get
            Return Me._isRequired
        End Get
        Set
            If ((_isRequired <> value)  _
                        Or (_isRequired Is Nothing)) Then
                Me._isRequired = value
                Me.NotifyPropertyChanged("IsRequired")
            End If
        End Set
    End Property
    
    <[Property]("RequiredValue", ColumnType:="String")>  _
    Public Overridable Property RequiredValue() As String
        Get
            Return Me._requiredValue
        End Get
        Set
            If (_requiredValue <> value) Then
                Me._requiredValue = value
                Me.NotifyPropertyChanged("RequiredValue")
            End If
        End Set
    End Property
    
    <[Property]("DefaultValue", ColumnType:="String")>  _
    Public Overridable Property DefaultValue() As String
        Get
            Return Me._defaultValue
        End Get
        Set
            If (_defaultValue <> value) Then
                Me._defaultValue = value
                Me.NotifyPropertyChanged("DefaultValue")
            End If
        End Set
    End Property
    
    <[Property]("PromptBefore", ColumnType:="Boolean")>  _
    Public Overridable Property PromptBefore() As System.Nullable(Of Boolean)
        Get
            Return Me._promptBefore
        End Get
        Set
            If ((_promptBefore <> value)  _
                        Or (_promptBefore Is Nothing)) Then
                Me._promptBefore = value
                Me.NotifyPropertyChanged("PromptBefore")
            End If
        End Set
    End Property
    
    <[Property]("PromptAfter", ColumnType:="Boolean")>  _
    Public Overridable Property PromptAfter() As System.Nullable(Of Boolean)
        Get
            Return Me._promptAfter
        End Get
        Set
            If ((_promptAfter <> value)  _
                        Or (_promptAfter Is Nothing)) Then
                Me._promptAfter = value
                Me.NotifyPropertyChanged("PromptAfter")
            End If
        End Set
    End Property
    
    <BelongsTo("JobStageID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobStage() As JobStage
        Get
            Return Me._jobStage
        End Get
        Set
            If (_jobStage <> value) Then
                Me._jobStage = value
                Me.NotifyPropertyChanged("JobStage")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFJobStageFieldPrompt", Lazy:=true, Schema:="dbo")>  _
Partial Public Class JobStageFieldPrompt
    Inherits JobStageFieldPromptBase
End Class

<Serializable()>  _
Partial Public MustInherit Class ArtisanBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Artisan)
    
    Private _code As String
    
    Private _description As String
    
    Private _dBColour As String
    
    Private _image() As Byte
    
    Private _rate As System.Nullable(Of Integer)
    
    Private _calendarID As System.Nullable(Of Integer)
    
    Private _serviceCode As String
    
    Private _isPrimary As System.Nullable(Of Boolean)
    
    Private _password As String
    
    <[Property]("Code", ColumnType:="String"),  _
     ValidateNonEmpty("""Code is a required field.""")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("Colour", ColumnType:="String")>  _
    Public Overridable Property DBColour() As String
        Get
            Return Me._dBColour
        End Get
        Set
            If (_dBColour <> value) Then
                Me._dBColour = value
                Me.NotifyPropertyChanged("DBColour")
            End If
        End Set
    End Property
    
    <[Property]("Image", ColumnType:="BinaryBlob")>  _
    Public Overridable Property Image() As Byte()
        Get
            Return Me._image
        End Get
        Set
            Me._image = value
            Me.NotifyPropertyChanged("Image")
        End Set
    End Property
    
    <[Property]("Rate", ColumnType:="Int32")>  _
    Public Overridable Property Rate() As System.Nullable(Of Integer)
        Get
            Return Me._rate
        End Get
        Set
            If ((_rate <> value)  _
                        Or (_rate Is Nothing)) Then
                Me._rate = value
                Me.NotifyPropertyChanged("Rate")
            End If
        End Set
    End Property
    
    <[Property]("CalendarID", ColumnType:="Int32")>  _
    Public Overridable Property CalendarID() As System.Nullable(Of Integer)
        Get
            Return Me._calendarID
        End Get
        Set
            If ((_calendarID <> value)  _
                        Or (_calendarID Is Nothing)) Then
                Me._calendarID = value
                Me.NotifyPropertyChanged("CalendarID")
            End If
        End Set
    End Property
    
    <[Property]("ServiceCode", ColumnType:="String")>  _
    Public Overridable Property ServiceCode() As String
        Get
            Return Me._serviceCode
        End Get
        Set
            If (_serviceCode <> value) Then
                Me._serviceCode = value
                Me.NotifyPropertyChanged("ServiceCode")
            End If
        End Set
    End Property
    
    <[Property]("IsPrimary", ColumnType:="Boolean")>  _
    Public Overridable Property IsPrimary() As System.Nullable(Of Boolean)
        Get
            Return Me._isPrimary
        End Get
        Set
            If ((_isPrimary <> value)  _
                        Or (_isPrimary Is Nothing)) Then
                Me._isPrimary = value
                Me.NotifyPropertyChanged("IsPrimary")
            End If
        End Set
    End Property
    
    <[Property]("Password", ColumnType:="String")>  _
    Public Overridable Property Password() As String
        Get
            Return Me._password
        End Get
        Set
            If (_password <> value) Then
                Me._password = value
                Me.NotifyPropertyChanged("Password")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSSArtisan", Lazy:=true, Schema:="dbo")>  _
Partial Public Class Artisan
    Inherits ArtisanBase
End Class

<Serializable()>  _
Partial Public MustInherit Class NoteBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Note)
    
    Private _note As String
    
    Private _createUserID As System.Nullable(Of Integer)
    
    Private _createDate As System.Nullable(Of Date)
    
    Private _editUserID As System.Nullable(Of Integer)
    
    Private _editUserDate As System.Nullable(Of Date)
    
    Private _jobStage As JobStage
    
    Private _job As Job
    
    <[Property]("Note", ColumnType:="StringClob")>  _
    Public Overridable Property Note() As String
        Get
            Return Me._note
        End Get
        Set
            If (_note <> value) Then
                Me._note = value
                Me.NotifyPropertyChanged("Note")
            End If
        End Set
    End Property
    
    <[Property]("CreateUserID", ColumnType:="Int32")>  _
    Public Overridable Property CreateUserID() As System.Nullable(Of Integer)
        Get
            Return Me._createUserID
        End Get
        Set
            If ((_createUserID <> value)  _
                        Or (_createUserID Is Nothing)) Then
                Me._createUserID = value
                Me.NotifyPropertyChanged("CreateUserID")
            End If
        End Set
    End Property
    
    <[Property]("CreateDate", ColumnType:="DateTime")>  _
    Public Overridable Property CreateDate() As System.Nullable(Of Date)
        Get
            Return Me._createDate
        End Get
        Set
            If ((_createDate <> value)  _
                        Or (_createDate Is Nothing)) Then
                Me._createDate = value
                Me.NotifyPropertyChanged("CreateDate")
            End If
        End Set
    End Property
    
    <[Property]("EditUserID", ColumnType:="Int32")>  _
    Public Overridable Property EditUserID() As System.Nullable(Of Integer)
        Get
            Return Me._editUserID
        End Get
        Set
            If ((_editUserID <> value)  _
                        Or (_editUserID Is Nothing)) Then
                Me._editUserID = value
                Me.NotifyPropertyChanged("EditUserID")
            End If
        End Set
    End Property
    
    <[Property]("EditUserDate", ColumnType:="DateTime")>  _
    Public Overridable Property EditUserDate() As System.Nullable(Of Date)
        Get
            Return Me._editUserDate
        End Get
        Set
            If ((_editUserDate <> value)  _
                        Or (_editUserDate Is Nothing)) Then
                Me._editUserDate = value
                Me.NotifyPropertyChanged("EditUserDate")
            End If
        End Set
    End Property
    
    <BelongsTo("StageID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobStage() As JobStage
        Get
            Return Me._jobStage
        End Get
        Set
            If (_jobStage <> value) Then
                Me._jobStage = value
                Me.NotifyPropertyChanged("JobStage")
            End If
        End Set
    End Property
    
    <BelongsTo("JobID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Job() As Job
        Get
            Return Me._job
        End Get
        Set
            If (_job <> value) Then
                Me._job = value
                Me.NotifyPropertyChanged("Job")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFJobNote", Lazy:=true, Schema:="dbo")>  _
Partial Public Class Note
    Inherits NoteBase
End Class

<Serializable()>  _
Partial Public MustInherit Class JobMemoBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of JobMemo)
    
    Private _contents As String
    
    Private _createUserID As System.Nullable(Of Integer)
    
    Private _createDate As System.Nullable(Of Date)
    
    Private _editUserID As System.Nullable(Of Integer)
    
    Private _editDate As System.Nullable(Of Date)
    
    Private _job As Job
    
    Private _jobStage As JobStage
    
    <[Property]("Memo", ColumnType:="StringClob")>  _
    Public Overridable Property Contents() As String
        Get
            Return Me._contents
        End Get
        Set
            If (_contents <> value) Then
                Me._contents = value
                Me.NotifyPropertyChanged("Contents")
            End If
        End Set
    End Property
    
    <[Property]("CreateUserID", ColumnType:="Int32")>  _
    Public Overridable Property CreateUserID() As System.Nullable(Of Integer)
        Get
            Return Me._createUserID
        End Get
        Set
            If ((_createUserID <> value)  _
                        Or (_createUserID Is Nothing)) Then
                Me._createUserID = value
                Me.NotifyPropertyChanged("CreateUserID")
            End If
        End Set
    End Property
    
    <[Property]("CreateDate", ColumnType:="Timestamp")>  _
    Public Overridable Property CreateDate() As System.Nullable(Of Date)
        Get
            Return Me._createDate
        End Get
        Set
            If ((_createDate <> value)  _
                        Or (_createDate Is Nothing)) Then
                Me._createDate = value
                Me.NotifyPropertyChanged("CreateDate")
            End If
        End Set
    End Property
    
    <[Property]("EditUserID", ColumnType:="Int32")>  _
    Public Overridable Property EditUserID() As System.Nullable(Of Integer)
        Get
            Return Me._editUserID
        End Get
        Set
            If ((_editUserID <> value)  _
                        Or (_editUserID Is Nothing)) Then
                Me._editUserID = value
                Me.NotifyPropertyChanged("EditUserID")
            End If
        End Set
    End Property
    
    <[Property]("EditDate", ColumnType:="Timestamp")>  _
    Public Overridable Property EditDate() As System.Nullable(Of Date)
        Get
            Return Me._editDate
        End Get
        Set
            If ((_editDate <> value)  _
                        Or (_editDate Is Nothing)) Then
                Me._editDate = value
                Me.NotifyPropertyChanged("EditDate")
            End If
        End Set
    End Property
    
    <BelongsTo("JobID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Job() As Job
        Get
            Return Me._job
        End Get
        Set
            If (_job <> value) Then
                Me._job = value
                Me.NotifyPropertyChanged("Job")
            End If
        End Set
    End Property
    
    <BelongsTo("StageID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobStage() As JobStage
        Get
            Return Me._jobStage
        End Get
        Set
            If (_jobStage <> value) Then
                Me._jobStage = value
                Me.NotifyPropertyChanged("JobStage")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFJobMemo", Lazy:=true, Schema:="dbo")>  _
Partial Public Class JobMemo
    Inherits JobMemoBase
End Class

<Serializable()>  _
Partial Public MustInherit Class JobMemoPhotoBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of JobMemoPhoto)
    
    Private _photo() As Byte
    
    Private _description As String
    
    Private _jobMemo As JobMemo
    
    <[Property]("Photo", ColumnType:="BinaryBlob")>  _
    Public Overridable Property Photo() As Byte()
        Get
            Return Me._photo
        End Get
        Set
            Me._photo = value
            Me.NotifyPropertyChanged("Photo")
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <BelongsTo("JobMemoID", Cascade:=CascadeEnum.SaveUpdate, NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobMemo() As JobMemo
        Get
            Return Me._jobMemo
        End Get
        Set
            If (_jobMemo <> value) Then
                Me._jobMemo = value
                Me.NotifyPropertyChanged("JobMemo")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFJobMemoPhotograph", Lazy:=true, Schema:="dbo")>  _
Partial Public Class JobMemoPhoto
    Inherits JobMemoPhotoBase
End Class

<Serializable()>  _
Partial Public MustInherit Class JobDrawingAnnotationBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of JobDrawingAnnotation)
    
    Private _code As String
    
    Private _description As String
    
    Private _sequence As System.Nullable(Of Integer)
    
    Private _size As String
    
    Private _job As Job
    
    <[Property]("Code", ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("Sequence", ColumnType:="Int32")>  _
    Public Overridable Property Sequence() As System.Nullable(Of Integer)
        Get
            Return Me._sequence
        End Get
        Set
            If ((_sequence <> value)  _
                        Or (_sequence Is Nothing)) Then
                Me._sequence = value
                Me.NotifyPropertyChanged("Sequence")
            End If
        End Set
    End Property
    
    <[Property]("Size", ColumnType:="String")>  _
    Public Overridable Property Size() As String
        Get
            Return Me._size
        End Get
        Set
            If (_size <> value) Then
                Me._size = value
                Me.NotifyPropertyChanged("Size")
            End If
        End Set
    End Property
    
    <BelongsTo("JobID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Job() As Job
        Get
            Return Me._job
        End Get
        Set
            If (_job <> value) Then
                Me._job = value
                Me.NotifyPropertyChanged("Job")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFJobDrawingAnnotations", Lazy:=true, Schema:="dbo", BatchSize:=100)>  _
Partial Public Class JobDrawingAnnotation
    Inherits JobDrawingAnnotationBase
End Class

<Serializable()>  _
Partial Public MustInherit Class AuditBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Audit)
    
    Private _date As System.Nullable(Of Date)
    
    Private _idAgents As System.Nullable(Of Integer)
    
    Private _description As String
    
    Private _type As String
    
    Private _oldValue As String
    
    Private _newValue As String
    
    Private _idJob As System.Nullable(Of Integer)
    
    Private _idJobLine As System.Nullable(Of Integer)
    
    <[Property]("Date", ColumnType:="Timestamp")>  _
    Public Overridable Property [Date]() As System.Nullable(Of Date)
        Get
            Return Me._date
        End Get
        Set
            If ((_date <> value)  _
                        Or (_date Is Nothing)) Then
                Me._date = value
                Me.NotifyPropertyChanged("Date")
            End If
        End Set
    End Property
    
    <[Property]("idAgents", ColumnType:="Int32")>  _
    Public Overridable Property IdAgents() As System.Nullable(Of Integer)
        Get
            Return Me._idAgents
        End Get
        Set
            If ((_idAgents <> value)  _
                        Or (_idAgents Is Nothing)) Then
                Me._idAgents = value
                Me.NotifyPropertyChanged("IdAgents")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="StringClob")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("Type", ColumnType:="String")>  _
    Public Overridable Property Type() As String
        Get
            Return Me._type
        End Get
        Set
            If (_type <> value) Then
                Me._type = value
                Me.NotifyPropertyChanged("Type")
            End If
        End Set
    End Property
    
    <[Property]("OldValue", ColumnType:="String")>  _
    Public Overridable Property OldValue() As String
        Get
            Return Me._oldValue
        End Get
        Set
            If (_oldValue <> value) Then
                Me._oldValue = value
                Me.NotifyPropertyChanged("OldValue")
            End If
        End Set
    End Property
    
    <[Property]("NewValue", ColumnType:="String")>  _
    Public Overridable Property NewValue() As String
        Get
            Return Me._newValue
        End Get
        Set
            If (_newValue <> value) Then
                Me._newValue = value
                Me.NotifyPropertyChanged("NewValue")
            End If
        End Set
    End Property
    
    <[Property]("idJob", ColumnType:="Int32")>  _
    Public Overridable Property idJob() As System.Nullable(Of Integer)
        Get
            Return Me._idJob
        End Get
        Set
            If ((_idJob <> value)  _
                        Or (_idJob Is Nothing)) Then
                Me._idJob = value
                Me.NotifyPropertyChanged("idJob")
            End If
        End Set
    End Property
    
    <[Property]("idJobLine", ColumnType:="Int32")>  _
    Public Overridable Property idJobLine() As System.Nullable(Of Integer)
        Get
            Return Me._idJobLine
        End Get
        Set
            If ((_idJobLine <> value)  _
                        Or (_idJobLine Is Nothing)) Then
                Me._idJobLine = value
                Me.NotifyPropertyChanged("idJobLine")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFAudit", Schema:="dbo", UseAutoImport:=false)>  _
Partial Public Class Audit
    Inherits AuditBase
End Class

<Serializable()>  _
Partial Public MustInherit Class JobNumbersBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of JobNumbers)
    
    Private _jobNumber As String
    
    Private _orderNumber As String
    
    Private _description1 As String
    
    Private _description2 As String
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property JobNumber() As String
        Get
            Return Me._jobNumber
        End Get
        Set
            If (_jobNumber <> value) Then
                Me._jobNumber = value
                Me.NotifyPropertyChanged("JobNumber")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property OrderNumber() As String
        Get
            Return Me._orderNumber
        End Get
        Set
            If (_orderNumber <> value) Then
                Me._orderNumber = value
                Me.NotifyPropertyChanged("OrderNumber")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property Description1() As String
        Get
            Return Me._description1
        End Get
        Set
            If (_description1 <> value) Then
                Me._description1 = value
                Me.NotifyPropertyChanged("Description1")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property Description2() As String
        Get
            Return Me._description2
        End Get
        Set
            If (_description2 <> value) Then
                Me._description2 = value
                Me.NotifyPropertyChanged("Description2")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFJobNumbers", Lazy:=true)>  _
Partial Public Class JobNumbers
    Inherits JobNumbersBase
End Class

<Serializable()>  _
Partial Public MustInherit Class QuoteNumbersBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of QuoteNumbers)
    
    Private _quoteNumber As String
    
    Private _orderNumber As String
    
    Private _description1 As String
    
    Private _description2 As String
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property QuoteNumber() As String
        Get
            Return Me._quoteNumber
        End Get
        Set
            If (_quoteNumber <> value) Then
                Me._quoteNumber = value
                Me.NotifyPropertyChanged("QuoteNumber")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property OrderNumber() As String
        Get
            Return Me._orderNumber
        End Get
        Set
            If (_orderNumber <> value) Then
                Me._orderNumber = value
                Me.NotifyPropertyChanged("OrderNumber")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property Description1() As String
        Get
            Return Me._description1
        End Get
        Set
            If (_description1 <> value) Then
                Me._description1 = value
                Me.NotifyPropertyChanged("Description1")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property Description2() As String
        Get
            Return Me._description2
        End Get
        Set
            If (_description2 <> value) Then
                Me._description2 = value
                Me.NotifyPropertyChanged("Description2")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFQuoteNumbers")>  _
Partial Public Class QuoteNumbers
    Inherits QuoteNumbersBase
End Class

<Serializable()>  _
Partial Public MustInherit Class EmployeeBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Employee)
    
    Private _personID As System.Nullable(Of Integer)
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _employeeQualifications As IList(Of EmployeeQualification) = New List(Of EmployeeQualification)()
    
    <[Property]("PersonID", ColumnType:="Int32")>  _
    Public Overridable Property PersonID() As System.Nullable(Of Integer)
        Get
            Return Me._personID
        End Get
        Set
            If ((_personID <> value)  _
                        Or (_personID Is Nothing)) Then
                Me._personID = value
                Me.NotifyPropertyChanged("PersonID")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(EmployeeQualification), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="EmployeeID", Lazy:=true, Table:="ussSFEmployeeQualification", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property EmployeeQualifications() As IList(Of EmployeeQualification)
        Get
            Return Me._employeeQualifications
        End Get
        Set
            Me._employeeQualifications = value
        End Set
    End Property
End Class

<ActiveRecord("ussSFEmployee", Lazy:=true, Schema:="dbo", SelectBeforeUpdate:=true)>  _
Partial Public Class Employee
    Inherits EmployeeBase
End Class

<Serializable()>  _
Partial Public MustInherit Class SFCustomerBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of SFCustomer)
    
    Private _eRPCustomerID As System.Nullable(Of Integer)
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _customerWorkCentreCategories As IList(Of CustomerWorkCentreCategory) = New List(Of CustomerWorkCentreCategory)()
    
    <[Property]("ERPCustomerID", ColumnType:="Int32")>  _
    Public Overridable Property ERPCustomerID() As System.Nullable(Of Integer)
        Get
            Return Me._eRPCustomerID
        End Get
        Set
            If ((_eRPCustomerID <> value)  _
                        Or (_eRPCustomerID Is Nothing)) Then
                Me._eRPCustomerID = value
                Me.NotifyPropertyChanged("ERPCustomerID")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(CustomerWorkCentreCategory), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="CustomerID", Lazy:=true, Table:="ussSFCustomerCostCentre", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property CustomerWorkCentreCategories() As IList(Of CustomerWorkCentreCategory)
        Get
            Return Me._customerWorkCentreCategories
        End Get
        Set
            Me._customerWorkCentreCategories = value
        End Set
    End Property
End Class

<ActiveRecord("ussSFCustomer", Lazy:=true, Schema:="dbo")>  _
Partial Public Class SFCustomer
    Inherits SFCustomerBase
End Class

<Serializable()>  _
Partial Public MustInherit Class CustomerWorkCentreCategoryBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of CustomerWorkCentreCategory)
    
    Private _code As String
    
    Private _description As String
    
    Private _weekDayPriceList As System.Nullable(Of Integer)
    
    Private _weekNightPricelist As System.Nullable(Of Integer)
    
    Private _saturdayDayPricelist As System.Nullable(Of Integer)
    
    Private _saturdayNightPricelist As System.Nullable(Of Integer)
    
    Private _sundayDayPricelist As System.Nullable(Of Integer)
    
    Private _sundayNightPricelist As System.Nullable(Of Integer)
    
    Private _publicHolidayDayPricelist As System.Nullable(Of Integer)
    
    Private _publicHolidayNightPricelist As System.Nullable(Of Integer)
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _customerJobClasses As IList(Of CustomerJobClass) = New List(Of CustomerJobClass)()
    
    Private _sFCustomer As SFCustomer
    
    <[Property]("Code", ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("WeekDayPriceListID", ColumnType:="Int32")>  _
    Public Overridable Property WeekDayPriceList() As System.Nullable(Of Integer)
        Get
            Return Me._weekDayPriceList
        End Get
        Set
            If ((_weekDayPriceList <> value)  _
                        Or (_weekDayPriceList Is Nothing)) Then
                Me._weekDayPriceList = value
                Me.NotifyPropertyChanged("WeekDayPriceList")
            End If
        End Set
    End Property
    
    <[Property]("WeekNightPriceListID", ColumnType:="Int32")>  _
    Public Overridable Property WeekNightPricelist() As System.Nullable(Of Integer)
        Get
            Return Me._weekNightPricelist
        End Get
        Set
            If ((_weekNightPricelist <> value)  _
                        Or (_weekNightPricelist Is Nothing)) Then
                Me._weekNightPricelist = value
                Me.NotifyPropertyChanged("WeekNightPricelist")
            End If
        End Set
    End Property
    
    <[Property]("SaturdayDayPricelistID", ColumnType:="Int32")>  _
    Public Overridable Property SaturdayDayPricelist() As System.Nullable(Of Integer)
        Get
            Return Me._saturdayDayPricelist
        End Get
        Set
            If ((_saturdayDayPricelist <> value)  _
                        Or (_saturdayDayPricelist Is Nothing)) Then
                Me._saturdayDayPricelist = value
                Me.NotifyPropertyChanged("SaturdayDayPricelist")
            End If
        End Set
    End Property
    
    <[Property]("SaturdayNightPricelistID", ColumnType:="Int32")>  _
    Public Overridable Property SaturdayNightPricelist() As System.Nullable(Of Integer)
        Get
            Return Me._saturdayNightPricelist
        End Get
        Set
            If ((_saturdayNightPricelist <> value)  _
                        Or (_saturdayNightPricelist Is Nothing)) Then
                Me._saturdayNightPricelist = value
                Me.NotifyPropertyChanged("SaturdayNightPricelist")
            End If
        End Set
    End Property
    
    <[Property]("SundayDayPricelistID", ColumnType:="Int32")>  _
    Public Overridable Property SundayDayPricelist() As System.Nullable(Of Integer)
        Get
            Return Me._sundayDayPricelist
        End Get
        Set
            If ((_sundayDayPricelist <> value)  _
                        Or (_sundayDayPricelist Is Nothing)) Then
                Me._sundayDayPricelist = value
                Me.NotifyPropertyChanged("SundayDayPricelist")
            End If
        End Set
    End Property
    
    <[Property]("SundayNightPricelistID", ColumnType:="Int32")>  _
    Public Overridable Property SundayNightPricelist() As System.Nullable(Of Integer)
        Get
            Return Me._sundayNightPricelist
        End Get
        Set
            If ((_sundayNightPricelist <> value)  _
                        Or (_sundayNightPricelist Is Nothing)) Then
                Me._sundayNightPricelist = value
                Me.NotifyPropertyChanged("SundayNightPricelist")
            End If
        End Set
    End Property
    
    <[Property]("PublicHolidayDayPricelistID", ColumnType:="Int32")>  _
    Public Overridable Property PublicHolidayDayPricelist() As System.Nullable(Of Integer)
        Get
            Return Me._publicHolidayDayPricelist
        End Get
        Set
            If ((_publicHolidayDayPricelist <> value)  _
                        Or (_publicHolidayDayPricelist Is Nothing)) Then
                Me._publicHolidayDayPricelist = value
                Me.NotifyPropertyChanged("PublicHolidayDayPricelist")
            End If
        End Set
    End Property
    
    <[Property]("PublicHolidayNightPricelistID", ColumnType:="Int32")>  _
    Public Overridable Property PublicHolidayNightPricelist() As System.Nullable(Of Integer)
        Get
            Return Me._publicHolidayNightPricelist
        End Get
        Set
            If ((_publicHolidayNightPricelist <> value)  _
                        Or (_publicHolidayNightPricelist Is Nothing)) Then
                Me._publicHolidayNightPricelist = value
                Me.NotifyPropertyChanged("PublicHolidayNightPricelist")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(CustomerJobClass), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="CustomerCostCentreID", Lazy:=true, Table:="ussSFCustomerJobClass", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property CustomerJobClasses() As IList(Of CustomerJobClass)
        Get
            Return Me._customerJobClasses
        End Get
        Set
            Me._customerJobClasses = value
        End Set
    End Property
    
    <BelongsTo("CustomerID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property SFCustomer() As SFCustomer
        Get
            Return Me._sFCustomer
        End Get
        Set
            If (_sFCustomer <> value) Then
                Me._sFCustomer = value
                Me.NotifyPropertyChanged("SFCustomer")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFCustomerCostCentre", Lazy:=true, Schema:="dbo")>  _
Partial Public Class CustomerWorkCentreCategory
    Inherits CustomerWorkCentreCategoryBase
End Class

<Serializable()>  _
Partial Public MustInherit Class PublicHolidayBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of PublicHoliday)
    
    Private _publicHolidayDate As System.Nullable(Of Date)
    
    Private _description As String
    
    <[Property]("PublicHolidayDate", ColumnType:="DateTime")>  _
    Public Overridable Property PublicHolidayDate() As System.Nullable(Of Date)
        Get
            Return Me._publicHolidayDate
        End Get
        Set
            If ((_publicHolidayDate <> value)  _
                        Or (_publicHolidayDate Is Nothing)) Then
                Me._publicHolidayDate = value
                Me.NotifyPropertyChanged("PublicHolidayDate")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFPublicHoliday", Schema:="dbo")>  _
Partial Public Class PublicHoliday
    Inherits PublicHolidayBase
End Class

<Serializable()>  _
Partial Public MustInherit Class CustomerJobClassBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of CustomerJobClass)
    
    Private _code As String
    
    Private _description As String
    
    Private _inventoryItemID As System.Nullable(Of Integer)
    
    Private _customerWorkCentreCategory As CustomerWorkCentreCategory
    
    <[Property]("Code", ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("InventoryItemID", ColumnType:="Int32")>  _
    Public Overridable Property InventoryItemID() As System.Nullable(Of Integer)
        Get
            Return Me._inventoryItemID
        End Get
        Set
            If ((_inventoryItemID <> value)  _
                        Or (_inventoryItemID Is Nothing)) Then
                Me._inventoryItemID = value
                Me.NotifyPropertyChanged("InventoryItemID")
            End If
        End Set
    End Property
    
    <BelongsTo("CustomerCostCentreID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property CustomerWorkCentreCategory() As CustomerWorkCentreCategory
        Get
            Return Me._customerWorkCentreCategory
        End Get
        Set
            If (_customerWorkCentreCategory <> value) Then
                Me._customerWorkCentreCategory = value
                Me.NotifyPropertyChanged("CustomerWorkCentreCategory")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFCustomerJobClass", Lazy:=true, Schema:="dbo")>  _
Partial Public Class CustomerJobClass
    Inherits CustomerJobClassBase
End Class

<Serializable()>  _
Partial Public MustInherit Class JobLineTimeBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of JobLineTime)
    
    Private _jobLineDate As System.Nullable(Of Date)
    
    Private _description1 As String
    
    Private _description2 As String
    
    Private _eRPBudgetLineID As System.Nullable(Of Integer)
    
    Private _eRPRecoveryLineID As System.Nullable(Of Integer)
    
    Private _inventoryItemID As System.Nullable(Of Integer)
    
    Private _quantity As System.Nullable(Of Double)
    
    Private _lineDiscountPercent As System.Nullable(Of Double)
    
    Private _lineNumber As System.Nullable(Of Integer)
    
    Private _unitPrice As System.Nullable(Of Double)
    
    Private _totalPrice As System.Nullable(Of Double)
    
    Private _employeeID As System.Nullable(Of Integer)
    
    Private _rateTypeID As System.Nullable(Of Integer)
    
    Private _employeeRate As System.Nullable(Of Double)
    
    Private _employeeTotal As System.Nullable(Of Double)
    
    Private _timeUnitPrice As System.Nullable(Of Double)
    
    Private _startDate As System.Nullable(Of Date)
    
    Private _endDate As System.Nullable(Of Date)
    
    Private _notWorked As System.Nullable(Of Boolean)
    
    Private _deleted As System.Nullable(Of Boolean)
    
    Private _invoiceRun As System.Nullable(Of Integer)
    
    Private _paymentRun As System.Nullable(Of Integer)
    
    Private _invoiceWeek As System.Nullable(Of Integer)
    
    Private _markupPercent As System.Nullable(Of Double)
    
    Private _invoiceAmount As System.Nullable(Of Double)
    
    Private _commisionPercentage As System.Nullable(Of Double)
    
    Private _timesheetClosed As System.Nullable(Of Boolean)
    
    Private _commissionValue As System.Nullable(Of Double)
    
    Private _sANCReferenceNumber As String
    
    Private _sANCReceiptNumber As String
    
    Private _excludeFromPayment As System.Nullable(Of Boolean)
    
    Private _excludeReason As String
    
    Private _clockCode As String
    
    Private _isTimeApproved As System.Nullable(Of Boolean)
    
    Private _timeApprovedAgent As String
    
    Private _billingType As System.Nullable(Of Integer)
    
    Private _faxPayRequest As System.Nullable(Of Boolean)
    
    Private _sigma As System.Nullable(Of Boolean)
    
    Private _variance As System.Nullable(Of Boolean)
    
    Private _call As System.Nullable(Of Boolean)
    
    Private _tarrifDifference As System.Nullable(Of Boolean)
    
    Private _invoiceRunDate As System.Nullable(Of Date)
    
    Private _paymentRunDate As System.Nullable(Of Date)
    
    Private _paymentAmount As System.Nullable(Of Double)
    
    Private _ignoreValidation As System.Nullable(Of Boolean)
    
    Private _ignoreTimeValidation As System.Nullable(Of Boolean)
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _jobLineTimeAttachments As IList(Of JobLineTimeAttachment) = New List(Of JobLineTimeAttachment)()
    
    Private _job As Job
    
    Private _customerWorkCentreCategory As CustomerWorkCentreCategory
    
    Private _customerJobClass As CustomerJobClass
    
    <[Property]("JobLineDate", ColumnType:="Timestamp")>  _
    Public Overridable Property JobLineDate() As System.Nullable(Of Date)
        Get
            Return Me._jobLineDate
        End Get
        Set
            If ((_jobLineDate <> value)  _
                        Or (_jobLineDate Is Nothing)) Then
                Me._jobLineDate = value
                Me.NotifyPropertyChanged("JobLineDate")
            End If
        End Set
    End Property
    
    <[Property]("Description1", ColumnType:="String")>  _
    Public Overridable Property Description1() As String
        Get
            Return Me._description1
        End Get
        Set
            If (_description1 <> value) Then
                Me._description1 = value
                Me.NotifyPropertyChanged("Description1")
            End If
        End Set
    End Property
    
    <[Property]("Description2", ColumnType:="String")>  _
    Public Overridable Property Description2() As String
        Get
            Return Me._description2
        End Get
        Set
            If (_description2 <> value) Then
                Me._description2 = value
                Me.NotifyPropertyChanged("Description2")
            End If
        End Set
    End Property
    
    <[Property]("ERPBudgetLineID", ColumnType:="Int32")>  _
    Public Overridable Property ERPBudgetLineID() As System.Nullable(Of Integer)
        Get
            Return Me._eRPBudgetLineID
        End Get
        Set
            If ((_eRPBudgetLineID <> value)  _
                        Or (_eRPBudgetLineID Is Nothing)) Then
                Me._eRPBudgetLineID = value
                Me.NotifyPropertyChanged("ERPBudgetLineID")
            End If
        End Set
    End Property
    
    <[Property]("ERPRecoveryLineID", ColumnType:="Int32")>  _
    Public Overridable Property ERPRecoveryLineID() As System.Nullable(Of Integer)
        Get
            Return Me._eRPRecoveryLineID
        End Get
        Set
            If ((_eRPRecoveryLineID <> value)  _
                        Or (_eRPRecoveryLineID Is Nothing)) Then
                Me._eRPRecoveryLineID = value
                Me.NotifyPropertyChanged("ERPRecoveryLineID")
            End If
        End Set
    End Property
    
    <[Property]("InventoryItemID", ColumnType:="Int32")>  _
    Public Overridable Property InventoryItemID() As System.Nullable(Of Integer)
        Get
            Return Me._inventoryItemID
        End Get
        Set
            If ((_inventoryItemID <> value)  _
                        Or (_inventoryItemID Is Nothing)) Then
                Me._inventoryItemID = value
                Me.NotifyPropertyChanged("InventoryItemID")
            End If
        End Set
    End Property
    
    <[Property]("Quantity", ColumnType:="Double")>  _
    Public Overridable Property Quantity() As System.Nullable(Of Double)
        Get
            Return Me._quantity
        End Get
        Set
            If ((_quantity <> value)  _
                        Or (_quantity Is Nothing)) Then
                Me._quantity = value
                Me.NotifyPropertyChanged("Quantity")
            End If
        End Set
    End Property
    
    <[Property]("LineDiscountPercent", ColumnType:="Double")>  _
    Public Overridable Property LineDiscountPercent() As System.Nullable(Of Double)
        Get
            Return Me._lineDiscountPercent
        End Get
        Set
            If ((_lineDiscountPercent <> value)  _
                        Or (_lineDiscountPercent Is Nothing)) Then
                Me._lineDiscountPercent = value
                Me.NotifyPropertyChanged("LineDiscountPercent")
            End If
        End Set
    End Property
    
    <[Property]("LineNumber", ColumnType:="Int32")>  _
    Public Overridable Property LineNumber() As System.Nullable(Of Integer)
        Get
            Return Me._lineNumber
        End Get
        Set
            If ((_lineNumber <> value)  _
                        Or (_lineNumber Is Nothing)) Then
                Me._lineNumber = value
                Me.NotifyPropertyChanged("LineNumber")
            End If
        End Set
    End Property
    
    <[Property]("UnitPrice", ColumnType:="Double")>  _
    Public Overridable Property UnitPrice() As System.Nullable(Of Double)
        Get
            Return Me._unitPrice
        End Get
        Set
            If ((_unitPrice <> value)  _
                        Or (_unitPrice Is Nothing)) Then
                Me._unitPrice = value
                Me.NotifyPropertyChanged("UnitPrice")
            End If
        End Set
    End Property
    
    <[Property]("TotalPrice", ColumnType:="Double")>  _
    Public Overridable Property TotalPrice() As System.Nullable(Of Double)
        Get
            Return Me._totalPrice
        End Get
        Set
            If ((_totalPrice <> value)  _
                        Or (_totalPrice Is Nothing)) Then
                Me._totalPrice = value
                Me.NotifyPropertyChanged("TotalPrice")
            End If
        End Set
    End Property
    
    <[Property]("EmployeeID", ColumnType:="Int32")>  _
    Public Overridable Property EmployeeID() As System.Nullable(Of Integer)
        Get
            Return Me._employeeID
        End Get
        Set
            If ((_employeeID <> value)  _
                        Or (_employeeID Is Nothing)) Then
                Me._employeeID = value
                Me.NotifyPropertyChanged("EmployeeID")
            End If
        End Set
    End Property
    
    <[Property]("RateTypeID", ColumnType:="Int32")>  _
    Public Overridable Property RateTypeID() As System.Nullable(Of Integer)
        Get
            Return Me._rateTypeID
        End Get
        Set
            If ((_rateTypeID <> value)  _
                        Or (_rateTypeID Is Nothing)) Then
                Me._rateTypeID = value
                Me.NotifyPropertyChanged("RateTypeID")
            End If
        End Set
    End Property
    
    <[Property]("EmployeeRate", ColumnType:="Double")>  _
    Public Overridable Property EmployeeRate() As System.Nullable(Of Double)
        Get
            Return Me._employeeRate
        End Get
        Set
            If ((_employeeRate <> value)  _
                        Or (_employeeRate Is Nothing)) Then
                Me._employeeRate = value
                Me.NotifyPropertyChanged("EmployeeRate")
            End If
        End Set
    End Property
    
    <[Property]("EmployeeTotal", ColumnType:="Double")>  _
    Public Overridable Property EmployeeTotal() As System.Nullable(Of Double)
        Get
            Return Me._employeeTotal
        End Get
        Set
            If ((_employeeTotal <> value)  _
                        Or (_employeeTotal Is Nothing)) Then
                Me._employeeTotal = value
                Me.NotifyPropertyChanged("EmployeeTotal")
            End If
        End Set
    End Property
    
    <[Property]("TimeUnitPrice", ColumnType:="Double")>  _
    Public Overridable Property TimeUnitPrice() As System.Nullable(Of Double)
        Get
            Return Me._timeUnitPrice
        End Get
        Set
            If ((_timeUnitPrice <> value)  _
                        Or (_timeUnitPrice Is Nothing)) Then
                Me._timeUnitPrice = value
                Me.NotifyPropertyChanged("TimeUnitPrice")
            End If
        End Set
    End Property
    
    <[Property]("StartDate", ColumnType:="DateTime")>  _
    Public Overridable Property StartDate() As System.Nullable(Of Date)
        Get
            Return Me._startDate
        End Get
        Set
            If ((_startDate <> value)  _
                        Or (_startDate Is Nothing)) Then
                Me._startDate = value
                Me.NotifyPropertyChanged("StartDate")
            End If
        End Set
    End Property
    
    <[Property]("EndDate", ColumnType:="DateTime")>  _
    Public Overridable Property EndDate() As System.Nullable(Of Date)
        Get
            Return Me._endDate
        End Get
        Set
            If ((_endDate <> value)  _
                        Or (_endDate Is Nothing)) Then
                Me._endDate = value
                Me.NotifyPropertyChanged("EndDate")
            End If
        End Set
    End Property
    
    <[Property]("NotWorked", ColumnType:="Boolean")>  _
    Public Overridable Property NotWorked() As System.Nullable(Of Boolean)
        Get
            Return Me._notWorked
        End Get
        Set
            If ((_notWorked <> value)  _
                        Or (_notWorked Is Nothing)) Then
                Me._notWorked = value
                Me.NotifyPropertyChanged("NotWorked")
            End If
        End Set
    End Property
    
    <[Property]("Deleted", ColumnType:="Boolean")>  _
    Public Overridable Property Deleted() As System.Nullable(Of Boolean)
        Get
            Return Me._deleted
        End Get
        Set
            If ((_deleted <> value)  _
                        Or (_deleted Is Nothing)) Then
                Me._deleted = value
                Me.NotifyPropertyChanged("Deleted")
            End If
        End Set
    End Property
    
    <[Property]("InvoiceRunYNP", ColumnType:="Int32")>  _
    Public Overridable Property InvoiceRun() As System.Nullable(Of Integer)
        Get
            Return Me._invoiceRun
        End Get
        Set
            If ((_invoiceRun <> value)  _
                        Or (_invoiceRun Is Nothing)) Then
                Me._invoiceRun = value
                Me.NotifyPropertyChanged("InvoiceRun")
            End If
        End Set
    End Property
    
    <[Property]("PaymentRunYNP", ColumnType:="Int32")>  _
    Public Overridable Property PaymentRun() As System.Nullable(Of Integer)
        Get
            Return Me._paymentRun
        End Get
        Set
            If ((_paymentRun <> value)  _
                        Or (_paymentRun Is Nothing)) Then
                Me._paymentRun = value
                Me.NotifyPropertyChanged("PaymentRun")
            End If
        End Set
    End Property
    
    <[Property]("InvoiceWeek", ColumnType:="Int32")>  _
    Public Overridable Property InvoiceWeek() As System.Nullable(Of Integer)
        Get
            Return Me._invoiceWeek
        End Get
        Set
            If ((_invoiceWeek <> value)  _
                        Or (_invoiceWeek Is Nothing)) Then
                Me._invoiceWeek = value
                Me.NotifyPropertyChanged("InvoiceWeek")
            End If
        End Set
    End Property
    
    <[Property]("MarkupPercent", ColumnType:="Double")>  _
    Public Overridable Property MarkupPercent() As System.Nullable(Of Double)
        Get
            Return Me._markupPercent
        End Get
        Set
            If ((_markupPercent <> value)  _
                        Or (_markupPercent Is Nothing)) Then
                Me._markupPercent = value
                Me.NotifyPropertyChanged("MarkupPercent")
            End If
        End Set
    End Property
    
    <[Property]("InvoiceAmount", ColumnType:="Double")>  _
    Public Overridable Property InvoiceAmount() As System.Nullable(Of Double)
        Get
            Return Me._invoiceAmount
        End Get
        Set
            If ((_invoiceAmount <> value)  _
                        Or (_invoiceAmount Is Nothing)) Then
                Me._invoiceAmount = value
                Me.NotifyPropertyChanged("InvoiceAmount")
            End If
        End Set
    End Property
    
    <[Property]("CommisionPercentage", ColumnType:="Double")>  _
    Public Overridable Property CommisionPercentage() As System.Nullable(Of Double)
        Get
            Return Me._commisionPercentage
        End Get
        Set
            If ((_commisionPercentage <> value)  _
                        Or (_commisionPercentage Is Nothing)) Then
                Me._commisionPercentage = value
                Me.NotifyPropertyChanged("CommisionPercentage")
            End If
        End Set
    End Property
    
    <[Property]("TimesheetClosed", ColumnType:="Boolean")>  _
    Public Overridable Property TimesheetClosed() As System.Nullable(Of Boolean)
        Get
            Return Me._timesheetClosed
        End Get
        Set
            If ((_timesheetClosed <> value)  _
                        Or (_timesheetClosed Is Nothing)) Then
                Me._timesheetClosed = value
                Me.NotifyPropertyChanged("TimesheetClosed")
            End If
        End Set
    End Property
    
    <[Property]("CommissionValue", ColumnType:="Double")>  _
    Public Overridable Property CommissionValue() As System.Nullable(Of Double)
        Get
            Return Me._commissionValue
        End Get
        Set
            If ((_commissionValue <> value)  _
                        Or (_commissionValue Is Nothing)) Then
                Me._commissionValue = value
                Me.NotifyPropertyChanged("CommissionValue")
            End If
        End Set
    End Property
    
    <[Property]("SANCReferenceNumber", ColumnType:="String")>  _
    Public Overridable Property SANCReferenceNumber() As String
        Get
            Return Me._sANCReferenceNumber
        End Get
        Set
            If (_sANCReferenceNumber <> value) Then
                Me._sANCReferenceNumber = value
                Me.NotifyPropertyChanged("SANCReferenceNumber")
            End If
        End Set
    End Property
    
    <[Property]("SANCReceiptNumber", ColumnType:="String")>  _
    Public Overridable Property SANCReceiptNumber() As String
        Get
            Return Me._sANCReceiptNumber
        End Get
        Set
            If (_sANCReceiptNumber <> value) Then
                Me._sANCReceiptNumber = value
                Me.NotifyPropertyChanged("SANCReceiptNumber")
            End If
        End Set
    End Property
    
    <[Property]("ExcludeFromPayment", ColumnType:="Boolean")>  _
    Public Overridable Property ExcludeFromPayment() As System.Nullable(Of Boolean)
        Get
            Return Me._excludeFromPayment
        End Get
        Set
            If ((_excludeFromPayment <> value)  _
                        Or (_excludeFromPayment Is Nothing)) Then
                Me._excludeFromPayment = value
                Me.NotifyPropertyChanged("ExcludeFromPayment")
            End If
        End Set
    End Property
    
    <[Property]("ExcludeReason", ColumnType:="String")>  _
    Public Overridable Property ExcludeReason() As String
        Get
            Return Me._excludeReason
        End Get
        Set
            If (_excludeReason <> value) Then
                Me._excludeReason = value
                Me.NotifyPropertyChanged("ExcludeReason")
            End If
        End Set
    End Property
    
    <[Property]("ClockCode", ColumnType:="String")>  _
    Public Overridable Property ClockCode() As String
        Get
            Return Me._clockCode
        End Get
        Set
            If (_clockCode <> value) Then
                Me._clockCode = value
                Me.NotifyPropertyChanged("ClockCode")
            End If
        End Set
    End Property
    
    <[Property]("IsTimeApproved", ColumnType:="Boolean")>  _
    Public Overridable Property IsTimeApproved() As System.Nullable(Of Boolean)
        Get
            Return Me._isTimeApproved
        End Get
        Set
            If ((_isTimeApproved <> value)  _
                        Or (_isTimeApproved Is Nothing)) Then
                Me._isTimeApproved = value
                Me.NotifyPropertyChanged("IsTimeApproved")
            End If
        End Set
    End Property
    
    <[Property]("TimeApprovedAgent", ColumnType:="String")>  _
    Public Overridable Property TimeApprovedAgent() As String
        Get
            Return Me._timeApprovedAgent
        End Get
        Set
            If (_timeApprovedAgent <> value) Then
                Me._timeApprovedAgent = value
                Me.NotifyPropertyChanged("TimeApprovedAgent")
            End If
        End Set
    End Property
    
    <[Property]("BillingType", ColumnType:="Int32")>  _
    Public Overridable Property BillingType() As System.Nullable(Of Integer)
        Get
            Return Me._billingType
        End Get
        Set
            If ((_billingType <> value)  _
                        Or (_billingType Is Nothing)) Then
                Me._billingType = value
                Me.NotifyPropertyChanged("BillingType")
            End If
        End Set
    End Property
    
    <[Property]("FaxPayRequest", ColumnType:="Boolean")>  _
    Public Overridable Property FaxPayRequest() As System.Nullable(Of Boolean)
        Get
            Return Me._faxPayRequest
        End Get
        Set
            If ((_faxPayRequest <> value)  _
                        Or (_faxPayRequest Is Nothing)) Then
                Me._faxPayRequest = value
                Me.NotifyPropertyChanged("FaxPayRequest")
            End If
        End Set
    End Property
    
    <[Property]("Sigma", ColumnType:="Boolean")>  _
    Public Overridable Property Sigma() As System.Nullable(Of Boolean)
        Get
            Return Me._sigma
        End Get
        Set
            If ((_sigma <> value)  _
                        Or (_sigma Is Nothing)) Then
                Me._sigma = value
                Me.NotifyPropertyChanged("Sigma")
            End If
        End Set
    End Property
    
    <[Property]("Variance", ColumnType:="Boolean")>  _
    Public Overridable Property Variance() As System.Nullable(Of Boolean)
        Get
            Return Me._variance
        End Get
        Set
            If ((_variance <> value)  _
                        Or (_variance Is Nothing)) Then
                Me._variance = value
                Me.NotifyPropertyChanged("Variance")
            End If
        End Set
    End Property
    
    <[Property]("Call", ColumnType:="Boolean")>  _
    Public Overridable Property [Call]() As System.Nullable(Of Boolean)
        Get
            Return Me._call
        End Get
        Set
            If ((_call <> value)  _
                        Or (_call Is Nothing)) Then
                Me._call = value
                Me.NotifyPropertyChanged("Call")
            End If
        End Set
    End Property
    
    <[Property]("TarrifDifference", ColumnType:="Boolean")>  _
    Public Overridable Property TarrifDifference() As System.Nullable(Of Boolean)
        Get
            Return Me._tarrifDifference
        End Get
        Set
            If ((_tarrifDifference <> value)  _
                        Or (_tarrifDifference Is Nothing)) Then
                Me._tarrifDifference = value
                Me.NotifyPropertyChanged("TarrifDifference")
            End If
        End Set
    End Property
    
    <[Property]("InvoiceRunDate", ColumnType:="Timestamp")>  _
    Public Overridable Property InvoiceRunDate() As System.Nullable(Of Date)
        Get
            Return Me._invoiceRunDate
        End Get
        Set
            If ((_invoiceRunDate <> value)  _
                        Or (_invoiceRunDate Is Nothing)) Then
                Me._invoiceRunDate = value
                Me.NotifyPropertyChanged("InvoiceRunDate")
            End If
        End Set
    End Property
    
    <[Property]("PaymentRunDate", ColumnType:="Timestamp")>  _
    Public Overridable Property PaymentRunDate() As System.Nullable(Of Date)
        Get
            Return Me._paymentRunDate
        End Get
        Set
            If ((_paymentRunDate <> value)  _
                        Or (_paymentRunDate Is Nothing)) Then
                Me._paymentRunDate = value
                Me.NotifyPropertyChanged("PaymentRunDate")
            End If
        End Set
    End Property
    
    <[Property]("PaymentAmount", ColumnType:="Double")>  _
    Public Overridable Property PaymentAmount() As System.Nullable(Of Double)
        Get
            Return Me._paymentAmount
        End Get
        Set
            If ((_paymentAmount <> value)  _
                        Or (_paymentAmount Is Nothing)) Then
                Me._paymentAmount = value
                Me.NotifyPropertyChanged("PaymentAmount")
            End If
        End Set
    End Property
    
    <[Property]("IgnoreValidation", ColumnType:="Boolean")>  _
    Public Overridable Property IgnoreValidation() As System.Nullable(Of Boolean)
        Get
            Return Me._ignoreValidation
        End Get
        Set
            If ((_ignoreValidation <> value)  _
                        Or (_ignoreValidation Is Nothing)) Then
                Me._ignoreValidation = value
                Me.NotifyPropertyChanged("IgnoreValidation")
            End If
        End Set
    End Property
    
    <[Property]("IgnoreTimeValidation", ColumnType:="Boolean")>  _
    Public Overridable Property IgnoreTimeValidation() As System.Nullable(Of Boolean)
        Get
            Return Me._ignoreTimeValidation
        End Get
        Set
            If ((_ignoreTimeValidation <> value)  _
                        Or (_ignoreTimeValidation Is Nothing)) Then
                Me._ignoreTimeValidation = value
                Me.NotifyPropertyChanged("IgnoreTimeValidation")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(JobLineTimeAttachment), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="JobLineTimeID", Lazy:=true, Table:="ussJobLineTimeAttachment", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobLineTimeAttachments() As IList(Of JobLineTimeAttachment)
        Get
            Return Me._jobLineTimeAttachments
        End Get
        Set
            Me._jobLineTimeAttachments = value
        End Set
    End Property
    
    <BelongsTo("JobID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Job() As Job
        Get
            Return Me._job
        End Get
        Set
            If (_job <> value) Then
                Me._job = value
                Me.NotifyPropertyChanged("Job")
            End If
        End Set
    End Property
    
    <BelongsTo("CustomerCostCentreID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property CustomerWorkCentreCategory() As CustomerWorkCentreCategory
        Get
            Return Me._customerWorkCentreCategory
        End Get
        Set
            If (_customerWorkCentreCategory <> value) Then
                Me._customerWorkCentreCategory = value
                Me.NotifyPropertyChanged("CustomerWorkCentreCategory")
            End If
        End Set
    End Property
    
    <BelongsTo("CustomerJobClassID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property CustomerJobClass() As CustomerJobClass
        Get
            Return Me._customerJobClass
        End Get
        Set
            If (_customerJobClass <> value) Then
                Me._customerJobClass = value
                Me.NotifyPropertyChanged("CustomerJobClass")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFJobLineTime", Lazy:=true, Schema:="dbo")>  _
Partial Public Class JobLineTime
    Inherits JobLineTimeBase
End Class

<Serializable()>  _
Partial Public MustInherit Class EmployeeQualificationBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of EmployeeQualification)
    
    Private _inventoryItemID As System.Nullable(Of Integer)
    
    Private _active As System.Nullable(Of Boolean)
    
    Private _employee As Employee
    
    <[Property]("InventoryItemID", ColumnType:="Int32")>  _
    Public Overridable Property InventoryItemID() As System.Nullable(Of Integer)
        Get
            Return Me._inventoryItemID
        End Get
        Set
            If ((_inventoryItemID <> value)  _
                        Or (_inventoryItemID Is Nothing)) Then
                Me._inventoryItemID = value
                Me.NotifyPropertyChanged("InventoryItemID")
            End If
        End Set
    End Property
    
    <[Property]("Active", ColumnType:="Boolean", [Default]:="1")>  _
    Public Overridable Property Active() As System.Nullable(Of Boolean)
        Get
            Return Me._active
        End Get
        Set
            If ((_active <> value)  _
                        Or (_active Is Nothing)) Then
                Me._active = value
                Me.NotifyPropertyChanged("Active")
            End If
        End Set
    End Property
    
    <BelongsTo("EmployeeID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Employee() As Employee
        Get
            Return Me._employee
        End Get
        Set
            If (_employee <> value) Then
                Me._employee = value
                Me.NotifyPropertyChanged("Employee")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFEmployeeQualification", Lazy:=true, Schema:="dbo")>  _
Partial Public Class EmployeeQualification
    Inherits EmployeeQualificationBase
End Class

<Serializable()>  _
Partial Public MustInherit Class InvoiceRunBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of InvoiceRun)
    
    Private _invoiceWeek As String
    
    Private _invoiceDate As System.Nullable(Of Date)
    
    Private _startDate As System.Nullable(Of Date)
    
    Private _endDate As System.Nullable(Of Date)
    
    Private _excludeDummy As System.Nullable(Of Boolean)
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _invoiceRunLines As IList(Of InvoiceRunLine) = New List(Of InvoiceRunLine)()
    
    <[Property]("InvoiceWeek", ColumnType:="String")>  _
    Public Overridable Property InvoiceWeek() As String
        Get
            Return Me._invoiceWeek
        End Get
        Set
            If (_invoiceWeek <> value) Then
                Me._invoiceWeek = value
                Me.NotifyPropertyChanged("InvoiceWeek")
            End If
        End Set
    End Property
    
    <[Property]("InvoiceDate", ColumnType:="DateTime")>  _
    Public Overridable Property InvoiceDate() As System.Nullable(Of Date)
        Get
            Return Me._invoiceDate
        End Get
        Set
            If ((_invoiceDate <> value)  _
                        Or (_invoiceDate Is Nothing)) Then
                Me._invoiceDate = value
                Me.NotifyPropertyChanged("InvoiceDate")
            End If
        End Set
    End Property
    
    <[Property]("StartDate", ColumnType:="DateTime")>  _
    Public Overridable Property StartDate() As System.Nullable(Of Date)
        Get
            Return Me._startDate
        End Get
        Set
            If ((_startDate <> value)  _
                        Or (_startDate Is Nothing)) Then
                Me._startDate = value
                Me.NotifyPropertyChanged("StartDate")
            End If
        End Set
    End Property
    
    <[Property]("EndDate", ColumnType:="DateTime")>  _
    Public Overridable Property EndDate() As System.Nullable(Of Date)
        Get
            Return Me._endDate
        End Get
        Set
            If ((_endDate <> value)  _
                        Or (_endDate Is Nothing)) Then
                Me._endDate = value
                Me.NotifyPropertyChanged("EndDate")
            End If
        End Set
    End Property
    
    <[Property]("ExcludeDummy", ColumnType:="Boolean")>  _
    Public Overridable Property ExcludeDummy() As System.Nullable(Of Boolean)
        Get
            Return Me._excludeDummy
        End Get
        Set
            If ((_excludeDummy <> value)  _
                        Or (_excludeDummy Is Nothing)) Then
                Me._excludeDummy = value
                Me.NotifyPropertyChanged("ExcludeDummy")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(InvoiceRunLine), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="InvoiceRunID", Lazy:=true, Table:="ussSFInvoiceRunLine", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property InvoiceRunLines() As IList(Of InvoiceRunLine)
        Get
            Return Me._invoiceRunLines
        End Get
        Set
            Me._invoiceRunLines = value
        End Set
    End Property
End Class

<ActiveRecord("ussSFInvoiceRun", Schema:="dbo")>  _
Partial Public Class InvoiceRun
    Inherits InvoiceRunBase
End Class

<Serializable()>  _
Partial Public MustInherit Class InvoiceRunLineBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of InvoiceRunLine)
    
    Private _customerID As System.Nullable(Of Integer)
    
    Private _invoiceID As System.Nullable(Of Integer)
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _invoicelinks As IList(Of Invoicelink) = New List(Of Invoicelink)()
    
    Private _invoiceRun As InvoiceRun
    
    <[Property]("CustomerID", ColumnType:="Int32")>  _
    Public Overridable Property CustomerID() As System.Nullable(Of Integer)
        Get
            Return Me._customerID
        End Get
        Set
            If ((_customerID <> value)  _
                        Or (_customerID Is Nothing)) Then
                Me._customerID = value
                Me.NotifyPropertyChanged("CustomerID")
            End If
        End Set
    End Property
    
    <[Property]("InvoiceID", ColumnType:="Int32")>  _
    Public Overridable Property InvoiceID() As System.Nullable(Of Integer)
        Get
            Return Me._invoiceID
        End Get
        Set
            If ((_invoiceID <> value)  _
                        Or (_invoiceID Is Nothing)) Then
                Me._invoiceID = value
                Me.NotifyPropertyChanged("InvoiceID")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(Invoicelink), Cascade:=ManyRelationCascadeEnum.AllDeleteOrphan, ColumnKey:="InvoiceRunlineID", Lazy:=true, Table:="ussSFInvoicelink", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Invoicelinks() As IList(Of Invoicelink)
        Get
            Return Me._invoicelinks
        End Get
        Set
            Me._invoicelinks = value
        End Set
    End Property
    
    <BelongsTo("InvoiceRunID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property InvoiceRun() As InvoiceRun
        Get
            Return Me._invoiceRun
        End Get
        Set
            If (_invoiceRun <> value) Then
                Me._invoiceRun = value
                Me.NotifyPropertyChanged("InvoiceRun")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFInvoiceRunLine", Schema:="dbo")>  _
Partial Public Class InvoiceRunLine
    Inherits InvoiceRunLineBase
End Class

<Serializable()>  _
Partial Public MustInherit Class InvoicelinkBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Invoicelink)
    
    Private _joblineTimeID As System.Nullable(Of Integer)
    
    Private _invoiceRunLine As InvoiceRunLine
    
    <[Property]("JoblineTimeID", ColumnType:="Int32")>  _
    Public Overridable Property JoblineTimeID() As System.Nullable(Of Integer)
        Get
            Return Me._joblineTimeID
        End Get
        Set
            If ((_joblineTimeID <> value)  _
                        Or (_joblineTimeID Is Nothing)) Then
                Me._joblineTimeID = value
                Me.NotifyPropertyChanged("JoblineTimeID")
            End If
        End Set
    End Property
    
    <BelongsTo("InvoiceRunlineID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property InvoiceRunLine() As InvoiceRunLine
        Get
            Return Me._invoiceRunLine
        End Get
        Set
            If (_invoiceRunLine <> value) Then
                Me._invoiceRunLine = value
                Me.NotifyPropertyChanged("InvoiceRunLine")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFInvoicelink", Schema:="dbo")>  _
Partial Public Class Invoicelink
    Inherits InvoicelinkBase
End Class

<Serializable()>  _
Partial Public MustInherit Class JobLineTimeAttachmentBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of JobLineTimeAttachment)
    
    Private _name As String
    
    Private _description As String
    
    Private _attachment() As Byte
    
    Private _jobLineTime As JobLineTime
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property Name() As String
        Get
            Return Me._name
        End Get
        Set
            If (_name <> value) Then
                Me._name = value
                Me.NotifyPropertyChanged("Name")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="BinaryBlob")>  _
    Public Overridable Property Attachment() As Byte()
        Get
            Return Me._attachment
        End Get
        Set
            Me._attachment = value
            Me.NotifyPropertyChanged("Attachment")
        End Set
    End Property
    
    <BelongsTo("JobLineTimeID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property JobLineTime() As JobLineTime
        Get
            Return Me._jobLineTime
        End Get
        Set
            If (_jobLineTime <> value) Then
                Me._jobLineTime = value
                Me.NotifyPropertyChanged("JobLineTime")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFJobLineTimeAttachment", Lazy:=true)>  _
Partial Public Class JobLineTimeAttachment
    Inherits JobLineTimeAttachmentBase
End Class

<Serializable()>  _
Partial Public MustInherit Class PaymentRunBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of PaymentRun)
    
    Private _startDate As System.Nullable(Of Date)
    
    Private _endDate As System.Nullable(Of Date)
    
    Private _paymentDate As String
    
    Private _paymentFrequency As PaymentFrequency
    
    Private _companyBranch As CompanyBranch
    
    <[Property](ColumnType:="DateTime")>  _
    Public Overridable Property StartDate() As System.Nullable(Of Date)
        Get
            Return Me._startDate
        End Get
        Set
            If ((_startDate <> value)  _
                        Or (_startDate Is Nothing)) Then
                Me._startDate = value
                Me.NotifyPropertyChanged("StartDate")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="DateTime")>  _
    Public Overridable Property EndDate() As System.Nullable(Of Date)
        Get
            Return Me._endDate
        End Get
        Set
            If ((_endDate <> value)  _
                        Or (_endDate Is Nothing)) Then
                Me._endDate = value
                Me.NotifyPropertyChanged("EndDate")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property PaymentDate() As String
        Get
            Return Me._paymentDate
        End Get
        Set
            If (_paymentDate <> value) Then
                Me._paymentDate = value
                Me.NotifyPropertyChanged("PaymentDate")
            End If
        End Set
    End Property
    
    <BelongsTo("PaymentFrequencyID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property PaymentFrequency() As PaymentFrequency
        Get
            Return Me._paymentFrequency
        End Get
        Set
            If (_paymentFrequency <> value) Then
                Me._paymentFrequency = value
                Me.NotifyPropertyChanged("PaymentFrequency")
            End If
        End Set
    End Property
    
    <BelongsTo("CompanyBranchID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property CompanyBranch() As CompanyBranch
        Get
            Return Me._companyBranch
        End Get
        Set
            If (_companyBranch <> value) Then
                Me._companyBranch = value
                Me.NotifyPropertyChanged("CompanyBranch")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFPaymentRun")>  _
Partial Public Class PaymentRun
    Inherits PaymentRunBase
End Class

<Serializable()>  _
Partial Public MustInherit Class PaymentRunTypesBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of PaymentRunTypes)
    
    Private _code As String
    
    Private _description As String
    
    Private _rateTypeID As System.Nullable(Of Integer)
    
    Private _payRollCode As String
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Int32")>  _
    Public Overridable Property RateTypeID() As System.Nullable(Of Integer)
        Get
            Return Me._rateTypeID
        End Get
        Set
            If ((_rateTypeID <> value)  _
                        Or (_rateTypeID Is Nothing)) Then
                Me._rateTypeID = value
                Me.NotifyPropertyChanged("RateTypeID")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property PayRollCode() As String
        Get
            Return Me._payRollCode
        End Get
        Set
            If (_payRollCode <> value) Then
                Me._payRollCode = value
                Me.NotifyPropertyChanged("PayRollCode")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFPaymentRunTypes")>  _
Partial Public Class PaymentRunTypes
    Inherits PaymentRunTypesBase
End Class

<Serializable()>  _
Partial Public MustInherit Class PaymentFrequencyBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of PaymentFrequency)
    
    Private _code As String
    
    Private _description As String
    
    Private _eRPPaymentFrequencyCode As String
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _paymentRuns As IList(Of PaymentRun) = New List(Of PaymentRun)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _paymentFrequencyTypes As IList(Of PaymentFrequencyType) = New List(Of PaymentFrequencyType)()
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property ERPPaymentFrequencyCode() As String
        Get
            Return Me._eRPPaymentFrequencyCode
        End Get
        Set
            If (_eRPPaymentFrequencyCode <> value) Then
                Me._eRPPaymentFrequencyCode = value
                Me.NotifyPropertyChanged("ERPPaymentFrequencyCode")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(PaymentRun), ColumnKey:="PaymentFrequencyID", Lazy:=true, Table:="ussSFPaymentFrequency", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property PaymentRuns() As IList(Of PaymentRun)
        Get
            Return Me._paymentRuns
        End Get
        Set
            Me._paymentRuns = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(PaymentFrequencyType), ColumnKey:="PaymentFrequencyID", Lazy:=true, Table:="ussSFPaymentFrequency", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property PaymentFrequencyTypes() As IList(Of PaymentFrequencyType)
        Get
            Return Me._paymentFrequencyTypes
        End Get
        Set
            Me._paymentFrequencyTypes = value
        End Set
    End Property
End Class

<ActiveRecord("ussSFPaymentFrequency")>  _
Partial Public Class PaymentFrequency
    Inherits PaymentFrequencyBase
End Class

<Serializable()>  _
Partial Public MustInherit Class CompanyBranchBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of CompanyBranch)
    
    Private _code As String
    
    Private _description As String
    
    Private _eRPCompanyBranchCode As String
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _paymentRuns As IList(Of PaymentRun) = New List(Of PaymentRun)()
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property ERPCompanyBranchCode() As String
        Get
            Return Me._eRPCompanyBranchCode
        End Get
        Set
            If (_eRPCompanyBranchCode <> value) Then
                Me._eRPCompanyBranchCode = value
                Me.NotifyPropertyChanged("ERPCompanyBranchCode")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(PaymentRun), ColumnKey:="CompanyBranchID", Lazy:=true, Table:="ussSFCompanyBranch", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property PaymentRuns() As IList(Of PaymentRun)
        Get
            Return Me._paymentRuns
        End Get
        Set
            Me._paymentRuns = value
        End Set
    End Property
End Class

<ActiveRecord("ussSFCompanyBranch")>  _
Partial Public Class CompanyBranch
    Inherits CompanyBranchBase
End Class

<Serializable()>  _
Partial Public MustInherit Class PaymentFrequencyTypeBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of PaymentFrequencyType)
    
    Private _code As String
    
    Private _description As String
    
    Private _paymentFrequency As PaymentFrequency
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <BelongsTo("PaymentFrequencyID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property PaymentFrequency() As PaymentFrequency
        Get
            Return Me._paymentFrequency
        End Get
        Set
            If (_paymentFrequency <> value) Then
                Me._paymentFrequency = value
                Me.NotifyPropertyChanged("PaymentFrequency")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFPaymentFrequencyTypes")>  _
Partial Public Class PaymentFrequencyType
    Inherits PaymentFrequencyTypeBase
End Class

<Serializable()>  _
Partial Public MustInherit Class JobAttachmentBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of JobAttachment)
    
    Private _name As String
    
    Private _description As String
    
    Private _attachment() As Byte
    
    Private _job As Job
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property Name() As String
        Get
            Return Me._name
        End Get
        Set
            If (_name <> value) Then
                Me._name = value
                Me.NotifyPropertyChanged("Name")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="BinaryBlob")>  _
    Public Overridable Property Attachment() As Byte()
        Get
            Return Me._attachment
        End Get
        Set
            Me._attachment = value
            Me.NotifyPropertyChanged("Attachment")
        End Set
    End Property
    
    <BelongsTo("JobID", NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Job() As Job
        Get
            Return Me._job
        End Get
        Set
            If (_job <> value) Then
                Me._job = value
                Me.NotifyPropertyChanged("Job")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFJobAttachment", Lazy:=true)>  _
Partial Public Class JobAttachment
    Inherits JobAttachmentBase
End Class

<Serializable()>  _
Partial Public MustInherit Class CancelReasonCodeBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of CancelReasonCode)
    
    Private _code As String
    
    Private _description As String
    
    Private _isCommentAllowed As System.Nullable(Of Boolean)
    
    Private _isForceCommentValue As System.Nullable(Of Boolean)
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _jobs As IList(Of Job) = New List(Of Job)()
    
    <[Property](ColumnType:="String"),  _
     ValidateIsUnique("Code Allready used")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Boolean")>  _
    Public Overridable Property IsCommentAllowed() As System.Nullable(Of Boolean)
        Get
            Return Me._isCommentAllowed
        End Get
        Set
            If ((_isCommentAllowed <> value)  _
                        Or (_isCommentAllowed Is Nothing)) Then
                Me._isCommentAllowed = value
                Me.NotifyPropertyChanged("IsCommentAllowed")
            End If
        End Set
    End Property
    
    <[Property](ColumnType:="Boolean")>  _
    Public Overridable Property IsForceCommentValue() As System.Nullable(Of Boolean)
        Get
            Return Me._isForceCommentValue
        End Get
        Set
            If ((_isForceCommentValue <> value)  _
                        Or (_isForceCommentValue Is Nothing)) Then
                Me._isForceCommentValue = value
                Me.NotifyPropertyChanged("IsForceCommentValue")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(Job), ColumnKey:="CancelReasonID", Lazy:=true, NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Jobs() As IList(Of Job)
        Get
            Return Me._jobs
        End Get
        Set
            Me._jobs = value
        End Set
    End Property
End Class

<ActiveRecord("ussSFCancelReasonCode")>  _
Partial Public Class CancelReasonCode
    Inherits CancelReasonCodeBase
End Class

<Serializable()>  _
Partial Public MustInherit Class ArchiveYearBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of ArchiveYear)
    
    Private _year As System.Nullable(Of Integer)
    
    <[Property](ColumnType:="Int32", Insert:=false, Update:=false)>  _
    Public Overridable Property Year() As System.Nullable(Of Integer)
        Get
            Return Me._year
        End Get
        Set
            If ((_year <> value)  _
                        Or (_year Is Nothing)) Then
                Me._year = value
                Me.NotifyPropertyChanged("Year")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFArchiveYear")>  _
Partial Public Class ArchiveYear
    Inherits ArchiveYearBase
End Class

<Serializable()>  _
Partial Public MustInherit Class JobSupplierDeliveryNoteBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of JobSupplierDeliveryNote)
    
    Private _deliveryDate As System.Nullable(Of Date)
    
    Private _deliveryNumber As String
    
    Private _quantity As System.Nullable(Of Integer)
    
    Private _agentID As System.Nullable(Of Integer)
    
    Private _responsibleAgent As System.Nullable(Of Integer)
    
    Private _specialInstructions1 As String
    
    Private _specialInstructions2 As String
    
    Private _attention As String
    
    Private _supplierID As System.Nullable(Of Integer)
    
    Private _job As Job
    
    <[Property]("DeliveryDate", ColumnType:="DateTime")>  _
    Public Overridable Property DeliveryDate() As System.Nullable(Of Date)
        Get
            Return Me._deliveryDate
        End Get
        Set
            If ((_deliveryDate <> value)  _
                        Or (_deliveryDate Is Nothing)) Then
                Me._deliveryDate = value
                Me.NotifyPropertyChanged("DeliveryDate")
            End If
        End Set
    End Property
    
    <[Property]("DeliveryNumber", ColumnType:="String")>  _
    Public Overridable Property DeliveryNumber() As String
        Get
            Return Me._deliveryNumber
        End Get
        Set
            If (_deliveryNumber <> value) Then
                Me._deliveryNumber = value
                Me.NotifyPropertyChanged("DeliveryNumber")
            End If
        End Set
    End Property
    
    <[Property]("Quantity", ColumnType:="Int32")>  _
    Public Overridable Property Quantity() As System.Nullable(Of Integer)
        Get
            Return Me._quantity
        End Get
        Set
            If ((_quantity <> value)  _
                        Or (_quantity Is Nothing)) Then
                Me._quantity = value
                Me.NotifyPropertyChanged("Quantity")
            End If
        End Set
    End Property
    
    <[Property]("AgentID", ColumnType:="Int32")>  _
    Public Overridable Property AgentID() As System.Nullable(Of Integer)
        Get
            Return Me._agentID
        End Get
        Set
            If ((_agentID <> value)  _
                        Or (_agentID Is Nothing)) Then
                Me._agentID = value
                Me.NotifyPropertyChanged("AgentID")
            End If
        End Set
    End Property
    
    <[Property]("ResponsibleAgentID", ColumnType:="Int32")>  _
    Public Overridable Property ResponsibleAgent() As System.Nullable(Of Integer)
        Get
            Return Me._responsibleAgent
        End Get
        Set
            If ((_responsibleAgent <> value)  _
                        Or (_responsibleAgent Is Nothing)) Then
                Me._responsibleAgent = value
                Me.NotifyPropertyChanged("ResponsibleAgent")
            End If
        End Set
    End Property
    
    <[Property]("SpecialInstruction1", ColumnType:="String")>  _
    Public Overridable Property SpecialInstructions1() As String
        Get
            Return Me._specialInstructions1
        End Get
        Set
            If (_specialInstructions1 <> value) Then
                Me._specialInstructions1 = value
                Me.NotifyPropertyChanged("SpecialInstructions1")
            End If
        End Set
    End Property
    
    <[Property]("SpecialInstruction2", ColumnType:="String")>  _
    Public Overridable Property SpecialInstructions2() As String
        Get
            Return Me._specialInstructions2
        End Get
        Set
            If (_specialInstructions2 <> value) Then
                Me._specialInstructions2 = value
                Me.NotifyPropertyChanged("SpecialInstructions2")
            End If
        End Set
    End Property
    
    <[Property]("Attention", ColumnType:="String")>  _
    Public Overridable Property Attention() As String
        Get
            Return Me._attention
        End Get
        Set
            If (_attention <> value) Then
                Me._attention = value
                Me.NotifyPropertyChanged("Attention")
            End If
        End Set
    End Property
    
    <[Property]("SupplierID", ColumnType:="Int32")>  _
    Public Overridable Property SupplierID() As System.Nullable(Of Integer)
        Get
            Return Me._supplierID
        End Get
        Set
            If ((_supplierID <> value)  _
                        Or (_supplierID Is Nothing)) Then
                Me._supplierID = value
                Me.NotifyPropertyChanged("SupplierID")
            End If
        End Set
    End Property
    
    <BelongsTo("JobID", Cascade:=CascadeEnum.All, NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Job() As Job
        Get
            Return Me._job
        End Get
        Set
            If (_job <> value) Then
                Me._job = value
                Me.NotifyPropertyChanged("Job")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFJobSupplierDeliveryNote")>  _
Partial Public Class JobSupplierDeliveryNote
    Inherits JobSupplierDeliveryNoteBase
End Class

<Serializable()>  _
Partial Public MustInherit Class ProformaInvoiceBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of ProformaInvoice)
    
    Private _version As System.Nullable(Of Integer)
    
    Private _createdUserName As String
    
    Private _createdDateTime As System.Nullable(Of Date)
    
    Private _proformaInvoiceNumber As String
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _proformaInvoiceLines As IList(Of ProformaInvoiceLine) = New List(Of ProformaInvoiceLine)()
    
    Private _job As Job
    
    <[Property]("Version", ColumnType:="Int32")>  _
    Public Overridable Property Version() As System.Nullable(Of Integer)
        Get
            Return Me._version
        End Get
        Set
            If ((_version <> value)  _
                        Or (_version Is Nothing)) Then
                Me._version = value
                Me.NotifyPropertyChanged("Version")
            End If
        End Set
    End Property
    
    <[Property]("CreatedUserName", ColumnType:="String")>  _
    Public Overridable Property CreatedUserName() As String
        Get
            Return Me._createdUserName
        End Get
        Set
            If (_createdUserName <> value) Then
                Me._createdUserName = value
                Me.NotifyPropertyChanged("CreatedUserName")
            End If
        End Set
    End Property
    
    <[Property]("CreatedDateTime", ColumnType:="Timestamp")>  _
    Public Overridable Property CreatedDateTime() As System.Nullable(Of Date)
        Get
            Return Me._createdDateTime
        End Get
        Set
            If ((_createdDateTime <> value)  _
                        Or (_createdDateTime Is Nothing)) Then
                Me._createdDateTime = value
                Me.NotifyPropertyChanged("CreatedDateTime")
            End If
        End Set
    End Property
    
    <[Property]("ProformaInvoiceNumber", ColumnType:="String")>  _
    Public Overridable Property ProformaInvoiceNumber() As String
        Get
            Return Me._proformaInvoiceNumber
        End Get
        Set
            If (_proformaInvoiceNumber <> value) Then
                Me._proformaInvoiceNumber = value
                Me.NotifyPropertyChanged("ProformaInvoiceNumber")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(ProformaInvoiceLine), Cascade:=ManyRelationCascadeEnum.All, ColumnKey:="ProformaInvoiceID", Lazy:=true, NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property ProformaInvoiceLines() As IList(Of ProformaInvoiceLine)
        Get
            Return Me._proformaInvoiceLines
        End Get
        Set
            Me._proformaInvoiceLines = value
        End Set
    End Property
    
    <BelongsTo("JobID", Cascade:=CascadeEnum.All, NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property Job() As Job
        Get
            Return Me._job
        End Get
        Set
            If (_job <> value) Then
                Me._job = value
                Me.NotifyPropertyChanged("Job")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFProformaInvoice", Schema:="dbo")>  _
Partial Public Class ProformaInvoice
    Inherits ProformaInvoiceBase
End Class

<Serializable()>  _
Partial Public MustInherit Class ProformaInvoiceLineBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of ProformaInvoiceLine)
    
    Private _jobLineID As Integer
    
    Private _inventoryItemID As System.Nullable(Of Integer)
    
    Private _quantity As System.Nullable(Of Double)
    
    Private _unitPriceBeforeDiscount As System.Nullable(Of Double)
    
    Private _unitPrice As System.Nullable(Of Double)
    
    Private _lineDiscountPercent As System.Nullable(Of Double)
    
    Private _totalPrice As System.Nullable(Of Double)
    
    Private _proformaInvoice As ProformaInvoice
    
    <[Property]("JobLineID", ColumnType:="Int32", NotNull:=true)>  _
    Public Overridable Property JobLineID() As Integer
        Get
            Return Me._jobLineID
        End Get
        Set
            If (_jobLineID <> value) Then
                Me._jobLineID = value
                Me.NotifyPropertyChanged("JobLineID")
            End If
        End Set
    End Property
    
    <[Property]("InventoryItemID", ColumnType:="Int32")>  _
    Public Overridable Property InventoryItemID() As System.Nullable(Of Integer)
        Get
            Return Me._inventoryItemID
        End Get
        Set
            If ((_inventoryItemID <> value)  _
                        Or (_inventoryItemID Is Nothing)) Then
                Me._inventoryItemID = value
                Me.NotifyPropertyChanged("InventoryItemID")
            End If
        End Set
    End Property
    
    <[Property]("Quantity", ColumnType:="Double")>  _
    Public Overridable Property Quantity() As System.Nullable(Of Double)
        Get
            Return Me._quantity
        End Get
        Set
            If ((_quantity <> value)  _
                        Or (_quantity Is Nothing)) Then
                Me._quantity = value
                Me.NotifyPropertyChanged("Quantity")
            End If
        End Set
    End Property
    
    <[Property]("UnitPriceBeforeDiscount", ColumnType:="Double")>  _
    Public Overridable Property UnitPriceBeforeDiscount() As System.Nullable(Of Double)
        Get
            Return Me._unitPriceBeforeDiscount
        End Get
        Set
            If ((_unitPriceBeforeDiscount <> value)  _
                        Or (_unitPriceBeforeDiscount Is Nothing)) Then
                Me._unitPriceBeforeDiscount = value
                Me.NotifyPropertyChanged("UnitPriceBeforeDiscount")
            End If
        End Set
    End Property
    
    <[Property]("UnitPrice", ColumnType:="Double")>  _
    Public Overridable Property UnitPrice() As System.Nullable(Of Double)
        Get
            Return Me._unitPrice
        End Get
        Set
            If ((_unitPrice <> value)  _
                        Or (_unitPrice Is Nothing)) Then
                Me._unitPrice = value
                Me.NotifyPropertyChanged("UnitPrice")
            End If
        End Set
    End Property
    
    <[Property]("LineDiscountPercent", ColumnType:="Double")>  _
    Public Overridable Property LineDiscountPercent() As System.Nullable(Of Double)
        Get
            Return Me._lineDiscountPercent
        End Get
        Set
            If ((_lineDiscountPercent <> value)  _
                        Or (_lineDiscountPercent Is Nothing)) Then
                Me._lineDiscountPercent = value
                Me.NotifyPropertyChanged("LineDiscountPercent")
            End If
        End Set
    End Property
    
    <[Property]("TotalPrice", ColumnType:="Double")>  _
    Public Overridable Property TotalPrice() As System.Nullable(Of Double)
        Get
            Return Me._totalPrice
        End Get
        Set
            If ((_totalPrice <> value)  _
                        Or (_totalPrice Is Nothing)) Then
                Me._totalPrice = value
                Me.NotifyPropertyChanged("TotalPrice")
            End If
        End Set
    End Property
    
    <BelongsTo("ProformaInvoiceID", Cascade:=CascadeEnum.All, NotFoundBehaviour:=NotFoundBehaviour.Ignore)>  _
    Public Overridable Property ProformaInvoice() As ProformaInvoice
        Get
            Return Me._proformaInvoice
        End Get
        Set
            If (_proformaInvoice <> value) Then
                Me._proformaInvoice = value
                Me.NotifyPropertyChanged("ProformaInvoice")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFProformaInvoiceLine", Schema:="dbo")>  _
Partial Public Class ProformaInvoiceLine
    Inherits ProformaInvoiceLineBase
End Class

<Serializable()>  _
Partial Public MustInherit Class AssetBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Asset)
    
    Private _primaryassetId As System.Nullable(Of Integer)
    
    Private _assetCode As String
    
    Private _asset As String
    
    Private _active As System.Nullable(Of Boolean)
    
    Private _internalAsset As System.Nullable(Of Boolean)
    
    Private _serialNo As String
    
    Private _assetClass As System.Nullable(Of Integer)
    
    Private _location As String
    
    Private _serviceArea As String
    
    Private _totalUsage As System.Nullable(Of Decimal)
    
    Private _lifespan As System.Nullable(Of Decimal)
    
    Private _make_ID As System.Nullable(Of Integer)
    
    Private _model_ID As System.Nullable(Of Integer)
    
    Private _technician_ID As System.Nullable(Of Integer)
    
    Private _description As String
    
    Private _dateAcquired As System.Nullable(Of Date)
    
    Private _purchaseCost As System.Nullable(Of Decimal)
    
    Private _fuelconsumptionApplicable As System.Nullable(Of Boolean)
    
    Private _consumables As System.Nullable(Of Boolean)
    
    Private _averageConsumption As System.Nullable(Of Double)
    
    Private _measurement_ID As System.Nullable(Of Integer)
    
    Private _vin_No As String
    
    Private _registration_No As String
    
    Private _assetTypeID As System.Nullable(Of Integer)
    
    Private _tipoMast As String
    
    Private _attachments As String
    
    Private _indentNo As String
    
    Private _combustionType As String
    
    Private _localAssets As System.Nullable(Of Boolean)
    
    Private _startDate As System.Nullable(Of Date)
    
    Private _endDate As System.Nullable(Of Date)
    
    <[Property]("PrimaryAsset_ID", ColumnType:="Int32")>  _
    Public Overridable Property PrimaryassetId() As System.Nullable(Of Integer)
        Get
            Return Me._primaryassetId
        End Get
        Set
            If ((_primaryassetId <> value)  _
                        Or (_primaryassetId Is Nothing)) Then
                Me._primaryassetId = value
                Me.NotifyPropertyChanged("PrimaryassetId")
            End If
        End Set
    End Property
    
    <[Property]("AssetCode", ColumnType:="String")>  _
    Public Overridable Property AssetCode() As String
        Get
            Return Me._assetCode
        End Get
        Set
            If (_assetCode <> value) Then
                Me._assetCode = value
                Me.NotifyPropertyChanged("AssetCode")
            End If
        End Set
    End Property
    
    <[Property]("Asset", ColumnType:="String")>  _
    Public Overridable Property Asset() As String
        Get
            Return Me._asset
        End Get
        Set
            If (_asset <> value) Then
                Me._asset = value
                Me.NotifyPropertyChanged("Asset")
            End If
        End Set
    End Property
    
    <[Property]("Active", ColumnType:="Boolean")>  _
    Public Overridable Property Active() As System.Nullable(Of Boolean)
        Get
            Return Me._active
        End Get
        Set
            If ((_active <> value)  _
                        Or (_active Is Nothing)) Then
                Me._active = value
                Me.NotifyPropertyChanged("Active")
            End If
        End Set
    End Property
    
    <[Property]("InternalAsset", ColumnType:="Boolean")>  _
    Public Overridable Property InternalAsset() As System.Nullable(Of Boolean)
        Get
            Return Me._internalAsset
        End Get
        Set
            If ((_internalAsset <> value)  _
                        Or (_internalAsset Is Nothing)) Then
                Me._internalAsset = value
                Me.NotifyPropertyChanged("InternalAsset")
            End If
        End Set
    End Property
    
    <[Property]("Serial_No", ColumnType:="String")>  _
    Public Overridable Property SerialNo() As String
        Get
            Return Me._serialNo
        End Get
        Set
            If (_serialNo <> value) Then
                Me._serialNo = value
                Me.NotifyPropertyChanged("SerialNo")
            End If
        End Set
    End Property
    
    <[Property]("AssetClass", ColumnType:="Int32")>  _
    Public Overridable Property AssetClass() As System.Nullable(Of Integer)
        Get
            Return Me._assetClass
        End Get
        Set
            If ((_assetClass <> value)  _
                        Or (_assetClass Is Nothing)) Then
                Me._assetClass = value
                Me.NotifyPropertyChanged("AssetClass")
            End If
        End Set
    End Property
    
    <[Property]("Location", ColumnType:="String")>  _
    Public Overridable Property Location() As String
        Get
            Return Me._location
        End Get
        Set
            If (_location <> value) Then
                Me._location = value
                Me.NotifyPropertyChanged("Location")
            End If
        End Set
    End Property
    
    <[Property]("ServiceArea", ColumnType:="String")>  _
    Public Overridable Property ServiceArea() As String
        Get
            Return Me._serviceArea
        End Get
        Set
            If (_serviceArea <> value) Then
                Me._serviceArea = value
                Me.NotifyPropertyChanged("ServiceArea")
            End If
        End Set
    End Property
    
    <[Property]("TotalUsage", ColumnType:="Decimal")>  _
    Public Overridable Property TotalUsage() As System.Nullable(Of Decimal)
        Get
            Return Me._totalUsage
        End Get
        Set
            If ((_totalUsage <> value)  _
                        Or (_totalUsage Is Nothing)) Then
                Me._totalUsage = value
                Me.NotifyPropertyChanged("TotalUsage")
            End If
        End Set
    End Property
    
    <[Property]("Lifespan", ColumnType:="Decimal")>  _
    Public Overridable Property Lifespan() As System.Nullable(Of Decimal)
        Get
            Return Me._lifespan
        End Get
        Set
            If ((_lifespan <> value)  _
                        Or (_lifespan Is Nothing)) Then
                Me._lifespan = value
                Me.NotifyPropertyChanged("Lifespan")
            End If
        End Set
    End Property
    
    <[Property]("Make_ID", ColumnType:="Int32")>  _
    Public Overridable Property Make_ID() As System.Nullable(Of Integer)
        Get
            Return Me._make_ID
        End Get
        Set
            If ((_make_ID <> value)  _
                        Or (_make_ID Is Nothing)) Then
                Me._make_ID = value
                Me.NotifyPropertyChanged("Make_ID")
            End If
        End Set
    End Property
    
    <[Property]("Model_ID", ColumnType:="Int32")>  _
    Public Overridable Property Model_ID() As System.Nullable(Of Integer)
        Get
            Return Me._model_ID
        End Get
        Set
            If ((_model_ID <> value)  _
                        Or (_model_ID Is Nothing)) Then
                Me._model_ID = value
                Me.NotifyPropertyChanged("Model_ID")
            End If
        End Set
    End Property
    
    <[Property]("Technician_ID", ColumnType:="Int32")>  _
    Public Overridable Property Technician_ID() As System.Nullable(Of Integer)
        Get
            Return Me._technician_ID
        End Get
        Set
            If ((_technician_ID <> value)  _
                        Or (_technician_ID Is Nothing)) Then
                Me._technician_ID = value
                Me.NotifyPropertyChanged("Technician_ID")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("DateAcquired", ColumnType:="DateTime")>  _
    Public Overridable Property DateAcquired() As System.Nullable(Of Date)
        Get
            Return Me._dateAcquired
        End Get
        Set
            If ((_dateAcquired <> value)  _
                        Or (_dateAcquired Is Nothing)) Then
                Me._dateAcquired = value
                Me.NotifyPropertyChanged("DateAcquired")
            End If
        End Set
    End Property
    
    <[Property]("PurchaseCost", ColumnType:="Decimal")>  _
    Public Overridable Property PurchaseCost() As System.Nullable(Of Decimal)
        Get
            Return Me._purchaseCost
        End Get
        Set
            If ((_purchaseCost <> value)  _
                        Or (_purchaseCost Is Nothing)) Then
                Me._purchaseCost = value
                Me.NotifyPropertyChanged("PurchaseCost")
            End If
        End Set
    End Property
    
    <[Property]("FuelconsumptionApplicable", ColumnType:="Boolean")>  _
    Public Overridable Property FuelconsumptionApplicable() As System.Nullable(Of Boolean)
        Get
            Return Me._fuelconsumptionApplicable
        End Get
        Set
            If ((_fuelconsumptionApplicable <> value)  _
                        Or (_fuelconsumptionApplicable Is Nothing)) Then
                Me._fuelconsumptionApplicable = value
                Me.NotifyPropertyChanged("FuelconsumptionApplicable")
            End If
        End Set
    End Property
    
    <[Property]("Consumables", ColumnType:="Boolean")>  _
    Public Overridable Property Consumables() As System.Nullable(Of Boolean)
        Get
            Return Me._consumables
        End Get
        Set
            If ((_consumables <> value)  _
                        Or (_consumables Is Nothing)) Then
                Me._consumables = value
                Me.NotifyPropertyChanged("Consumables")
            End If
        End Set
    End Property
    
    <[Property]("AverageConsumption", ColumnType:="Double")>  _
    Public Overridable Property AverageConsumption() As System.Nullable(Of Double)
        Get
            Return Me._averageConsumption
        End Get
        Set
            If ((_averageConsumption <> value)  _
                        Or (_averageConsumption Is Nothing)) Then
                Me._averageConsumption = value
                Me.NotifyPropertyChanged("AverageConsumption")
            End If
        End Set
    End Property
    
    <[Property]("Measurement_ID", ColumnType:="Int32")>  _
    Public Overridable Property Measurement_ID() As System.Nullable(Of Integer)
        Get
            Return Me._measurement_ID
        End Get
        Set
            If ((_measurement_ID <> value)  _
                        Or (_measurement_ID Is Nothing)) Then
                Me._measurement_ID = value
                Me.NotifyPropertyChanged("Measurement_ID")
            End If
        End Set
    End Property
    
    <[Property]("Vin_No", ColumnType:="String")>  _
    Public Overridable Property Vin_No() As String
        Get
            Return Me._vin_No
        End Get
        Set
            If (_vin_No <> value) Then
                Me._vin_No = value
                Me.NotifyPropertyChanged("Vin_No")
            End If
        End Set
    End Property
    
    <[Property]("Registration_No", ColumnType:="String")>  _
    Public Overridable Property Registration_No() As String
        Get
            Return Me._registration_No
        End Get
        Set
            If (_registration_No <> value) Then
                Me._registration_No = value
                Me.NotifyPropertyChanged("Registration_No")
            End If
        End Set
    End Property
    
    <[Property]("AssetTypeID", ColumnType:="Int32")>  _
    Public Overridable Property AssetTypeID() As System.Nullable(Of Integer)
        Get
            Return Me._assetTypeID
        End Get
        Set
            If ((_assetTypeID <> value)  _
                        Or (_assetTypeID Is Nothing)) Then
                Me._assetTypeID = value
                Me.NotifyPropertyChanged("AssetTypeID")
            End If
        End Set
    End Property
    
    <[Property]("TipoMast", ColumnType:="String")>  _
    Public Overridable Property TipoMast() As String
        Get
            Return Me._tipoMast
        End Get
        Set
            If (_tipoMast <> value) Then
                Me._tipoMast = value
                Me.NotifyPropertyChanged("TipoMast")
            End If
        End Set
    End Property
    
    <[Property]("Attachments", ColumnType:="String")>  _
    Public Overridable Property Attachments() As String
        Get
            Return Me._attachments
        End Get
        Set
            If (_attachments <> value) Then
                Me._attachments = value
                Me.NotifyPropertyChanged("Attachments")
            End If
        End Set
    End Property
    
    <[Property]("IndentNo", ColumnType:="String")>  _
    Public Overridable Property IndentNo() As String
        Get
            Return Me._indentNo
        End Get
        Set
            If (_indentNo <> value) Then
                Me._indentNo = value
                Me.NotifyPropertyChanged("IndentNo")
            End If
        End Set
    End Property
    
    <[Property]("CombustionType", ColumnType:="String")>  _
    Public Overridable Property CombustionType() As String
        Get
            Return Me._combustionType
        End Get
        Set
            If (_combustionType <> value) Then
                Me._combustionType = value
                Me.NotifyPropertyChanged("CombustionType")
            End If
        End Set
    End Property
    
    <[Property]("LocalAssets", ColumnType:="Boolean")>  _
    Public Overridable Property LocalAssets() As System.Nullable(Of Boolean)
        Get
            Return Me._localAssets
        End Get
        Set
            If ((_localAssets <> value)  _
                        Or (_localAssets Is Nothing)) Then
                Me._localAssets = value
                Me.NotifyPropertyChanged("LocalAssets")
            End If
        End Set
    End Property
    
    <[Property]("StartDate", ColumnType:="DateTime")>  _
    Public Overridable Property StartDate() As System.Nullable(Of Date)
        Get
            Return Me._startDate
        End Get
        Set
            If ((_startDate <> value)  _
                        Or (_startDate Is Nothing)) Then
                Me._startDate = value
                Me.NotifyPropertyChanged("StartDate")
            End If
        End Set
    End Property
    
    <[Property]("EndDate", ColumnType:="DateTime")>  _
    Public Overridable Property EndDate() As System.Nullable(Of Date)
        Get
            Return Me._endDate
        End Get
        Set
            If ((_endDate <> value)  _
                        Or (_endDate Is Nothing)) Then
                Me._endDate = value
                Me.NotifyPropertyChanged("EndDate")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFAsset", Schema:="dbo")>  _
Partial Public Class Asset
    Inherits AssetBase
End Class

<Serializable()>  _
Partial Public MustInherit Class ServiceTemplateBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of ServiceTemplate)
    
    Private _code As String
    
    Private _description As String
    
    <[Property]("Code", ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFServiceTemplate", Schema:="dbo")>  _
Partial Public Class ServiceTemplate
    Inherits ServiceTemplateBase
End Class

<Serializable()>  _
Partial Public MustInherit Class ServiceTypeBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of ServiceType)
    
    Private _code As String
    
    Private _description As String
    
    <[Property]("Code", ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFServiceType", Schema:="dbo")>  _
Partial Public Class ServiceType
    Inherits ServiceTypeBase
End Class

<Serializable()>  _
Partial Public MustInherit Class AssetMeasurementBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of AssetMeasurement)
    
    Private _description As String
    
    Private _symbol As String
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("Symbol", ColumnType:="String")>  _
    Public Overridable Property Symbol() As String
        Get
            Return Me._symbol
        End Get
        Set
            If (_symbol <> value) Then
                Me._symbol = value
                Me.NotifyPropertyChanged("Symbol")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFAssetMeasurement", Schema:="dbo")>  _
Partial Public Class AssetMeasurement
    Inherits AssetMeasurementBase
End Class

<Serializable()>  _
Partial Public MustInherit Class WarehousesBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Warehouses)
    
    Private _code As String
    
    Private _name As String
    
    <[Property]("Code", ColumnType:="String", NotNull:=true)>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Name", ColumnType:="String", NotNull:=true)>  _
    Public Overridable Property Name() As String
        Get
            Return Me._name
        End Get
        Set
            If (_name <> value) Then
                Me._name = value
                Me.NotifyPropertyChanged("Name")
            End If
        End Set
    End Property
End Class

<ActiveRecord("WhseMst", Schema:="dbo")>  _
Partial Public Class Warehouses
    Inherits WarehousesBase
End Class

<Serializable()>  _
Partial Public MustInherit Class AssetClassBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of AssetClass)
    
    Private _code As String
    
    Private _description As String
    
    <[Property]("Code", ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFAssetClass", Schema:="dbo")>  _
Partial Public Class AssetClass
    Inherits AssetClassBase
End Class

<Serializable()>  _
Partial Public MustInherit Class EvoProjectBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of EvoProject)
    
    Private _code As String
    
    Private _name As String
    
    Private _active As System.Nullable(Of Boolean)
    
    Private _description As String
    
    <[Property]("Code", ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Name", ColumnType:="String")>  _
    Public Overridable Property Name() As String
        Get
            Return Me._name
        End Get
        Set
            If (_name <> value) Then
                Me._name = value
                Me.NotifyPropertyChanged("Name")
            End If
        End Set
    End Property
    
    <[Property]("Active", ColumnType:="Boolean")>  _
    Public Overridable Property Active() As System.Nullable(Of Boolean)
        Get
            Return Me._active
        End Get
        Set
            If ((_active <> value)  _
                        Or (_active Is Nothing)) Then
                Me._active = value
                Me.NotifyPropertyChanged("Active")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussEvoProject", Schema:="dbo")>  _
Partial Public Class EvoProject
    Inherits EvoProjectBase
End Class

<Serializable()>  _
Partial Public MustInherit Class AssetTypeBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of AssetType)
    
    Private _description As String
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFAssetType", Schema:="dbo")>  _
Partial Public Class AssetType
    Inherits AssetTypeBase
End Class

<Serializable()>  _
Partial Public MustInherit Class RequestTypeBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of RequestType)
    
    Private _code As String
    
    Private _description As String
    
    Private _active As System.Nullable(Of Boolean)
    
    <[Property]("Code", ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("Active", ColumnType:="Boolean")>  _
    Public Overridable Property Active() As System.Nullable(Of Boolean)
        Get
            Return Me._active
        End Get
        Set
            If ((_active <> value)  _
                        Or (_active Is Nothing)) Then
                Me._active = value
                Me.NotifyPropertyChanged("Active")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFRequestType", Schema:="dbo")>  _
Partial Public Class RequestType
    Inherits RequestTypeBase
End Class

<Serializable()>  _
Partial Public MustInherit Class ScheduleFrequencyBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of ScheduleFrequency)
    
    Private _code As String
    
    Private _description As String
    
    Private _templateID As System.Nullable(Of Integer)
    
    Private _requestTypeID As System.Nullable(Of Integer)
    
    Private _scheduleID As System.Nullable(Of Integer)
    
    Private _repeatAfter As System.Nullable(Of Integer)
    
    Private _typeID As System.Nullable(Of Integer)
    
    <[Property]("Code", ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If (_code <> value) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If (_description <> value) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("TemplateID", ColumnType:="Int32")>  _
    Public Overridable Property TemplateID() As System.Nullable(Of Integer)
        Get
            Return Me._templateID
        End Get
        Set
            If ((_templateID <> value)  _
                        Or (_templateID Is Nothing)) Then
                Me._templateID = value
                Me.NotifyPropertyChanged("TemplateID")
            End If
        End Set
    End Property
    
    <[Property]("RequestTypeID", ColumnType:="Int32")>  _
    Public Overridable Property RequestTypeID() As System.Nullable(Of Integer)
        Get
            Return Me._requestTypeID
        End Get
        Set
            If ((_requestTypeID <> value)  _
                        Or (_requestTypeID Is Nothing)) Then
                Me._requestTypeID = value
                Me.NotifyPropertyChanged("RequestTypeID")
            End If
        End Set
    End Property
    
    <[Property]("ScheduleID", ColumnType:="Int32")>  _
    Public Overridable Property ScheduleID() As System.Nullable(Of Integer)
        Get
            Return Me._scheduleID
        End Get
        Set
            If ((_scheduleID <> value)  _
                        Or (_scheduleID Is Nothing)) Then
                Me._scheduleID = value
                Me.NotifyPropertyChanged("ScheduleID")
            End If
        End Set
    End Property
    
    <[Property]("RepeatAfter", ColumnType:="Int32")>  _
    Public Overridable Property RepeatAfter() As System.Nullable(Of Integer)
        Get
            Return Me._repeatAfter
        End Get
        Set
            If ((_repeatAfter <> value)  _
                        Or (_repeatAfter Is Nothing)) Then
                Me._repeatAfter = value
                Me.NotifyPropertyChanged("RepeatAfter")
            End If
        End Set
    End Property
    
    <[Property]("TypeID", ColumnType:="Int32")>  _
    Public Overridable Property TypeID() As System.Nullable(Of Integer)
        Get
            Return Me._typeID
        End Get
        Set
            If ((_typeID <> value)  _
                        Or (_typeID Is Nothing)) Then
                Me._typeID = value
                Me.NotifyPropertyChanged("TypeID")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFScheduleFrequency", Schema:="dbo")>  _
Partial Public Class ScheduleFrequency
    Inherits ScheduleFrequencyBase
End Class

<Serializable()>  _
Partial Public MustInherit Class AssetScheduleBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of AssetSchedule)
    
    Private _assetID As System.Nullable(Of Integer)
    
    Private _sequence As System.Nullable(Of Integer)
    
    Private _scheduleID As System.Nullable(Of Integer)
    
    <[Property](ColumnType:="Int32")>  _
    Public Overridable Property AssetID() As System.Nullable(Of Integer)
        Get
            Return Me._assetID
        End Get
        Set
            If ((_assetID <> value)  _
                        Or (_assetID Is Nothing)) Then
                Me._assetID = value
                Me.NotifyPropertyChanged("AssetID")
            End If
        End Set
    End Property
    
    <[Property]("Sequence", ColumnType:="Int32")>  _
    Public Overridable Property Sequence() As System.Nullable(Of Integer)
        Get
            Return Me._sequence
        End Get
        Set
            If ((_sequence <> value)  _
                        Or (_sequence Is Nothing)) Then
                Me._sequence = value
                Me.NotifyPropertyChanged("Sequence")
            End If
        End Set
    End Property
    
    <[Property]("ScheduleID", ColumnType:="Int32")>  _
    Public Overridable Property ScheduleID() As System.Nullable(Of Integer)
        Get
            Return Me._scheduleID
        End Get
        Set
            If ((_scheduleID <> value)  _
                        Or (_scheduleID Is Nothing)) Then
                Me._scheduleID = value
                Me.NotifyPropertyChanged("ScheduleID")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSFAssetSchedule", Schema:="dbo")>  _
Partial Public Class AssetSchedule
    Inherits AssetScheduleBase
End Class

Public Class awShopFloorHelper
    
    Public Shared Function GetTypes() As Type()
        Return New Type() {GetType(Defaults), GetType(WorkCentre), GetType(Job), GetType(JobDelivery), GetType(JobLine), GetType(JobStage), GetType(JobType), GetType(JobTypeStageReport), GetType(JobTypeStage), GetType(Part), GetType(Drawing), GetType(Make), GetType(Model), GetType(PartGroup), GetType(SupplyScope), GetType(WorkCentreCategory), GetType([Function]), GetType(Generation), GetType(JobStageReport), GetType(JobStageFunction), GetType(JobFunctionControl), GetType(JobTemplate), GetType(JobTemplateLine), GetType(JobCategory), GetType(CommonLetter), GetType(JobTolerancePhotograph), GetType(JobTolerance), GetType(CostCentre), GetType(JobStageChecklist), GetType(Requisition), GetType(RequisitionLine), GetType(PurchaseOrder), GetType(PurchaseOrderLine), GetType(JobStageTrigger), GetType(JobStageFieldPrompt), GetType(Artisan), GetType(Note), GetType(JobMemo), GetType(JobMemoPhoto), GetType(JobDrawingAnnotation), GetType(Audit), GetType(JobNumbers), GetType(QuoteNumbers), GetType(Employee), GetType(SFCustomer), GetType(CustomerWorkCentreCategory), GetType(PublicHoliday), GetType(CustomerJobClass), GetType(JobLineTime), GetType(EmployeeQualification), GetType(InvoiceRun), GetType(InvoiceRunLine), GetType(Invoicelink), GetType(JobLineTimeAttachment), GetType(PaymentRun), GetType(PaymentRunTypes), GetType(PaymentFrequency), GetType(CompanyBranch), GetType(PaymentFrequencyType), GetType(JobAttachment), GetType(CancelReasonCode), GetType(ArchiveYear), GetType(JobSupplierDeliveryNote), GetType(ProformaInvoice), GetType(ProformaInvoiceLine), GetType(Asset), GetType(ServiceTemplate), GetType(ServiceType), GetType(AssetMeasurement), GetType(Warehouses), GetType(AssetClass), GetType(EvoProject), GetType(AssetType), GetType(RequestType), GetType(ScheduleFrequency), GetType(AssetSchedule)}
    End Function
End Class

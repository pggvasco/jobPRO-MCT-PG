Imports Castle.ActiveRecord
Imports UniSource

Public Class JobSupplierDeliveryNote

    Public Overrides Property DeliveryDate As Date?
        Get
            If MyBase.DeliveryDate Is Nothing Then
                MyBase.DeliveryDate = Now
                NotifyPropertyChanged("DeliveryDate")
            End If
            Return MyBase.DeliveryDate
        End Get
        Set(value As Date?)
            MyBase.DeliveryDate = value
        End Set
    End Property


    Public Overrides Property DeliveryNumber As String
        Get
            Return MyBase.DeliveryNumber
        End Get
        Set(value As String)
            MyBase.DeliveryNumber = value
        End Set
    End Property



    Public Overrides Function IsValid() As Boolean
        Dim valid As Boolean = MyBase.IsValid

        If Me.ID = 0 AndAlso Me.Job IsNot Nothing Then
            Dim SupplierQuantityDelivered As Integer? = Me.Job.SupplierQuantityDelivered
            Dim remainder As Integer? = Integer.Parse(IIf(Me.Job.Quantity.HasValue, Me.Job.Quantity, 0))

            remainder -= SupplierQuantityDelivered
            Me.Job.JobDeliveryList.ToString()

            If Me.Quantity > remainder Then
                If Not Me.PropertiesValidationErrorMessages.Contains(Me.GetType.GetProperty("Quantity")) Then
                    Me.PropertiesValidationErrorMessages.Add(Me.GetType.GetProperty("Quantity"), New ArrayList())
                End If
                Me.PropertiesValidationErrorMessages(Me.GetType.GetProperty("Quantity")).Add(String.Format("Quantity to deliver of {0} exceeds remaining Job quantity of {1}.", Me.Quantity, remainder))
                valid = False
            End If
        End If

        Dim qtyError As Boolean
        qtyError = Me.Quantity Is Nothing
        qtyError = Me.Quantity <= 0

        If qtyError Then
            If Not Me.PropertiesValidationErrorMessages.Contains(Me.GetType.GetProperty("Quantity")) Then
                Me.PropertiesValidationErrorMessages.Add(Me.GetType.GetProperty("Quantity"), New ArrayList())
            End If
            Me.PropertiesValidationErrorMessages(Me.GetType.GetProperty("Quantity")).Add(String.Format("Quantity greater than zero required."))
            valid = False
        End If

        If SupplierID Is Nothing Then
            If Not Me.PropertiesValidationErrorMessages.Contains(Me.GetType.GetProperty("SupplierID")) Then
                Me.PropertiesValidationErrorMessages.Add(Me.GetType.GetProperty("SupplierID"), New ArrayList())
            End If

            Me.PropertiesValidationErrorMessages(Me.GetType.GetProperty("SupplierID")).Add(String.Format("Select a supplier to continue."))
            valid = False
        End If
        Return valid
    End Function


    Protected Overrides Function BeforeSave(ByVal state As System.Collections.IDictionary) As Boolean
        If ID = 0 Then
            Dim AutoGenSuccess As Boolean = False
            Me.Job.SupplierQuantityDelivered += Me.Quantity
            If Defaults.Defaults.isSupplierDeliveryNoteNumberAutoGenerated Then
                While AutoGenSuccess = False
                    state("DeliveryNumber") = Defaults.Defaults.GetNextSupplierDeliveryNoteNumberAndIncrement(Me.Job)
                    AutoGenSuccess = True
                End While
            End If
        End If
        Return MyBase.BeforeSave(state)
    End Function


    Private WithEvents _jobSupplierDeliveryNoteJob As Job
    Public Overridable Overloads ReadOnly Property JobSupplierDeliveryNoteJob As Job
        Get
            If _jobSupplierDeliveryNoteJob Is Nothing AndAlso Me.Job.ID > 0 AndAlso (_jobSupplierDeliveryNoteJob Is Nothing OrElse _jobSupplierDeliveryNoteJob.ID <> Me.Job.ID) Then
                _jobSupplierDeliveryNoteJob = Me.Job
            End If
            Return _jobSupplierDeliveryNoteJob
        End Get

    End Property

    Private WithEvents _vendor As UniSource.Helper.ActiveRecord.Evolution.Vendor
    Public Overridable Overloads Property Vendor As UniSource.Helper.ActiveRecord.Evolution.Vendor
        Get
            If Me._vendor Is Nothing AndAlso Me.SupplierID > 0 AndAlso (_vendor Is Nothing OrElse _vendor.ID <> Me.SupplierID) Then
                _vendor = UniSource.Helper.ActiveRecord.Evolution.Vendor.Find(Me.SupplierID)
            End If
            Return _vendor
        End Get
        Set(value As UniSource.Helper.ActiveRecord.Evolution.Vendor)
            If value IsNot Nothing AndAlso value.ID > 0 Then
                Me.SupplierID = value.ID
                _vendor = value
            End If
        End Set
    End Property


End Class

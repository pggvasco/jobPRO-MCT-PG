'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.239
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports Castle.ActiveRecord
Imports System
Imports System.Collections
Imports System.Collections.Generic
Imports System.ComponentModel


<Serializable()>  _
Partial Public MustInherit Class LookupValueBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of LookupValue)
    
    Private _code As String
    
    Private _description As String
    
    Private _lookup As Lookup
    
    <[Property]("Code", ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If ((_code <> value)  _
                        Or (_code Is Nothing)) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If ((_description <> value)  _
                        Or (_description Is Nothing)) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <BelongsTo("LookupID")>  _
    Public Overridable Property Lookup() As Lookup
        Get
            Return Me._lookup
        End Get
        Set
            If ((_lookup <> value)  _
                        Or (_lookup Is Nothing)) Then
                Me._lookup = value
                Me.NotifyPropertyChanged("Lookup")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussSSLookupValues", Schema:="dbo")>  _
Partial Public Class LookupValue
    Inherits LookupValueBase
End Class

<Serializable()>  _
Partial Public MustInherit Class LookupBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Lookup)
    
    Private _code As String
    
    Private _description As String
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _ussSSLookupValues As IList(Of LookupValue) = New List(Of LookupValue)()
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _ussChecklistTasks As IList(Of ChecklistOption) = New List(Of ChecklistOption)()
    
    <[Property]("Code", ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If ((_code <> value)  _
                        Or (_code Is Nothing)) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If ((_description <> value)  _
                        Or (_description Is Nothing)) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(LookupValue), ColumnKey:="LookupID", Table:="ussSSLookupValues")>  _
    Public Overridable Property UssSSLookupValues() As IList(Of LookupValue)
        Get
            Return Me._ussSSLookupValues
        End Get
        Set
            Me._ussSSLookupValues = value
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(ChecklistOption), ColumnKey:="LookupID", Table:="ussChecklistTask")>  _
    Public Overridable Property UssChecklistTasks() As IList(Of ChecklistOption)
        Get
            Return Me._ussChecklistTasks
        End Get
        Set
            Me._ussChecklistTasks = value
        End Set
    End Property
End Class

<ActiveRecord("ussSSLookup", Schema:="dbo")>  _
Partial Public Class Lookup
    Inherits LookupBase
End Class

<Serializable()>  _
Partial Public MustInherit Class ChecklistTypeBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of ChecklistType)
    
    Private _code As String
    
    Private _description As String
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _ussChecklists As IList(Of Checklist) = New List(Of Checklist)()
    
    <[Property]("Code", ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If ((_code <> value)  _
                        Or (_code Is Nothing)) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If ((_description <> value)  _
                        Or (_description Is Nothing)) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(Checklist), ColumnKey:="TypeID", Table:="ussChecklist")>  _
    Public Overridable Property UssChecklists() As IList(Of Checklist)
        Get
            Return Me._ussChecklists
        End Get
        Set
            Me._ussChecklists = value
        End Set
    End Property
End Class

<ActiveRecord("ussChecklstType", Schema:="dbo")>  _
Partial Public Class ChecklistType
    Inherits ChecklistTypeBase
End Class

<Serializable()>  _
Partial Public MustInherit Class ChecklistTaskLogBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of ChecklistTaskLog)
    
    Private _checklistID As System.Nullable(Of Integer)
    
    Private _checklistTaskID As System.Nullable(Of Integer)
    
    Private _logDateTime As System.Nullable(Of Date)
    
    Private _document As String
    
    Private _value As String
    
    <[Property]("ChecklistID", ColumnType:="Int32")>  _
    Public Overridable Property ChecklistID() As System.Nullable(Of Integer)
        Get
            Return Me._checklistID
        End Get
        Set
            If ((_checklistID <> value)  _
                        Or (_checklistID Is Nothing)) Then
                Me._checklistID = value
                Me.NotifyPropertyChanged("ChecklistID")
            End If
        End Set
    End Property
    
    <[Property]("ChecklistTaskID", ColumnType:="Int32")>  _
    Public Overridable Property ChecklistTaskID() As System.Nullable(Of Integer)
        Get
            Return Me._checklistTaskID
        End Get
        Set
            If ((_checklistTaskID <> value)  _
                        Or (_checklistTaskID Is Nothing)) Then
                Me._checklistTaskID = value
                Me.NotifyPropertyChanged("ChecklistTaskID")
            End If
        End Set
    End Property
    
    <[Property]("LogDateTime", ColumnType:="Timestamp")>  _
    Public Overridable Property LogDateTime() As System.Nullable(Of Date)
        Get
            Return Me._logDateTime
        End Get
        Set
            If ((_logDateTime <> value)  _
                        Or (_logDateTime Is Nothing)) Then
                Me._logDateTime = value
                Me.NotifyPropertyChanged("LogDateTime")
            End If
        End Set
    End Property
    
    <[Property]("Document", ColumnType:="String")>  _
    Public Overridable Property Document() As String
        Get
            Return Me._document
        End Get
        Set
            If ((_document <> value)  _
                        Or (_document Is Nothing)) Then
                Me._document = value
                Me.NotifyPropertyChanged("Document")
            End If
        End Set
    End Property
    
    <[Property]("Value", ColumnType:="String")>  _
    Public Overridable Property Value() As String
        Get
            Return Me._value
        End Get
        Set
            If ((_value <> value)  _
                        Or (_value Is Nothing)) Then
                Me._value = value
                Me.NotifyPropertyChanged("Value")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussChecklistTaskLog", Schema:="dbo")>  _
Partial Public Class ChecklistTaskLog
    Inherits ChecklistTaskLogBase
End Class

<Serializable()>  _
Partial Public MustInherit Class ChecklistOptionBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of ChecklistOption)
    
    Private _description As String
    
    Private _longDescription As String
    
    Private _document As String
    
    Private _isForceValue As System.Nullable(Of Boolean)
    
    Private _defaultValue As String
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _ussChecklistChecklistTasks As IList(Of ChecklistChecklistOption) = New List(Of ChecklistChecklistOption)()
    
    Private _lookup As Lookup
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If ((_description <> value)  _
                        Or (_description Is Nothing)) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <[Property]("LongDescription", ColumnType:="String")>  _
    Public Overridable Property LongDescription() As String
        Get
            Return Me._longDescription
        End Get
        Set
            If ((_longDescription <> value)  _
                        Or (_longDescription Is Nothing)) Then
                Me._longDescription = value
                Me.NotifyPropertyChanged("LongDescription")
            End If
        End Set
    End Property
    
    <[Property]("Document", ColumnType:="String")>  _
    Public Overridable Property Document() As String
        Get
            Return Me._document
        End Get
        Set
            If ((_document <> value)  _
                        Or (_document Is Nothing)) Then
                Me._document = value
                Me.NotifyPropertyChanged("Document")
            End If
        End Set
    End Property
    
    <[Property]("IsForceValue", ColumnType:="Boolean")>  _
    Public Overridable Property IsForceValue() As System.Nullable(Of Boolean)
        Get
            Return Me._isForceValue
        End Get
        Set
            If ((_isForceValue <> value)  _
                        Or (_isForceValue Is Nothing)) Then
                Me._isForceValue = value
                Me.NotifyPropertyChanged("IsForceValue")
            End If
        End Set
    End Property
    
    <[Property]("DefaultValue", ColumnType:="String")>  _
    Public Overridable Property DefaultValue() As String
        Get
            Return Me._defaultValue
        End Get
        Set
            If ((_defaultValue <> value)  _
                        Or (_defaultValue Is Nothing)) Then
                Me._defaultValue = value
                Me.NotifyPropertyChanged("DefaultValue")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(ChecklistChecklistOption), ColumnKey:="ChecklistTaskID", Table:="ussChecklistChecklistTasks")>  _
    Public Overridable Property UssChecklistChecklistTasks() As IList(Of ChecklistChecklistOption)
        Get
            Return Me._ussChecklistChecklistTasks
        End Get
        Set
            Me._ussChecklistChecklistTasks = value
        End Set
    End Property
    
    <BelongsTo("LookupID")>  _
    Public Overridable Property Lookup() As Lookup
        Get
            Return Me._lookup
        End Get
        Set
            If ((_lookup <> value)  _
                        Or (_lookup Is Nothing)) Then
                Me._lookup = value
                Me.NotifyPropertyChanged("Lookup")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussChecklistTask", Schema:="dbo")>  _
Partial Public Class ChecklistOption
    Inherits ChecklistOptionBase
End Class

<Serializable()>  _
Partial Public MustInherit Class ChecklistLogBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of ChecklistLog)
    
    Private _checklistID As System.Nullable(Of Integer)
    
    Private _agentID As System.Nullable(Of Integer)
    
    Private _agentName As String
    
    Private _startDateTime As System.Nullable(Of Date)
    
    Private _endDateTime As System.Nullable(Of Date)
    
    <[Property]("ChecklistID", ColumnType:="Int32")>  _
    Public Overridable Property ChecklistID() As System.Nullable(Of Integer)
        Get
            Return Me._checklistID
        End Get
        Set
            If ((_checklistID <> value)  _
                        Or (_checklistID Is Nothing)) Then
                Me._checklistID = value
                Me.NotifyPropertyChanged("ChecklistID")
            End If
        End Set
    End Property
    
    <[Property]("AgentID", ColumnType:="Int32")>  _
    Public Overridable Property AgentID() As System.Nullable(Of Integer)
        Get
            Return Me._agentID
        End Get
        Set
            If ((_agentID <> value)  _
                        Or (_agentID Is Nothing)) Then
                Me._agentID = value
                Me.NotifyPropertyChanged("AgentID")
            End If
        End Set
    End Property
    
    <[Property]("AgentName", ColumnType:="String")>  _
    Public Overridable Property AgentName() As String
        Get
            Return Me._agentName
        End Get
        Set
            If ((_agentName <> value)  _
                        Or (_agentName Is Nothing)) Then
                Me._agentName = value
                Me.NotifyPropertyChanged("AgentName")
            End If
        End Set
    End Property
    
    <[Property]("StartDateTime", ColumnType:="Timestamp")>  _
    Public Overridable Property StartDateTime() As System.Nullable(Of Date)
        Get
            Return Me._startDateTime
        End Get
        Set
            If ((_startDateTime <> value)  _
                        Or (_startDateTime Is Nothing)) Then
                Me._startDateTime = value
                Me.NotifyPropertyChanged("StartDateTime")
            End If
        End Set
    End Property
    
    <[Property]("EndDateTime", ColumnType:="Timestamp")>  _
    Public Overridable Property EndDateTime() As System.Nullable(Of Date)
        Get
            Return Me._endDateTime
        End Get
        Set
            If ((_endDateTime <> value)  _
                        Or (_endDateTime Is Nothing)) Then
                Me._endDateTime = value
                Me.NotifyPropertyChanged("EndDateTime")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussChecklistLog", Schema:="dbo")>  _
Partial Public Class ChecklistLog
    Inherits ChecklistLogBase
End Class

<Serializable()>  _
Partial Public MustInherit Class ChecklistChecklistOptionBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of ChecklistChecklistOption)
    
    Private _sequence As System.Nullable(Of Integer)
    
    Private _checklistOption As ChecklistOption
    
    Private _checklist As Checklist
    
    <[Property]("Sequence", ColumnType:="Int32")>  _
    Public Overridable Property Sequence() As System.Nullable(Of Integer)
        Get
            Return Me._sequence
        End Get
        Set
            If ((_sequence <> value)  _
                        Or (_sequence Is Nothing)) Then
                Me._sequence = value
                Me.NotifyPropertyChanged("Sequence")
            End If
        End Set
    End Property
    
    <BelongsTo("ChecklistTaskID")>  _
    Public Overridable Property ChecklistOption() As ChecklistOption
        Get
            Return Me._checklistOption
        End Get
        Set
            If ((_checklistOption <> value)  _
                        Or (_checklistOption Is Nothing)) Then
                Me._checklistOption = value
                Me.NotifyPropertyChanged("ChecklistOption")
            End If
        End Set
    End Property
    
    <BelongsTo("ChecklistID")>  _
    Public Overridable Property Checklist() As Checklist
        Get
            Return Me._checklist
        End Get
        Set
            If ((_checklist <> value)  _
                        Or (_checklist Is Nothing)) Then
                Me._checklist = value
                Me.NotifyPropertyChanged("Checklist")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussChecklistChecklistTasks", Schema:="dbo")>  _
Partial Public Class ChecklistChecklistOption
    Inherits ChecklistChecklistOptionBase
End Class

<Serializable()>  _
Partial Public MustInherit Class ChecklistBase
    Inherits UniSource.Helper.ActiveRecord.AREquatableBase(Of Checklist)
    
    Private _code As String
    
    Private _description As String
    
    <Xml.Serialization.XmlIgnore()>  _
    Private _ussChecklistChecklistTasks As IList(Of ChecklistChecklistOption) = New List(Of ChecklistChecklistOption)()
    
    Private _checklistType As ChecklistType
    
    <[Property]("Code", ColumnType:="String")>  _
    Public Overridable Property Code() As String
        Get
            Return Me._code
        End Get
        Set
            If ((_code <> value)  _
                        Or (_code Is Nothing)) Then
                Me._code = value
                Me.NotifyPropertyChanged("Code")
            End If
        End Set
    End Property
    
    <[Property]("Description", ColumnType:="String")>  _
    Public Overridable Property Description() As String
        Get
            Return Me._description
        End Get
        Set
            If ((_description <> value)  _
                        Or (_description Is Nothing)) Then
                Me._description = value
                Me.NotifyPropertyChanged("Description")
            End If
        End Set
    End Property
    
    <Xml.Serialization.XmlIgnore(),  _
     HasMany(GetType(ChecklistChecklistOption), ColumnKey:="ChecklistID", Table:="ussChecklistChecklistTasks")>  _
    Public Overridable Property UssChecklistChecklistTasks() As IList(Of ChecklistChecklistOption)
        Get
            Return Me._ussChecklistChecklistTasks
        End Get
        Set
            Me._ussChecklistChecklistTasks = value
        End Set
    End Property
    
    <BelongsTo("TypeID")>  _
    Public Overridable Property ChecklistType() As ChecklistType
        Get
            Return Me._checklistType
        End Get
        Set
            If ((_checklistType <> value)  _
                        Or (_checklistType Is Nothing)) Then
                Me._checklistType = value
                Me.NotifyPropertyChanged("ChecklistType")
            End If
        End Set
    End Property
End Class

<ActiveRecord("ussChecklist", Schema:="dbo")>  _
Partial Public Class Checklist
    Inherits ChecklistBase
End Class

Public Class awChecklistHelper
    
    Public Shared Function GetTypes() As Type()
        Return New Type() {GetType(LookupValue), GetType(Lookup), GetType(ChecklistType), GetType(ChecklistTaskLog), GetType(ChecklistOption), GetType(ChecklistLog), GetType(ChecklistChecklistOption), GetType(Checklist)}
    End Function
End Class
